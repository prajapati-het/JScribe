{
  "version": 3,
  "sources": ["../../@codemirror/legacy-modes/mode/textile.js"],
  "sourcesContent": ["var TOKEN_STYLES = {\r\n  addition: \"inserted\",\r\n  attributes: \"propertyName\",\r\n  bold: \"strong\",\r\n  cite: \"keyword\",\r\n  code: \"monospace\",\r\n  definitionList: \"list\",\r\n  deletion: \"deleted\",\r\n  div: \"punctuation\",\r\n  em: \"emphasis\",\r\n  footnote: \"variable\",\r\n  footCite: \"qualifier\",\r\n  header: \"heading\",\r\n  html: \"comment\",\r\n  image: \"atom\",\r\n  italic: \"emphasis\",\r\n  link: \"link\",\r\n  linkDefinition: \"link\",\r\n  list1: \"list\",\r\n  list2: \"list.special\",\r\n  list3: \"list\",\r\n  notextile: \"string.special\",\r\n  pre: \"operator\",\r\n  p: \"content\",\r\n  quote: \"bracket\",\r\n  span: \"quote\",\r\n  specialChar: \"character\",\r\n  strong: \"strong\",\r\n  sub: \"content.special\",\r\n  sup: \"content.special\",\r\n  table: \"variableName.special\",\r\n  tableHeading: \"operator\"\r\n};\r\n\r\nfunction startNewLine(stream, state) {\r\n  state.mode = Modes.newLayout;\r\n  state.tableHeading = false;\r\n\r\n  if (state.layoutType === \"definitionList\" && state.spanningLayout &&\r\n      stream.match(RE(\"definitionListEnd\"), false))\r\n    state.spanningLayout = false;\r\n}\r\n\r\nfunction handlePhraseModifier(stream, state, ch) {\r\n  if (ch === \"_\") {\r\n    if (stream.eat(\"_\"))\r\n      return togglePhraseModifier(stream, state, \"italic\", /__/, 2);\r\n    else\r\n      return togglePhraseModifier(stream, state, \"em\", /_/, 1);\r\n  }\r\n\r\n  if (ch === \"*\") {\r\n    if (stream.eat(\"*\")) {\r\n      return togglePhraseModifier(stream, state, \"bold\", /\\*\\*/, 2);\r\n    }\r\n    return togglePhraseModifier(stream, state, \"strong\", /\\*/, 1);\r\n  }\r\n\r\n  if (ch === \"[\") {\r\n    if (stream.match(/\\d+\\]/)) state.footCite = true;\r\n    return tokenStyles(state);\r\n  }\r\n\r\n  if (ch === \"(\") {\r\n    var spec = stream.match(/^(r|tm|c)\\)/);\r\n    if (spec)\r\n      return TOKEN_STYLES.specialChar\r\n  }\r\n\r\n  if (ch === \"<\" && stream.match(/(\\w+)[^>]+>[^<]+<\\/\\1>/))\r\n    return TOKEN_STYLES.html\r\n\r\n  if (ch === \"?\" && stream.eat(\"?\"))\r\n    return togglePhraseModifier(stream, state, \"cite\", /\\?\\?/, 2);\r\n\r\n  if (ch === \"=\" && stream.eat(\"=\"))\r\n    return togglePhraseModifier(stream, state, \"notextile\", /==/, 2);\r\n\r\n  if (ch === \"-\" && !stream.eat(\"-\"))\r\n    return togglePhraseModifier(stream, state, \"deletion\", /-/, 1);\r\n\r\n  if (ch === \"+\")\r\n    return togglePhraseModifier(stream, state, \"addition\", /\\+/, 1);\r\n\r\n  if (ch === \"~\")\r\n    return togglePhraseModifier(stream, state, \"sub\", /~/, 1);\r\n\r\n  if (ch === \"^\")\r\n    return togglePhraseModifier(stream, state, \"sup\", /\\^/, 1);\r\n\r\n  if (ch === \"%\")\r\n    return togglePhraseModifier(stream, state, \"span\", /%/, 1);\r\n\r\n  if (ch === \"@\")\r\n    return togglePhraseModifier(stream, state, \"code\", /@/, 1);\r\n\r\n  if (ch === \"!\") {\r\n    var type = togglePhraseModifier(stream, state, \"image\", /(?:\\([^\\)]+\\))?!/, 1);\r\n    stream.match(/^:\\S+/); // optional Url portion\r\n    return type;\r\n  }\r\n  return tokenStyles(state);\r\n}\r\n\r\nfunction togglePhraseModifier(stream, state, phraseModifier, closeRE, openSize) {\r\n  var charBefore = stream.pos > openSize ? stream.string.charAt(stream.pos - openSize - 1) : null;\r\n  var charAfter = stream.peek();\r\n  if (state[phraseModifier]) {\r\n    if ((!charAfter || /\\W/.test(charAfter)) && charBefore && /\\S/.test(charBefore)) {\r\n      var type = tokenStyles(state);\r\n      state[phraseModifier] = false;\r\n      return type;\r\n    }\r\n  } else if ((!charBefore || /\\W/.test(charBefore)) && charAfter && /\\S/.test(charAfter) &&\r\n             stream.match(new RegExp(\"^.*\\\\S\" + closeRE.source + \"(?:\\\\W|$)\"), false)) {\r\n    state[phraseModifier] = true;\r\n    state.mode = Modes.attributes;\r\n  }\r\n  return tokenStyles(state);\r\n};\r\n\r\nfunction tokenStyles(state) {\r\n  var disabled = textileDisabled(state);\r\n  if (disabled) return disabled;\r\n\r\n  var styles = [];\r\n  if (state.layoutType) styles.push(TOKEN_STYLES[state.layoutType]);\r\n\r\n  styles = styles.concat(activeStyles(\r\n    state, \"addition\", \"bold\", \"cite\", \"code\", \"deletion\", \"em\", \"footCite\",\r\n    \"image\", \"italic\", \"link\", \"span\", \"strong\", \"sub\", \"sup\", \"table\", \"tableHeading\"));\r\n\r\n  if (state.layoutType === \"header\")\r\n    styles.push(TOKEN_STYLES.header + \"-\" + state.header);\r\n\r\n  return styles.length ? styles.join(\" \") : null;\r\n}\r\n\r\nfunction textileDisabled(state) {\r\n  var type = state.layoutType;\r\n\r\n  switch(type) {\r\n  case \"notextile\":\r\n  case \"code\":\r\n  case \"pre\":\r\n    return TOKEN_STYLES[type];\r\n  default:\r\n    if (state.notextile)\r\n      return TOKEN_STYLES.notextile + (type ? (\" \" + TOKEN_STYLES[type]) : \"\");\r\n    return null;\r\n  }\r\n}\r\n\r\nfunction activeStyles(state) {\r\n  var styles = [];\r\n  for (var i = 1; i < arguments.length; ++i) {\r\n    if (state[arguments[i]])\r\n      styles.push(TOKEN_STYLES[arguments[i]]);\r\n  }\r\n  return styles;\r\n}\r\n\r\nfunction blankLine(state) {\r\n  var spanningLayout = state.spanningLayout, type = state.layoutType;\r\n\r\n  for (var key in state) if (state.hasOwnProperty(key))\r\n    delete state[key];\r\n\r\n  state.mode = Modes.newLayout;\r\n  if (spanningLayout) {\r\n    state.layoutType = type;\r\n    state.spanningLayout = true;\r\n  }\r\n}\r\n\r\nvar REs = {\r\n  cache: {},\r\n  single: {\r\n    bc: \"bc\",\r\n    bq: \"bq\",\r\n    definitionList: /- .*?:=+/,\r\n    definitionListEnd: /.*=:\\s*$/,\r\n    div: \"div\",\r\n    drawTable: /\\|.*\\|/,\r\n    foot: /fn\\d+/,\r\n    header: /h[1-6]/,\r\n    html: /\\s*<(?:\\/)?(\\w+)(?:[^>]+)?>(?:[^<]+<\\/\\1>)?/,\r\n    link: /[^\"]+\":\\S/,\r\n    linkDefinition: /\\[[^\\s\\]]+\\]\\S+/,\r\n    list: /(?:#+|\\*+)/,\r\n    notextile: \"notextile\",\r\n    para: \"p\",\r\n    pre: \"pre\",\r\n    table: \"table\",\r\n    tableCellAttributes: /[\\/\\\\]\\d+/,\r\n    tableHeading: /\\|_\\./,\r\n    tableText: /[^\"_\\*\\[\\(\\?\\+~\\^%@|-]+/,\r\n    text: /[^!\"_=\\*\\[\\(<\\?\\+~\\^%@-]+/\r\n  },\r\n  attributes: {\r\n    align: /(?:<>|<|>|=)/,\r\n    selector: /\\([^\\(][^\\)]+\\)/,\r\n    lang: /\\[[^\\[\\]]+\\]/,\r\n    pad: /(?:\\(+|\\)+){1,2}/,\r\n    css: /\\{[^\\}]+\\}/\r\n  },\r\n  createRe: function(name) {\r\n    switch (name) {\r\n    case \"drawTable\":\r\n      return REs.makeRe(\"^\", REs.single.drawTable, \"$\");\r\n    case \"html\":\r\n      return REs.makeRe(\"^\", REs.single.html, \"(?:\", REs.single.html, \")*\", \"$\");\r\n    case \"linkDefinition\":\r\n      return REs.makeRe(\"^\", REs.single.linkDefinition, \"$\");\r\n    case \"listLayout\":\r\n      return REs.makeRe(\"^\", REs.single.list, RE(\"allAttributes\"), \"*\\\\s+\");\r\n    case \"tableCellAttributes\":\r\n      return REs.makeRe(\"^\", REs.choiceRe(REs.single.tableCellAttributes,\r\n                                          RE(\"allAttributes\")), \"+\\\\.\");\r\n    case \"type\":\r\n      return REs.makeRe(\"^\", RE(\"allTypes\"));\r\n    case \"typeLayout\":\r\n      return REs.makeRe(\"^\", RE(\"allTypes\"), RE(\"allAttributes\"),\r\n                        \"*\\\\.\\\\.?\", \"(\\\\s+|$)\");\r\n    case \"attributes\":\r\n      return REs.makeRe(\"^\", RE(\"allAttributes\"), \"+\");\r\n\r\n    case \"allTypes\":\r\n      return REs.choiceRe(REs.single.div, REs.single.foot,\r\n                          REs.single.header, REs.single.bc, REs.single.bq,\r\n                          REs.single.notextile, REs.single.pre, REs.single.table,\r\n                          REs.single.para);\r\n\r\n    case \"allAttributes\":\r\n      return REs.choiceRe(REs.attributes.selector, REs.attributes.css,\r\n                          REs.attributes.lang, REs.attributes.align, REs.attributes.pad);\r\n\r\n    default:\r\n      return REs.makeRe(\"^\", REs.single[name]);\r\n    }\r\n  },\r\n  makeRe: function() {\r\n    var pattern = \"\";\r\n    for (var i = 0; i < arguments.length; ++i) {\r\n      var arg = arguments[i];\r\n      pattern += (typeof arg === \"string\") ? arg : arg.source;\r\n    }\r\n    return new RegExp(pattern);\r\n  },\r\n  choiceRe: function() {\r\n    var parts = [arguments[0]];\r\n    for (var i = 1; i < arguments.length; ++i) {\r\n      parts[i * 2 - 1] = \"|\";\r\n      parts[i * 2] = arguments[i];\r\n    }\r\n\r\n    parts.unshift(\"(?:\");\r\n    parts.push(\")\");\r\n    return REs.makeRe.apply(null, parts);\r\n  }\r\n};\r\n\r\nfunction RE(name) {\r\n  return (REs.cache[name] || (REs.cache[name] = REs.createRe(name)));\r\n}\r\n\r\nvar Modes = {\r\n  newLayout: function(stream, state) {\r\n    if (stream.match(RE(\"typeLayout\"), false)) {\r\n      state.spanningLayout = false;\r\n      return (state.mode = Modes.blockType)(stream, state);\r\n    }\r\n    var newMode;\r\n    if (!textileDisabled(state)) {\r\n      if (stream.match(RE(\"listLayout\"), false))\r\n        newMode = Modes.list;\r\n      else if (stream.match(RE(\"drawTable\"), false))\r\n        newMode = Modes.table;\r\n      else if (stream.match(RE(\"linkDefinition\"), false))\r\n        newMode = Modes.linkDefinition;\r\n      else if (stream.match(RE(\"definitionList\")))\r\n        newMode = Modes.definitionList;\r\n      else if (stream.match(RE(\"html\"), false))\r\n        newMode = Modes.html;\r\n    }\r\n    return (state.mode = (newMode || Modes.text))(stream, state);\r\n  },\r\n\r\n  blockType: function(stream, state) {\r\n    var match, type;\r\n    state.layoutType = null;\r\n\r\n    if (match = stream.match(RE(\"type\")))\r\n      type = match[0];\r\n    else\r\n      return (state.mode = Modes.text)(stream, state);\r\n\r\n    if (match = type.match(RE(\"header\"))) {\r\n      state.layoutType = \"header\";\r\n      state.header = parseInt(match[0][1]);\r\n    } else if (type.match(RE(\"bq\"))) {\r\n      state.layoutType = \"quote\";\r\n    } else if (type.match(RE(\"bc\"))) {\r\n      state.layoutType = \"code\";\r\n    } else if (type.match(RE(\"foot\"))) {\r\n      state.layoutType = \"footnote\";\r\n    } else if (type.match(RE(\"notextile\"))) {\r\n      state.layoutType = \"notextile\";\r\n    } else if (type.match(RE(\"pre\"))) {\r\n      state.layoutType = \"pre\";\r\n    } else if (type.match(RE(\"div\"))) {\r\n      state.layoutType = \"div\";\r\n    } else if (type.match(RE(\"table\"))) {\r\n      state.layoutType = \"table\";\r\n    }\r\n\r\n    state.mode = Modes.attributes;\r\n    return tokenStyles(state);\r\n  },\r\n\r\n  text: function(stream, state) {\r\n    if (stream.match(RE(\"text\"))) return tokenStyles(state);\r\n\r\n    var ch = stream.next();\r\n    if (ch === '\"')\r\n      return (state.mode = Modes.link)(stream, state);\r\n    return handlePhraseModifier(stream, state, ch);\r\n  },\r\n\r\n  attributes: function(stream, state) {\r\n    state.mode = Modes.layoutLength;\r\n\r\n    if (stream.match(RE(\"attributes\")))\r\n      return TOKEN_STYLES.attributes\r\n    else\r\n      return tokenStyles(state);\r\n  },\r\n\r\n  layoutLength: function(stream, state) {\r\n    if (stream.eat(\".\") && stream.eat(\".\"))\r\n      state.spanningLayout = true;\r\n\r\n    state.mode = Modes.text;\r\n    return tokenStyles(state);\r\n  },\r\n\r\n  list: function(stream, state) {\r\n    var match = stream.match(RE(\"list\"));\r\n    state.listDepth = match[0].length;\r\n    var listMod = (state.listDepth - 1) % 3;\r\n    if (!listMod)\r\n      state.layoutType = \"list1\";\r\n    else if (listMod === 1)\r\n      state.layoutType = \"list2\";\r\n    else\r\n      state.layoutType = \"list3\";\r\n\r\n    state.mode = Modes.attributes;\r\n    return tokenStyles(state);\r\n  },\r\n\r\n  link: function(stream, state) {\r\n    state.mode = Modes.text;\r\n    if (stream.match(RE(\"link\"))) {\r\n      stream.match(/\\S+/);\r\n      return TOKEN_STYLES.link\r\n    }\r\n    return tokenStyles(state);\r\n  },\r\n\r\n  linkDefinition: function(stream) {\r\n    stream.skipToEnd();\r\n    return TOKEN_STYLES.linkDefinition\r\n  },\r\n\r\n  definitionList: function(stream, state) {\r\n    stream.match(RE(\"definitionList\"));\r\n\r\n    state.layoutType = \"definitionList\";\r\n\r\n    if (stream.match(/\\s*$/))\r\n      state.spanningLayout = true;\r\n    else\r\n      state.mode = Modes.attributes;\r\n\r\n    return tokenStyles(state);\r\n  },\r\n\r\n  html: function(stream) {\r\n    stream.skipToEnd();\r\n    return TOKEN_STYLES.html\r\n  },\r\n\r\n  table: function(stream, state) {\r\n    state.layoutType = \"table\";\r\n    return (state.mode = Modes.tableCell)(stream, state);\r\n  },\r\n\r\n  tableCell: function(stream, state) {\r\n    if (stream.match(RE(\"tableHeading\")))\r\n      state.tableHeading = true;\r\n    else\r\n      stream.eat(\"|\");\r\n\r\n    state.mode = Modes.tableCellAttributes;\r\n    return tokenStyles(state);\r\n  },\r\n\r\n  tableCellAttributes: function(stream, state) {\r\n    state.mode = Modes.tableText;\r\n\r\n    if (stream.match(RE(\"tableCellAttributes\")))\r\n      return TOKEN_STYLES.attributes\r\n    else\r\n      return tokenStyles(state);\r\n  },\r\n\r\n  tableText: function(stream, state) {\r\n    if (stream.match(RE(\"tableText\")))\r\n      return tokenStyles(state);\r\n\r\n    if (stream.peek() === \"|\") { // end of cell\r\n      state.mode = Modes.tableCell;\r\n      return tokenStyles(state);\r\n    }\r\n    return handlePhraseModifier(stream, state, stream.next());\r\n  }\r\n};\r\n\r\nexport const textile = {\r\n  name: \"textile\",\r\n  startState: function() {\r\n    return { mode: Modes.newLayout };\r\n  },\r\n  token: function(stream, state) {\r\n    if (stream.sol()) startNewLine(stream, state);\r\n    return state.mode(stream, state);\r\n  },\r\n  blankLine: blankLine\r\n};\r\n"],
  "mappings": "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",
  "names": []
}
