{
  "version": 3,
  "sources": ["../../@codemirror/legacy-modes/mode/forth.js"],
  "sourcesContent": ["function toWordList(words) {\r\n  var ret = [];\r\n  words.split(' ').forEach(function(e){\r\n    ret.push({name: e});\r\n  });\r\n  return ret;\r\n}\r\n\r\nvar coreWordList = toWordList(\r\n  'INVERT AND OR XOR\\\r\n 2* 2/ LSHIFT RSHIFT\\\r\n 0= = 0< < > U< MIN MAX\\\r\n 2DROP 2DUP 2OVER 2SWAP ?DUP DEPTH DROP DUP OVER ROT SWAP\\\r\n >R R> R@\\\r\n + - 1+ 1- ABS NEGATE\\\r\n S>D * M* UM*\\\r\n FM/MOD SM/REM UM/MOD */ */MOD / /MOD MOD\\\r\n HERE , @ ! CELL+ CELLS C, C@ C! CHARS 2@ 2!\\\r\n ALIGN ALIGNED +! ALLOT\\\r\n CHAR [CHAR] [ ] BL\\\r\n FIND EXECUTE IMMEDIATE COUNT LITERAL STATE\\\r\n ; DOES> >BODY\\\r\n EVALUATE\\\r\n SOURCE >IN\\\r\n <# # #S #> HOLD SIGN BASE >NUMBER HEX DECIMAL\\\r\n FILL MOVE\\\r\n . CR EMIT SPACE SPACES TYPE U. .R U.R\\\r\n ACCEPT\\\r\n TRUE FALSE\\\r\n <> U> 0<> 0>\\\r\n NIP TUCK ROLL PICK\\\r\n 2>R 2R@ 2R>\\\r\n WITHIN UNUSED MARKER\\\r\n I J\\\r\n TO\\\r\n COMPILE, [COMPILE]\\\r\n SAVE-INPUT RESTORE-INPUT\\\r\n PAD ERASE\\\r\n 2LITERAL DNEGATE\\\r\n D- D+ D0< D0= D2* D2/ D< D= DMAX DMIN D>S DABS\\\r\n M+ M*/ D. D.R 2ROT DU<\\\r\n CATCH THROW\\\r\n FREE RESIZE ALLOCATE\\\r\n CS-PICK CS-ROLL\\\r\n GET-CURRENT SET-CURRENT FORTH-WORDLIST GET-ORDER SET-ORDER\\\r\n PREVIOUS SEARCH-WORDLIST WORDLIST FIND ALSO ONLY FORTH DEFINITIONS ORDER\\\r\n -TRAILING /STRING SEARCH COMPARE CMOVE CMOVE> BLANK SLITERAL');\r\n\r\nvar immediateWordList = toWordList('IF ELSE THEN BEGIN WHILE REPEAT UNTIL RECURSE [IF] [ELSE] [THEN] ?DO DO LOOP +LOOP UNLOOP LEAVE EXIT AGAIN CASE OF ENDOF ENDCASE');\r\n\r\nfunction searchWordList (wordList, word) {\r\n  var i;\r\n  for (i = wordList.length - 1; i >= 0; i--) {\r\n    if (wordList[i].name === word.toUpperCase()) {\r\n      return wordList[i];\r\n    }\r\n  }\r\n  return undefined;\r\n}\r\nexport const forth = {\r\n  name: \"forth\",\r\n  startState: function() {\r\n    return {\r\n      state: '',\r\n      base: 10,\r\n      coreWordList: coreWordList,\r\n      immediateWordList: immediateWordList,\r\n      wordList: []\r\n    };\r\n  },\r\n  token: function (stream, stt) {\r\n    var mat;\r\n    if (stream.eatSpace()) {\r\n      return null;\r\n    }\r\n    if (stt.state === '') { // interpretation\r\n      if (stream.match(/^(\\]|:NONAME)(\\s|$)/i)) {\r\n        stt.state = ' compilation';\r\n        return 'builtin';\r\n      }\r\n      mat = stream.match(/^(\\:)\\s+(\\S+)(\\s|$)+/);\r\n      if (mat) {\r\n        stt.wordList.push({name: mat[2].toUpperCase()});\r\n        stt.state = ' compilation';\r\n        return 'def';\r\n      }\r\n      mat = stream.match(/^(VARIABLE|2VARIABLE|CONSTANT|2CONSTANT|CREATE|POSTPONE|VALUE|WORD)\\s+(\\S+)(\\s|$)+/i);\r\n      if (mat) {\r\n        stt.wordList.push({name: mat[2].toUpperCase()});\r\n        return 'def';\r\n      }\r\n      mat = stream.match(/^(\\'|\\[\\'\\])\\s+(\\S+)(\\s|$)+/);\r\n      if (mat) {\r\n        return 'builtin'\r\n      }\r\n    } else { // compilation\r\n      // ; [\r\n      if (stream.match(/^(\\;|\\[)(\\s)/)) {\r\n        stt.state = '';\r\n        stream.backUp(1);\r\n        return 'builtin';\r\n      }\r\n      if (stream.match(/^(\\;|\\[)($)/)) {\r\n        stt.state = '';\r\n        return 'builtin';\r\n      }\r\n      if (stream.match(/^(POSTPONE)\\s+\\S+(\\s|$)+/)) {\r\n        return 'builtin';\r\n      }\r\n    }\r\n\r\n    // dynamic wordlist\r\n    mat = stream.match(/^(\\S+)(\\s+|$)/);\r\n    if (mat) {\r\n      if (searchWordList(stt.wordList, mat[1]) !== undefined) {\r\n        return 'variable';\r\n      }\r\n\r\n      // comments\r\n      if (mat[1] === '\\\\') {\r\n        stream.skipToEnd();\r\n        return 'comment';\r\n      }\r\n\r\n      // core words\r\n      if (searchWordList(stt.coreWordList, mat[1]) !== undefined) {\r\n        return 'builtin';\r\n      }\r\n      if (searchWordList(stt.immediateWordList, mat[1]) !== undefined) {\r\n        return 'keyword';\r\n      }\r\n\r\n      if (mat[1] === '(') {\r\n        stream.eatWhile(function (s) { return s !== ')'; });\r\n        stream.eat(')');\r\n        return 'comment';\r\n      }\r\n\r\n      // // strings\r\n      if (mat[1] === '.(') {\r\n        stream.eatWhile(function (s) { return s !== ')'; });\r\n        stream.eat(')');\r\n        return 'string';\r\n      }\r\n      if (mat[1] === 'S\"' || mat[1] === '.\"' || mat[1] === 'C\"') {\r\n        stream.eatWhile(function (s) { return s !== '\"'; });\r\n        stream.eat('\"');\r\n        return 'string';\r\n      }\r\n\r\n      // numbers\r\n      if (mat[1] - 0xfffffffff) {\r\n        return 'number';\r\n      }\r\n      // if (mat[1].match(/^[-+]?[0-9]+\\.[0-9]*/)) {\r\n      //     return 'number';\r\n      // }\r\n\r\n      return 'atom';\r\n    }\r\n  }\r\n};\r\n"],
  "mappings": "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",
  "names": []
}
