{
  "version": 3,
  "sources": ["../../@codemirror/legacy-modes/mode/commonlisp.js"],
  "sourcesContent": ["var specialForm = /^(block|let*|return-from|catch|load-time-value|setq|eval-when|locally|symbol-macrolet|flet|macrolet|tagbody|function|multiple-value-call|the|go|multiple-value-prog1|throw|if|progn|unwind-protect|labels|progv|let|quote)$/;\r\nvar assumeBody = /^with|^def|^do|^prog|case$|^cond$|bind$|when$|unless$/;\r\nvar numLiteral = /^(?:[+\\-]?(?:\\d+|\\d*\\.\\d+)(?:[efd][+\\-]?\\d+)?|[+\\-]?\\d+(?:\\/[+\\-]?\\d+)?|#b[+\\-]?[01]+|#o[+\\-]?[0-7]+|#x[+\\-]?[\\da-f]+)/;\r\nvar symbol = /[^\\s'`,@()\\[\\]\";]/;\r\nvar type;\r\n\r\nfunction readSym(stream) {\r\n  var ch;\r\n  while (ch = stream.next()) {\r\n    if (ch == \"\\\\\") stream.next();\r\n    else if (!symbol.test(ch)) { stream.backUp(1); break; }\r\n  }\r\n  return stream.current();\r\n}\r\n\r\nfunction base(stream, state) {\r\n  if (stream.eatSpace()) {type = \"ws\"; return null;}\r\n  if (stream.match(numLiteral)) return \"number\";\r\n  var ch = stream.next();\r\n  if (ch == \"\\\\\") ch = stream.next();\r\n\r\n  if (ch == '\"') return (state.tokenize = inString)(stream, state);\r\n  else if (ch == \"(\") { type = \"open\"; return \"bracket\"; }\r\n  else if (ch == \")\" || ch == \"]\") { type = \"close\"; return \"bracket\"; }\r\n  else if (ch == \";\") { stream.skipToEnd(); type = \"ws\"; return \"comment\"; }\r\n  else if (/['`,@]/.test(ch)) return null;\r\n  else if (ch == \"|\") {\r\n    if (stream.skipTo(\"|\")) { stream.next(); return \"variableName\"; }\r\n    else { stream.skipToEnd(); return \"error\"; }\r\n  } else if (ch == \"#\") {\r\n    var ch = stream.next();\r\n    if (ch == \"(\") { type = \"open\"; return \"bracket\"; }\r\n    else if (/[+\\-=\\.']/.test(ch)) return null;\r\n    else if (/\\d/.test(ch) && stream.match(/^\\d*#/)) return null;\r\n    else if (ch == \"|\") return (state.tokenize = inComment)(stream, state);\r\n    else if (ch == \":\") { readSym(stream); return \"meta\"; }\r\n    else if (ch == \"\\\\\") { stream.next(); readSym(stream); return \"string.special\" }\r\n    else return \"error\";\r\n  } else {\r\n    var name = readSym(stream);\r\n    if (name == \".\") return null;\r\n    type = \"symbol\";\r\n    if (name == \"nil\" || name == \"t\" || name.charAt(0) == \":\") return \"atom\";\r\n    if (state.lastType == \"open\" && (specialForm.test(name) || assumeBody.test(name))) return \"keyword\";\r\n    if (name.charAt(0) == \"&\") return \"variableName.special\";\r\n    return \"variableName\";\r\n  }\r\n}\r\n\r\nfunction inString(stream, state) {\r\n  var escaped = false, next;\r\n  while (next = stream.next()) {\r\n    if (next == '\"' && !escaped) { state.tokenize = base; break; }\r\n    escaped = !escaped && next == \"\\\\\";\r\n  }\r\n  return \"string\";\r\n}\r\n\r\nfunction inComment(stream, state) {\r\n  var next, last;\r\n  while (next = stream.next()) {\r\n    if (next == \"#\" && last == \"|\") { state.tokenize = base; break; }\r\n    last = next;\r\n  }\r\n  type = \"ws\";\r\n  return \"comment\";\r\n}\r\n\r\nexport const commonLisp = {\r\n  name: \"commonlisp\",\r\n  startState: function () {\r\n    return {ctx: {prev: null, start: 0, indentTo: 0}, lastType: null, tokenize: base};\r\n  },\r\n\r\n  token: function (stream, state) {\r\n    if (stream.sol() && typeof state.ctx.indentTo != \"number\")\r\n      state.ctx.indentTo = state.ctx.start + 1;\r\n\r\n    type = null;\r\n    var style = state.tokenize(stream, state);\r\n    if (type != \"ws\") {\r\n      if (state.ctx.indentTo == null) {\r\n        if (type == \"symbol\" && assumeBody.test(stream.current()))\r\n          state.ctx.indentTo = state.ctx.start + stream.indentUnit;\r\n        else\r\n          state.ctx.indentTo = \"next\";\r\n      } else if (state.ctx.indentTo == \"next\") {\r\n        state.ctx.indentTo = stream.column();\r\n      }\r\n      state.lastType = type;\r\n    }\r\n    if (type == \"open\") state.ctx = {prev: state.ctx, start: stream.column(), indentTo: null};\r\n    else if (type == \"close\") state.ctx = state.ctx.prev || state.ctx;\r\n    return style;\r\n  },\r\n\r\n  indent: function (state) {\r\n    var i = state.ctx.indentTo;\r\n    return typeof i == \"number\" ? i : state.ctx.start + 1;\r\n  },\r\n\r\n  languageData: {\r\n    commentTokens: {line: \";;\", block: {open: \"#|\", close: \"|#\"}},\r\n    closeBrackets: {brackets: [\"(\", \"[\", \"{\", '\"']}\r\n  }\r\n};\r\n\r\n"],
  "mappings": "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",
  "names": []
}
