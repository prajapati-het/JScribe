{
  "version": 3,
  "sources": ["../../@codemirror/legacy-modes/mode/sieve.js"],
  "sourcesContent": ["function words(str) {\r\n  var obj = {}, words = str.split(\" \");\r\n  for (var i = 0; i < words.length; ++i) obj[words[i]] = true;\r\n  return obj;\r\n}\r\n\r\nvar keywords = words(\"if elsif else stop require\");\r\nvar atoms = words(\"true false not\");\r\n\r\nfunction tokenBase(stream, state) {\r\n\r\n  var ch = stream.next();\r\n  if (ch == \"/\" && stream.eat(\"*\")) {\r\n    state.tokenize = tokenCComment;\r\n    return tokenCComment(stream, state);\r\n  }\r\n\r\n  if (ch === '#') {\r\n    stream.skipToEnd();\r\n    return \"comment\";\r\n  }\r\n\r\n  if (ch == \"\\\"\") {\r\n    state.tokenize = tokenString(ch);\r\n    return state.tokenize(stream, state);\r\n  }\r\n\r\n  if (ch == \"(\") {\r\n    state._indent.push(\"(\");\r\n    // add virtual angel wings so that editor behaves...\r\n    // ...more sane incase of broken brackets\r\n    state._indent.push(\"{\");\r\n    return null;\r\n  }\r\n\r\n  if (ch === \"{\") {\r\n    state._indent.push(\"{\");\r\n    return null;\r\n  }\r\n\r\n  if (ch == \")\")  {\r\n    state._indent.pop();\r\n    state._indent.pop();\r\n  }\r\n\r\n  if (ch === \"}\") {\r\n    state._indent.pop();\r\n    return null;\r\n  }\r\n\r\n  if (ch == \",\")\r\n    return null;\r\n\r\n  if (ch == \";\")\r\n    return null;\r\n\r\n\r\n  if (/[{}\\(\\),;]/.test(ch))\r\n    return null;\r\n\r\n  // 1*DIGIT \"K\" / \"M\" / \"G\"\r\n  if (/\\d/.test(ch)) {\r\n    stream.eatWhile(/[\\d]/);\r\n    stream.eat(/[KkMmGg]/);\r\n    return \"number\";\r\n  }\r\n\r\n  // \":\" (ALPHA / \"_\") *(ALPHA / DIGIT / \"_\")\r\n  if (ch == \":\") {\r\n    stream.eatWhile(/[a-zA-Z_]/);\r\n    stream.eatWhile(/[a-zA-Z0-9_]/);\r\n\r\n    return \"operator\";\r\n  }\r\n\r\n  stream.eatWhile(/\\w/);\r\n  var cur = stream.current();\r\n\r\n  // \"text:\" *(SP / HTAB) (hash-comment / CRLF)\r\n  // *(multiline-literal / multiline-dotstart)\r\n  // \".\" CRLF\r\n  if ((cur == \"text\") && stream.eat(\":\"))\r\n  {\r\n    state.tokenize = tokenMultiLineString;\r\n    return \"string\";\r\n  }\r\n\r\n  if (keywords.propertyIsEnumerable(cur))\r\n    return \"keyword\";\r\n\r\n  if (atoms.propertyIsEnumerable(cur))\r\n    return \"atom\";\r\n\r\n  return null;\r\n}\r\n\r\nfunction tokenMultiLineString(stream, state)\r\n{\r\n  state._multiLineString = true;\r\n  // the first line is special it may contain a comment\r\n  if (!stream.sol()) {\r\n    stream.eatSpace();\r\n\r\n    if (stream.peek() == \"#\") {\r\n      stream.skipToEnd();\r\n      return \"comment\";\r\n    }\r\n\r\n    stream.skipToEnd();\r\n    return \"string\";\r\n  }\r\n\r\n  if ((stream.next() == \".\")  && (stream.eol()))\r\n  {\r\n    state._multiLineString = false;\r\n    state.tokenize = tokenBase;\r\n  }\r\n\r\n  return \"string\";\r\n}\r\n\r\nfunction tokenCComment(stream, state) {\r\n  var maybeEnd = false, ch;\r\n  while ((ch = stream.next()) != null) {\r\n    if (maybeEnd && ch == \"/\") {\r\n      state.tokenize = tokenBase;\r\n      break;\r\n    }\r\n    maybeEnd = (ch == \"*\");\r\n  }\r\n  return \"comment\";\r\n}\r\n\r\nfunction tokenString(quote) {\r\n  return function(stream, state) {\r\n    var escaped = false, ch;\r\n    while ((ch = stream.next()) != null) {\r\n      if (ch == quote && !escaped)\r\n        break;\r\n      escaped = !escaped && ch == \"\\\\\";\r\n    }\r\n    if (!escaped) state.tokenize = tokenBase;\r\n    return \"string\";\r\n  };\r\n}\r\n\r\nexport const sieve = {\r\n  name: \"sieve\",\r\n  startState: function(base) {\r\n    return {tokenize: tokenBase,\r\n            baseIndent: base || 0,\r\n            _indent: []};\r\n  },\r\n\r\n  token: function(stream, state) {\r\n    if (stream.eatSpace())\r\n      return null;\r\n\r\n    return (state.tokenize || tokenBase)(stream, state);\r\n  },\r\n\r\n  indent: function(state, _textAfter, cx) {\r\n    var length = state._indent.length;\r\n    if (_textAfter && (_textAfter[0] == \"}\"))\r\n      length--;\r\n\r\n    if (length <0)\r\n      length = 0;\r\n\r\n    return length * cx.unit;\r\n  },\r\n\r\n  languageData: {\r\n    indentOnInput: /^\\s*\\}$/\r\n  }\r\n};\r\n"],
  "mappings": ";AAAA,SAAS,MAAM,KAAK;AAClB,MAAI,MAAM,CAAC,GAAGA,SAAQ,IAAI,MAAM,GAAG;AACnC,WAAS,IAAI,GAAG,IAAIA,OAAM,QAAQ,EAAE,EAAG,KAAIA,OAAM,CAAC,CAAC,IAAI;AACvD,SAAO;AACT;AAEA,IAAI,WAAW,MAAM,4BAA4B;AACjD,IAAI,QAAQ,MAAM,gBAAgB;AAElC,SAAS,UAAU,QAAQ,OAAO;AAEhC,MAAI,KAAK,OAAO,KAAK;AACrB,MAAI,MAAM,OAAO,OAAO,IAAI,GAAG,GAAG;AAChC,UAAM,WAAW;AACjB,WAAO,cAAc,QAAQ,KAAK;AAAA,EACpC;AAEA,MAAI,OAAO,KAAK;AACd,WAAO,UAAU;AACjB,WAAO;AAAA,EACT;AAEA,MAAI,MAAM,KAAM;AACd,UAAM,WAAW,YAAY,EAAE;AAC/B,WAAO,MAAM,SAAS,QAAQ,KAAK;AAAA,EACrC;AAEA,MAAI,MAAM,KAAK;AACb,UAAM,QAAQ,KAAK,GAAG;AAGtB,UAAM,QAAQ,KAAK,GAAG;AACtB,WAAO;AAAA,EACT;AAEA,MAAI,OAAO,KAAK;AACd,UAAM,QAAQ,KAAK,GAAG;AACtB,WAAO;AAAA,EACT;AAEA,MAAI,MAAM,KAAM;AACd,UAAM,QAAQ,IAAI;AAClB,UAAM,QAAQ,IAAI;AAAA,EACpB;AAEA,MAAI,OAAO,KAAK;AACd,UAAM,QAAQ,IAAI;AAClB,WAAO;AAAA,EACT;AAEA,MAAI,MAAM;AACR,WAAO;AAET,MAAI,MAAM;AACR,WAAO;AAGT,MAAI,aAAa,KAAK,EAAE;AACtB,WAAO;AAGT,MAAI,KAAK,KAAK,EAAE,GAAG;AACjB,WAAO,SAAS,MAAM;AACtB,WAAO,IAAI,UAAU;AACrB,WAAO;AAAA,EACT;AAGA,MAAI,MAAM,KAAK;AACb,WAAO,SAAS,WAAW;AAC3B,WAAO,SAAS,cAAc;AAE9B,WAAO;AAAA,EACT;AAEA,SAAO,SAAS,IAAI;AACpB,MAAI,MAAM,OAAO,QAAQ;AAKzB,MAAK,OAAO,UAAW,OAAO,IAAI,GAAG,GACrC;AACE,UAAM,WAAW;AACjB,WAAO;AAAA,EACT;AAEA,MAAI,SAAS,qBAAqB,GAAG;AACnC,WAAO;AAET,MAAI,MAAM,qBAAqB,GAAG;AAChC,WAAO;AAET,SAAO;AACT;AAEA,SAAS,qBAAqB,QAAQ,OACtC;AACE,QAAM,mBAAmB;AAEzB,MAAI,CAAC,OAAO,IAAI,GAAG;AACjB,WAAO,SAAS;AAEhB,QAAI,OAAO,KAAK,KAAK,KAAK;AACxB,aAAO,UAAU;AACjB,aAAO;AAAA,IACT;AAEA,WAAO,UAAU;AACjB,WAAO;AAAA,EACT;AAEA,MAAK,OAAO,KAAK,KAAK,OAAU,OAAO,IAAI,GAC3C;AACE,UAAM,mBAAmB;AACzB,UAAM,WAAW;AAAA,EACnB;AAEA,SAAO;AACT;AAEA,SAAS,cAAc,QAAQ,OAAO;AACpC,MAAI,WAAW,OAAO;AACtB,UAAQ,KAAK,OAAO,KAAK,MAAM,MAAM;AACnC,QAAI,YAAY,MAAM,KAAK;AACzB,YAAM,WAAW;AACjB;AAAA,IACF;AACA,eAAY,MAAM;AAAA,EACpB;AACA,SAAO;AACT;AAEA,SAAS,YAAY,OAAO;AAC1B,SAAO,SAAS,QAAQ,OAAO;AAC7B,QAAI,UAAU,OAAO;AACrB,YAAQ,KAAK,OAAO,KAAK,MAAM,MAAM;AACnC,UAAI,MAAM,SAAS,CAAC;AAClB;AACF,gBAAU,CAAC,WAAW,MAAM;AAAA,IAC9B;AACA,QAAI,CAAC,QAAS,OAAM,WAAW;AAC/B,WAAO;AAAA,EACT;AACF;AAEO,IAAM,QAAQ;AAAA,EACnB,MAAM;AAAA,EACN,YAAY,SAAS,MAAM;AACzB,WAAO;AAAA,MAAC,UAAU;AAAA,MACV,YAAY,QAAQ;AAAA,MACpB,SAAS,CAAC;AAAA,IAAC;AAAA,EACrB;AAAA,EAEA,OAAO,SAAS,QAAQ,OAAO;AAC7B,QAAI,OAAO,SAAS;AAClB,aAAO;AAET,YAAQ,MAAM,YAAY,WAAW,QAAQ,KAAK;AAAA,EACpD;AAAA,EAEA,QAAQ,SAAS,OAAO,YAAY,IAAI;AACtC,QAAI,SAAS,MAAM,QAAQ;AAC3B,QAAI,cAAe,WAAW,CAAC,KAAK;AAClC;AAEF,QAAI,SAAQ;AACV,eAAS;AAEX,WAAO,SAAS,GAAG;AAAA,EACrB;AAAA,EAEA,cAAc;AAAA,IACZ,eAAe;AAAA,EACjB;AACF;",
  "names": ["words"]
}
