{
  "version": 3,
  "sources": ["../../@codemirror/legacy-modes/mode/shell.js"],
  "sourcesContent": ["var words = {};\r\nfunction define(style, dict) {\r\n  for(var i = 0; i < dict.length; i++) {\r\n    words[dict[i]] = style;\r\n  }\r\n};\r\n\r\nvar commonAtoms = [\"true\", \"false\"];\r\nvar commonKeywords = [\"if\", \"then\", \"do\", \"else\", \"elif\", \"while\", \"until\", \"for\", \"in\", \"esac\", \"fi\",\r\n                      \"fin\", \"fil\", \"done\", \"exit\", \"set\", \"unset\", \"export\", \"function\"];\r\nvar commonCommands = [\"ab\", \"awk\", \"bash\", \"beep\", \"cat\", \"cc\", \"cd\", \"chown\", \"chmod\", \"chroot\", \"clear\",\r\n                      \"cp\", \"curl\", \"cut\", \"diff\", \"echo\", \"find\", \"gawk\", \"gcc\", \"get\", \"git\", \"grep\", \"hg\", \"kill\", \"killall\",\r\n                      \"ln\", \"ls\", \"make\", \"mkdir\", \"openssl\", \"mv\", \"nc\", \"nl\", \"node\", \"npm\", \"ping\", \"ps\", \"restart\", \"rm\",\r\n                      \"rmdir\", \"sed\", \"service\", \"sh\", \"shopt\", \"shred\", \"source\", \"sort\", \"sleep\", \"ssh\", \"start\", \"stop\",\r\n                      \"su\", \"sudo\", \"svn\", \"tee\", \"telnet\", \"top\", \"touch\", \"vi\", \"vim\", \"wall\", \"wc\", \"wget\", \"who\", \"write\",\r\n                      \"yes\", \"zsh\"];\r\n\r\ndefine('atom', commonAtoms);\r\ndefine('keyword', commonKeywords);\r\ndefine('builtin', commonCommands);\r\n\r\nfunction tokenBase(stream, state) {\r\n  if (stream.eatSpace()) return null;\r\n\r\n  var sol = stream.sol();\r\n  var ch = stream.next();\r\n\r\n  if (ch === '\\\\') {\r\n    stream.next();\r\n    return null;\r\n  }\r\n  if (ch === '\\'' || ch === '\"' || ch === '`') {\r\n    state.tokens.unshift(tokenString(ch, ch === \"`\" ? \"quote\" : \"string\"));\r\n    return tokenize(stream, state);\r\n  }\r\n  if (ch === '#') {\r\n    if (sol && stream.eat('!')) {\r\n      stream.skipToEnd();\r\n      return 'meta'; // 'comment'?\r\n    }\r\n    stream.skipToEnd();\r\n    return 'comment';\r\n  }\r\n  if (ch === '$') {\r\n    state.tokens.unshift(tokenDollar);\r\n    return tokenize(stream, state);\r\n  }\r\n  if (ch === '+' || ch === '=') {\r\n    return 'operator';\r\n  }\r\n  if (ch === '-') {\r\n    stream.eat('-');\r\n    stream.eatWhile(/\\w/);\r\n    return 'attribute';\r\n  }\r\n  if (ch == \"<\") {\r\n    if (stream.match(\"<<\")) return \"operator\"\r\n    var heredoc = stream.match(/^<-?\\s*(?:['\"]([^'\"]*)['\"]|([^'\"\\s]*))/)\r\n    if (heredoc) {\r\n      state.tokens.unshift(tokenHeredoc(heredoc[1] || heredoc[2]))\r\n      return 'string.special'\r\n    }\r\n  }\r\n  if (/\\d/.test(ch)) {\r\n    stream.eatWhile(/\\d/);\r\n    if(stream.eol() || !/\\w/.test(stream.peek())) {\r\n      return 'number';\r\n    }\r\n  }\r\n  stream.eatWhile(/[\\w-]/);\r\n  var cur = stream.current();\r\n  if (stream.peek() === '=' && /\\w+/.test(cur)) return 'def';\r\n  return words.hasOwnProperty(cur) ? words[cur] : null;\r\n}\r\n\r\nfunction tokenString(quote, style) {\r\n  var close = quote == \"(\" ? \")\" : quote == \"{\" ? \"}\" : quote\r\n  return function(stream, state) {\r\n    var next, escaped = false;\r\n    while ((next = stream.next()) != null) {\r\n      if (next === close && !escaped) {\r\n        state.tokens.shift();\r\n        break;\r\n      } else if (next === '$' && !escaped && quote !== \"'\" && stream.peek() != close) {\r\n        escaped = true;\r\n        stream.backUp(1);\r\n        state.tokens.unshift(tokenDollar);\r\n        break;\r\n      } else if (!escaped && quote !== close && next === quote) {\r\n        state.tokens.unshift(tokenString(quote, style))\r\n        return tokenize(stream, state)\r\n      } else if (!escaped && /['\"]/.test(next) && !/['\"]/.test(quote)) {\r\n        state.tokens.unshift(tokenStringStart(next, \"string\"));\r\n        stream.backUp(1);\r\n        break;\r\n      }\r\n      escaped = !escaped && next === '\\\\';\r\n    }\r\n    return style;\r\n  };\r\n};\r\n\r\nfunction tokenStringStart(quote, style) {\r\n  return function(stream, state) {\r\n    state.tokens[0] = tokenString(quote, style)\r\n    stream.next()\r\n    return tokenize(stream, state)\r\n  }\r\n}\r\n\r\nvar tokenDollar = function(stream, state) {\r\n  if (state.tokens.length > 1) stream.eat('$');\r\n  var ch = stream.next()\r\n  if (/['\"({]/.test(ch)) {\r\n    state.tokens[0] = tokenString(ch, ch == \"(\" ? \"quote\" : ch == \"{\" ? \"def\" : \"string\");\r\n    return tokenize(stream, state);\r\n  }\r\n  if (!/\\d/.test(ch)) stream.eatWhile(/\\w/);\r\n  state.tokens.shift();\r\n  return 'def';\r\n};\r\n\r\nfunction tokenHeredoc(delim) {\r\n  return function(stream, state) {\r\n    if (stream.sol() && stream.string == delim) state.tokens.shift()\r\n    stream.skipToEnd()\r\n    return \"string.special\"\r\n  }\r\n}\r\n\r\nfunction tokenize(stream, state) {\r\n  return (state.tokens[0] || tokenBase) (stream, state);\r\n};\r\n\r\nexport const shell = {\r\n  name: \"shell\",\r\n  startState: function() {return {tokens:[]};},\r\n  token: function(stream, state) {\r\n    return tokenize(stream, state);\r\n  },\r\n  languageData: {\r\n    autocomplete: commonAtoms.concat(commonKeywords, commonCommands),\r\n    closeBrackets: {brackets: [\"(\", \"[\", \"{\", \"'\", '\"', \"`\"]},\r\n    commentTokens: {line: \"#\"}\r\n  }\r\n};\r\n"],
  "mappings": "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",
  "names": []
}
