{
  "version": 3,
  "sources": ["../../@codemirror/legacy-modes/mode/properties.js"],
  "sourcesContent": ["export const properties = {\r\n  name: \"properties\",\r\n\r\n  token: function(stream, state) {\r\n    var sol = stream.sol() || state.afterSection;\r\n    var eol = stream.eol();\r\n\r\n    state.afterSection = false;\r\n\r\n    if (sol) {\r\n      if (state.nextMultiline) {\r\n        state.inMultiline = true;\r\n        state.nextMultiline = false;\r\n      } else {\r\n        state.position = \"def\";\r\n      }\r\n    }\r\n\r\n    if (eol && ! state.nextMultiline) {\r\n      state.inMultiline = false;\r\n      state.position = \"def\";\r\n    }\r\n\r\n    if (sol) {\r\n      while(stream.eatSpace()) {}\r\n    }\r\n\r\n    var ch = stream.next();\r\n\r\n    if (sol && (ch === \"#\" || ch === \"!\" || ch === \";\")) {\r\n      state.position = \"comment\";\r\n      stream.skipToEnd();\r\n      return \"comment\";\r\n    } else if (sol && ch === \"[\") {\r\n      state.afterSection = true;\r\n      stream.skipTo(\"]\"); stream.eat(\"]\");\r\n      return \"header\";\r\n    } else if (ch === \"=\" || ch === \":\") {\r\n      state.position = \"quote\";\r\n      return null;\r\n    } else if (ch === \"\\\\\" && state.position === \"quote\") {\r\n      if (stream.eol()) {  // end of line?\r\n        // Multiline value\r\n        state.nextMultiline = true;\r\n      }\r\n    }\r\n\r\n    return state.position;\r\n  },\r\n\r\n  startState: function() {\r\n    return {\r\n      position : \"def\",       // Current position, \"def\", \"quote\" or \"comment\"\r\n      nextMultiline : false,  // Is the next line multiline value\r\n      inMultiline : false,    // Is the current line a multiline value\r\n      afterSection : false    // Did we just open a section\r\n    };\r\n  }\r\n\r\n};\r\n"],
  "mappings": ";AAAO,IAAM,aAAa;AAAA,EACxB,MAAM;AAAA,EAEN,OAAO,SAAS,QAAQ,OAAO;AAC7B,QAAI,MAAM,OAAO,IAAI,KAAK,MAAM;AAChC,QAAI,MAAM,OAAO,IAAI;AAErB,UAAM,eAAe;AAErB,QAAI,KAAK;AACP,UAAI,MAAM,eAAe;AACvB,cAAM,cAAc;AACpB,cAAM,gBAAgB;AAAA,MACxB,OAAO;AACL,cAAM,WAAW;AAAA,MACnB;AAAA,IACF;AAEA,QAAI,OAAO,CAAE,MAAM,eAAe;AAChC,YAAM,cAAc;AACpB,YAAM,WAAW;AAAA,IACnB;AAEA,QAAI,KAAK;AACP,aAAM,OAAO,SAAS,GAAG;AAAA,MAAC;AAAA,IAC5B;AAEA,QAAI,KAAK,OAAO,KAAK;AAErB,QAAI,QAAQ,OAAO,OAAO,OAAO,OAAO,OAAO,MAAM;AACnD,YAAM,WAAW;AACjB,aAAO,UAAU;AACjB,aAAO;AAAA,IACT,WAAW,OAAO,OAAO,KAAK;AAC5B,YAAM,eAAe;AACrB,aAAO,OAAO,GAAG;AAAG,aAAO,IAAI,GAAG;AAClC,aAAO;AAAA,IACT,WAAW,OAAO,OAAO,OAAO,KAAK;AACnC,YAAM,WAAW;AACjB,aAAO;AAAA,IACT,WAAW,OAAO,QAAQ,MAAM,aAAa,SAAS;AACpD,UAAI,OAAO,IAAI,GAAG;AAEhB,cAAM,gBAAgB;AAAA,MACxB;AAAA,IACF;AAEA,WAAO,MAAM;AAAA,EACf;AAAA,EAEA,YAAY,WAAW;AACrB,WAAO;AAAA,MACL,UAAW;AAAA;AAAA,MACX,eAAgB;AAAA;AAAA,MAChB,aAAc;AAAA;AAAA,MACd,cAAe;AAAA;AAAA,IACjB;AAAA,EACF;AAEF;",
  "names": []
}
