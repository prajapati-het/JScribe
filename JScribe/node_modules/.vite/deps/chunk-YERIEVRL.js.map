{
  "version": 3,
  "sources": ["../../@codemirror/legacy-modes/mode/stylus.js"],
  "sourcesContent": ["// developer.mozilla.org/en-US/docs/Web/HTML/Element\r\nvar tagKeywords_ = [\"a\",\"abbr\",\"address\",\"area\",\"article\",\"aside\",\"audio\", \"b\", \"base\",\"bdi\", \"bdo\",\"bgsound\",\"blockquote\",\"body\",\"br\",\"button\",\"canvas\",\"caption\",\"cite\", \"code\",\"col\",\"colgroup\",\"data\",\"datalist\",\"dd\",\"del\",\"details\",\"dfn\",\"div\", \"dl\",\"dt\",\"em\",\"embed\",\"fieldset\",\"figcaption\",\"figure\",\"footer\",\"form\",\"h1\", \"h2\",\"h3\",\"h4\",\"h5\",\"h6\",\"head\",\"header\",\"hgroup\",\"hr\",\"html\",\"i\",\"iframe\", \"img\",\"input\",\"ins\",\"kbd\",\"keygen\",\"label\",\"legend\",\"li\",\"link\",\"main\",\"map\", \"mark\",\"marquee\",\"menu\",\"menuitem\",\"meta\",\"meter\",\"nav\",\"nobr\",\"noframes\", \"noscript\",\"object\",\"ol\",\"optgroup\",\"option\",\"output\",\"p\",\"param\",\"pre\", \"progress\",\"q\",\"rp\",\"rt\",\"ruby\",\"s\",\"samp\",\"script\",\"section\",\"select\", \"small\",\"source\",\"span\",\"strong\",\"style\",\"sub\",\"summary\",\"sup\",\"table\",\"tbody\",\"td\",\"textarea\",\"tfoot\",\"th\",\"thead\",\"time\",\"tr\",\"track\", \"u\",\"ul\",\"var\",\"video\"];\r\n\r\n// github.com/codemirror/CodeMirror/blob/master/mode/css/css.js\r\n// Note, \"url-prefix\" should precede \"url\" in order to match correctly in documentTypesRegexp\r\nvar documentTypes_ = [\"domain\", \"regexp\", \"url-prefix\", \"url\"];\r\nvar mediaTypes_ = [\"all\",\"aural\",\"braille\",\"handheld\",\"print\",\"projection\",\"screen\",\"tty\",\"tv\",\"embossed\"];\r\nvar mediaFeatures_ = [\"width\",\"min-width\",\"max-width\",\"height\",\"min-height\",\"max-height\",\"device-width\",\"min-device-width\",\"max-device-width\",\"device-height\",\"min-device-height\",\"max-device-height\",\"aspect-ratio\",\"min-aspect-ratio\",\"max-aspect-ratio\",\"device-aspect-ratio\",\"min-device-aspect-ratio\",\"max-device-aspect-ratio\",\"color\",\"min-color\",\"max-color\",\"color-index\",\"min-color-index\",\"max-color-index\",\"monochrome\",\"min-monochrome\",\"max-monochrome\",\"resolution\",\"min-resolution\",\"max-resolution\",\"scan\",\"grid\",\"dynamic-range\",\"video-dynamic-range\"];\r\nvar propertyKeywords_ = [\"align-content\",\"align-items\",\"align-self\",\"alignment-adjust\",\"alignment-baseline\",\"anchor-point\",\"animation\",\"animation-delay\",\"animation-direction\",\"animation-duration\",\"animation-fill-mode\",\"animation-iteration-count\",\"animation-name\",\"animation-play-state\",\"animation-timing-function\",\"appearance\",\"azimuth\",\"backface-visibility\",\"background\",\"background-attachment\",\"background-clip\",\"background-color\",\"background-image\",\"background-origin\",\"background-position\",\"background-repeat\",\"background-size\",\"baseline-shift\",\"binding\",\"bleed\",\"bookmark-label\",\"bookmark-level\",\"bookmark-state\",\"bookmark-target\",\"border\",\"border-bottom\",\"border-bottom-color\",\"border-bottom-left-radius\",\"border-bottom-right-radius\",\"border-bottom-style\",\"border-bottom-width\",\"border-collapse\",\"border-color\",\"border-image\",\"border-image-outset\",\"border-image-repeat\",\"border-image-slice\",\"border-image-source\",\"border-image-width\",\"border-left\",\"border-left-color\",\"border-left-style\",\"border-left-width\",\"border-radius\",\"border-right\",\"border-right-color\",\"border-right-style\",\"border-right-width\",\"border-spacing\",\"border-style\",\"border-top\",\"border-top-color\",\"border-top-left-radius\",\"border-top-right-radius\",\"border-top-style\",\"border-top-width\",\"border-width\",\"bottom\",\"box-decoration-break\",\"box-shadow\",\"box-sizing\",\"break-after\",\"break-before\",\"break-inside\",\"caption-side\",\"clear\",\"clip\",\"color\",\"color-profile\",\"column-count\",\"column-fill\",\"column-gap\",\"column-rule\",\"column-rule-color\",\"column-rule-style\",\"column-rule-width\",\"column-span\",\"column-width\",\"columns\",\"content\",\"counter-increment\",\"counter-reset\",\"crop\",\"cue\",\"cue-after\",\"cue-before\",\"cursor\",\"direction\",\"display\",\"dominant-baseline\",\"drop-initial-after-adjust\",\"drop-initial-after-align\",\"drop-initial-before-adjust\",\"drop-initial-before-align\",\"drop-initial-size\",\"drop-initial-value\",\"elevation\",\"empty-cells\",\"fit\",\"fit-position\",\"flex\",\"flex-basis\",\"flex-direction\",\"flex-flow\",\"flex-grow\",\"flex-shrink\",\"flex-wrap\",\"float\",\"float-offset\",\"flow-from\",\"flow-into\",\"font\",\"font-feature-settings\",\"font-family\",\"font-kerning\",\"font-language-override\",\"font-size\",\"font-size-adjust\",\"font-stretch\",\"font-style\",\"font-synthesis\",\"font-variant\",\"font-variant-alternates\",\"font-variant-caps\",\"font-variant-east-asian\",\"font-variant-ligatures\",\"font-variant-numeric\",\"font-variant-position\",\"font-weight\",\"grid\",\"grid-area\",\"grid-auto-columns\",\"grid-auto-flow\",\"grid-auto-position\",\"grid-auto-rows\",\"grid-column\",\"grid-column-end\",\"grid-column-start\",\"grid-row\",\"grid-row-end\",\"grid-row-start\",\"grid-template\",\"grid-template-areas\",\"grid-template-columns\",\"grid-template-rows\",\"hanging-punctuation\",\"height\",\"hyphens\",\"icon\",\"image-orientation\",\"image-rendering\",\"image-resolution\",\"inline-box-align\",\"justify-content\",\"left\",\"letter-spacing\",\"line-break\",\"line-height\",\"line-stacking\",\"line-stacking-ruby\",\"line-stacking-shift\",\"line-stacking-strategy\",\"list-style\",\"list-style-image\",\"list-style-position\",\"list-style-type\",\"margin\",\"margin-bottom\",\"margin-left\",\"margin-right\",\"margin-top\",\"marker-offset\",\"marks\",\"marquee-direction\",\"marquee-loop\",\"marquee-play-count\",\"marquee-speed\",\"marquee-style\",\"max-height\",\"max-width\",\"min-height\",\"min-width\",\"move-to\",\"nav-down\",\"nav-index\",\"nav-left\",\"nav-right\",\"nav-up\",\"object-fit\",\"object-position\",\"opacity\",\"order\",\"orphans\",\"outline\",\"outline-color\",\"outline-offset\",\"outline-style\",\"outline-width\",\"overflow\",\"overflow-style\",\"overflow-wrap\",\"overflow-x\",\"overflow-y\",\"padding\",\"padding-bottom\",\"padding-left\",\"padding-right\",\"padding-top\",\"page\",\"page-break-after\",\"page-break-before\",\"page-break-inside\",\"page-policy\",\"pause\",\"pause-after\",\"pause-before\",\"perspective\",\"perspective-origin\",\"pitch\",\"pitch-range\",\"play-during\",\"position\",\"presentation-level\",\"punctuation-trim\",\"quotes\",\"region-break-after\",\"region-break-before\",\"region-break-inside\",\"region-fragment\",\"rendering-intent\",\"resize\",\"rest\",\"rest-after\",\"rest-before\",\"richness\",\"right\",\"rotation\",\"rotation-point\",\"ruby-align\",\"ruby-overhang\",\"ruby-position\",\"ruby-span\",\"shape-image-threshold\",\"shape-inside\",\"shape-margin\",\"shape-outside\",\"size\",\"speak\",\"speak-as\",\"speak-header\",\"speak-numeral\",\"speak-punctuation\",\"speech-rate\",\"stress\",\"string-set\",\"tab-size\",\"table-layout\",\"target\",\"target-name\",\"target-new\",\"target-position\",\"text-align\",\"text-align-last\",\"text-decoration\",\"text-decoration-color\",\"text-decoration-line\",\"text-decoration-skip\",\"text-decoration-style\",\"text-emphasis\",\"text-emphasis-color\",\"text-emphasis-position\",\"text-emphasis-style\",\"text-height\",\"text-indent\",\"text-justify\",\"text-outline\",\"text-overflow\",\"text-shadow\",\"text-size-adjust\",\"text-space-collapse\",\"text-transform\",\"text-underline-position\",\"text-wrap\",\"top\",\"transform\",\"transform-origin\",\"transform-style\",\"transition\",\"transition-delay\",\"transition-duration\",\"transition-property\",\"transition-timing-function\",\"unicode-bidi\",\"vertical-align\",\"visibility\",\"voice-balance\",\"voice-duration\",\"voice-family\",\"voice-pitch\",\"voice-range\",\"voice-rate\",\"voice-stress\",\"voice-volume\",\"volume\",\"white-space\",\"widows\",\"width\",\"will-change\",\"word-break\",\"word-spacing\",\"word-wrap\",\"z-index\",\"clip-path\",\"clip-rule\",\"mask\",\"enable-background\",\"filter\",\"flood-color\",\"flood-opacity\",\"lighting-color\",\"stop-color\",\"stop-opacity\",\"pointer-events\",\"color-interpolation\",\"color-interpolation-filters\",\"color-rendering\",\"fill\",\"fill-opacity\",\"fill-rule\",\"image-rendering\",\"marker\",\"marker-end\",\"marker-mid\",\"marker-start\",\"shape-rendering\",\"stroke\",\"stroke-dasharray\",\"stroke-dashoffset\",\"stroke-linecap\",\"stroke-linejoin\",\"stroke-miterlimit\",\"stroke-opacity\",\"stroke-width\",\"text-rendering\",\"baseline-shift\",\"dominant-baseline\",\"glyph-orientation-horizontal\",\"glyph-orientation-vertical\",\"text-anchor\",\"writing-mode\",\"font-smoothing\",\"osx-font-smoothing\"];\r\nvar nonStandardPropertyKeywords_ = [\"scrollbar-arrow-color\",\"scrollbar-base-color\",\"scrollbar-dark-shadow-color\",\"scrollbar-face-color\",\"scrollbar-highlight-color\",\"scrollbar-shadow-color\",\"scrollbar-3d-light-color\",\"scrollbar-track-color\",\"shape-inside\",\"searchfield-cancel-button\",\"searchfield-decoration\",\"searchfield-results-button\",\"searchfield-results-decoration\",\"zoom\"];\r\nvar fontProperties_ = [\"font-family\",\"src\",\"unicode-range\",\"font-variant\",\"font-feature-settings\",\"font-stretch\",\"font-weight\",\"font-style\"];\r\nvar colorKeywords_ = [\"aliceblue\",\"antiquewhite\",\"aqua\",\"aquamarine\",\"azure\",\"beige\",\"bisque\",\"black\",\"blanchedalmond\",\"blue\",\"blueviolet\",\"brown\",\"burlywood\",\"cadetblue\",\"chartreuse\",\"chocolate\",\"coral\",\"cornflowerblue\",\"cornsilk\",\"crimson\",\"cyan\",\"darkblue\",\"darkcyan\",\"darkgoldenrod\",\"darkgray\",\"darkgreen\",\"darkkhaki\",\"darkmagenta\",\"darkolivegreen\",\"darkorange\",\"darkorchid\",\"darkred\",\"darksalmon\",\"darkseagreen\",\"darkslateblue\",\"darkslategray\",\"darkturquoise\",\"darkviolet\",\"deeppink\",\"deepskyblue\",\"dimgray\",\"dodgerblue\",\"firebrick\",\"floralwhite\",\"forestgreen\",\"fuchsia\",\"gainsboro\",\"ghostwhite\",\"gold\",\"goldenrod\",\"gray\",\"grey\",\"green\",\"greenyellow\",\"honeydew\",\"hotpink\",\"indianred\",\"indigo\",\"ivory\",\"khaki\",\"lavender\",\"lavenderblush\",\"lawngreen\",\"lemonchiffon\",\"lightblue\",\"lightcoral\",\"lightcyan\",\"lightgoldenrodyellow\",\"lightgray\",\"lightgreen\",\"lightpink\",\"lightsalmon\",\"lightseagreen\",\"lightskyblue\",\"lightslategray\",\"lightsteelblue\",\"lightyellow\",\"lime\",\"limegreen\",\"linen\",\"magenta\",\"maroon\",\"mediumaquamarine\",\"mediumblue\",\"mediumorchid\",\"mediumpurple\",\"mediumseagreen\",\"mediumslateblue\",\"mediumspringgreen\",\"mediumturquoise\",\"mediumvioletred\",\"midnightblue\",\"mintcream\",\"mistyrose\",\"moccasin\",\"navajowhite\",\"navy\",\"oldlace\",\"olive\",\"olivedrab\",\"orange\",\"orangered\",\"orchid\",\"palegoldenrod\",\"palegreen\",\"paleturquoise\",\"palevioletred\",\"papayawhip\",\"peachpuff\",\"peru\",\"pink\",\"plum\",\"powderblue\",\"purple\",\"rebeccapurple\",\"red\",\"rosybrown\",\"royalblue\",\"saddlebrown\",\"salmon\",\"sandybrown\",\"seagreen\",\"seashell\",\"sienna\",\"silver\",\"skyblue\",\"slateblue\",\"slategray\",\"snow\",\"springgreen\",\"steelblue\",\"tan\",\"teal\",\"thistle\",\"tomato\",\"turquoise\",\"violet\",\"wheat\",\"white\",\"whitesmoke\",\"yellow\",\"yellowgreen\"];\r\nvar valueKeywords_ = [\"above\",\"absolute\",\"activeborder\",\"additive\",\"activecaption\",\"afar\",\"after-white-space\",\"ahead\",\"alias\",\"all\",\"all-scroll\",\"alphabetic\",\"alternate\",\"always\",\"amharic\",\"amharic-abegede\",\"antialiased\",\"appworkspace\",\"arabic-indic\",\"armenian\",\"asterisks\",\"attr\",\"auto\",\"avoid\",\"avoid-column\",\"avoid-page\",\"avoid-region\",\"background\",\"backwards\",\"baseline\",\"below\",\"bidi-override\",\"binary\",\"bengali\",\"blink\",\"block\",\"block-axis\",\"bold\",\"bolder\",\"border\",\"border-box\",\"both\",\"bottom\",\"break\",\"break-all\",\"break-word\",\"bullets\",\"button\",\"buttonface\",\"buttonhighlight\",\"buttonshadow\",\"buttontext\",\"calc\",\"cambodian\",\"capitalize\",\"caps-lock-indicator\",\"caption\",\"captiontext\",\"caret\",\"cell\",\"center\",\"checkbox\",\"circle\",\"cjk-decimal\",\"cjk-earthly-branch\",\"cjk-heavenly-stem\",\"cjk-ideographic\",\"clear\",\"clip\",\"close-quote\",\"col-resize\",\"collapse\",\"column\",\"compact\",\"condensed\",\"conic-gradient\",\"contain\",\"content\",\"contents\",\"content-box\",\"context-menu\",\"continuous\",\"copy\",\"counter\",\"counters\",\"cover\",\"crop\",\"cross\",\"crosshair\",\"currentcolor\",\"cursive\",\"cyclic\",\"dashed\",\"decimal\",\"decimal-leading-zero\",\"default\",\"default-button\",\"destination-atop\",\"destination-in\",\"destination-out\",\"destination-over\",\"devanagari\",\"disc\",\"discard\",\"disclosure-closed\",\"disclosure-open\",\"document\",\"dot-dash\",\"dot-dot-dash\",\"dotted\",\"double\",\"down\",\"e-resize\",\"ease\",\"ease-in\",\"ease-in-out\",\"ease-out\",\"element\",\"ellipse\",\"ellipsis\",\"embed\",\"end\",\"ethiopic\",\"ethiopic-abegede\",\"ethiopic-abegede-am-et\",\"ethiopic-abegede-gez\",\"ethiopic-abegede-ti-er\",\"ethiopic-abegede-ti-et\",\"ethiopic-halehame-aa-er\",\"ethiopic-halehame-aa-et\",\"ethiopic-halehame-am-et\",\"ethiopic-halehame-gez\",\"ethiopic-halehame-om-et\",\"ethiopic-halehame-sid-et\",\"ethiopic-halehame-so-et\",\"ethiopic-halehame-ti-er\",\"ethiopic-halehame-ti-et\",\"ethiopic-halehame-tig\",\"ethiopic-numeric\",\"ew-resize\",\"expanded\",\"extends\",\"extra-condensed\",\"extra-expanded\",\"fantasy\",\"fast\",\"fill\",\"fixed\",\"flat\",\"flex\",\"footnotes\",\"forwards\",\"from\",\"geometricPrecision\",\"georgian\",\"graytext\",\"groove\",\"gujarati\",\"gurmukhi\",\"hand\",\"hangul\",\"hangul-consonant\",\"hebrew\",\"help\",\"hidden\",\"hide\",\"high\",\"higher\",\"highlight\",\"highlighttext\",\"hiragana\",\"hiragana-iroha\",\"horizontal\",\"hsl\",\"hsla\",\"icon\",\"ignore\",\"inactiveborder\",\"inactivecaption\",\"inactivecaptiontext\",\"infinite\",\"infobackground\",\"infotext\",\"inherit\",\"initial\",\"inline\",\"inline-axis\",\"inline-block\",\"inline-flex\",\"inline-table\",\"inset\",\"inside\",\"intrinsic\",\"invert\",\"italic\",\"japanese-formal\",\"japanese-informal\",\"justify\",\"kannada\",\"katakana\",\"katakana-iroha\",\"keep-all\",\"khmer\",\"korean-hangul-formal\",\"korean-hanja-formal\",\"korean-hanja-informal\",\"landscape\",\"lao\",\"large\",\"larger\",\"left\",\"level\",\"lighter\",\"line-through\",\"linear\",\"linear-gradient\",\"lines\",\"list-item\",\"listbox\",\"listitem\",\"local\",\"logical\",\"loud\",\"lower\",\"lower-alpha\",\"lower-armenian\",\"lower-greek\",\"lower-hexadecimal\",\"lower-latin\",\"lower-norwegian\",\"lower-roman\",\"lowercase\",\"ltr\",\"malayalam\",\"match\",\"matrix\",\"matrix3d\",\"media-play-button\",\"media-slider\",\"media-sliderthumb\",\"media-volume-slider\",\"media-volume-sliderthumb\",\"medium\",\"menu\",\"menulist\",\"menulist-button\",\"menutext\",\"message-box\",\"middle\",\"min-intrinsic\",\"mix\",\"mongolian\",\"monospace\",\"move\",\"multiple\",\"myanmar\",\"n-resize\",\"narrower\",\"ne-resize\",\"nesw-resize\",\"no-close-quote\",\"no-drop\",\"no-open-quote\",\"no-repeat\",\"none\",\"normal\",\"not-allowed\",\"nowrap\",\"ns-resize\",\"numbers\",\"numeric\",\"nw-resize\",\"nwse-resize\",\"oblique\",\"octal\",\"open-quote\",\"optimizeLegibility\",\"optimizeSpeed\",\"oriya\",\"oromo\",\"outset\",\"outside\",\"outside-shape\",\"overlay\",\"overline\",\"padding\",\"padding-box\",\"painted\",\"page\",\"paused\",\"persian\",\"perspective\",\"plus-darker\",\"plus-lighter\",\"pointer\",\"polygon\",\"portrait\",\"pre\",\"pre-line\",\"pre-wrap\",\"preserve-3d\",\"progress\",\"push-button\",\"radial-gradient\",\"radio\",\"read-only\",\"read-write\",\"read-write-plaintext-only\",\"rectangle\",\"region\",\"relative\",\"repeat\",\"repeating-linear-gradient\",\"repeating-radial-gradient\",\"repeating-conic-gradient\",\"repeat-x\",\"repeat-y\",\"reset\",\"reverse\",\"rgb\",\"rgba\",\"ridge\",\"right\",\"rotate\",\"rotate3d\",\"rotateX\",\"rotateY\",\"rotateZ\",\"round\",\"row-resize\",\"rtl\",\"run-in\",\"running\",\"s-resize\",\"sans-serif\",\"scale\",\"scale3d\",\"scaleX\",\"scaleY\",\"scaleZ\",\"scroll\",\"scrollbar\",\"scroll-position\",\"se-resize\",\"searchfield\",\"searchfield-cancel-button\",\"searchfield-decoration\",\"searchfield-results-button\",\"searchfield-results-decoration\",\"semi-condensed\",\"semi-expanded\",\"separate\",\"serif\",\"show\",\"sidama\",\"simp-chinese-formal\",\"simp-chinese-informal\",\"single\",\"skew\",\"skewX\",\"skewY\",\"skip-white-space\",\"slide\",\"slider-horizontal\",\"slider-vertical\",\"sliderthumb-horizontal\",\"sliderthumb-vertical\",\"slow\",\"small\",\"small-caps\",\"small-caption\",\"smaller\",\"solid\",\"somali\",\"source-atop\",\"source-in\",\"source-out\",\"source-over\",\"space\",\"spell-out\",\"square\",\"square-button\",\"standard\",\"start\",\"static\",\"status-bar\",\"stretch\",\"stroke\",\"sub\",\"subpixel-antialiased\",\"super\",\"sw-resize\",\"symbolic\",\"symbols\",\"table\",\"table-caption\",\"table-cell\",\"table-column\",\"table-column-group\",\"table-footer-group\",\"table-header-group\",\"table-row\",\"table-row-group\",\"tamil\",\"telugu\",\"text\",\"text-bottom\",\"text-top\",\"textarea\",\"textfield\",\"thai\",\"thick\",\"thin\",\"threeddarkshadow\",\"threedface\",\"threedhighlight\",\"threedlightshadow\",\"threedshadow\",\"tibetan\",\"tigre\",\"tigrinya-er\",\"tigrinya-er-abegede\",\"tigrinya-et\",\"tigrinya-et-abegede\",\"to\",\"top\",\"trad-chinese-formal\",\"trad-chinese-informal\",\"translate\",\"translate3d\",\"translateX\",\"translateY\",\"translateZ\",\"transparent\",\"ultra-condensed\",\"ultra-expanded\",\"underline\",\"up\",\"upper-alpha\",\"upper-armenian\",\"upper-greek\",\"upper-hexadecimal\",\"upper-latin\",\"upper-norwegian\",\"upper-roman\",\"uppercase\",\"urdu\",\"url\",\"var\",\"vertical\",\"vertical-text\",\"visible\",\"visibleFill\",\"visiblePainted\",\"visibleStroke\",\"visual\",\"w-resize\",\"wait\",\"wave\",\"wider\",\"window\",\"windowframe\",\"windowtext\",\"words\",\"x-large\",\"x-small\",\"xor\",\"xx-large\",\"xx-small\",\"bicubic\",\"optimizespeed\",\"grayscale\",\"row\",\"row-reverse\",\"wrap\",\"wrap-reverse\",\"column-reverse\",\"flex-start\",\"flex-end\",\"space-between\",\"space-around\", \"unset\"];\r\n\r\nvar wordOperatorKeywords_ = [\"in\",\"and\",\"or\",\"not\",\"is not\",\"is a\",\"is\",\"isnt\",\"defined\",\"if unless\"],\r\n    blockKeywords_ = [\"for\",\"if\",\"else\",\"unless\", \"from\", \"to\"],\r\n    commonAtoms_ = [\"null\",\"true\",\"false\",\"href\",\"title\",\"type\",\"not-allowed\",\"readonly\",\"disabled\"],\r\n    commonDef_ = [\"@font-face\", \"@keyframes\", \"@media\", \"@viewport\", \"@page\", \"@host\", \"@supports\", \"@block\", \"@css\"];\r\n\r\nvar hintWords = tagKeywords_.concat(documentTypes_,mediaTypes_,mediaFeatures_,\r\n                                    propertyKeywords_,nonStandardPropertyKeywords_,\r\n                                    colorKeywords_,valueKeywords_,fontProperties_,\r\n                                    wordOperatorKeywords_,blockKeywords_,\r\n                                    commonAtoms_,commonDef_);\r\n\r\nfunction wordRegexp(words) {\r\n  words = words.sort(function(a,b){return b > a;});\r\n  return new RegExp(\"^((\" + words.join(\")|(\") + \"))\\\\b\");\r\n}\r\n\r\nfunction keySet(array) {\r\n  var keys = {};\r\n  for (var i = 0; i < array.length; ++i) keys[array[i]] = true;\r\n  return keys;\r\n}\r\n\r\nfunction escapeRegExp(text) {\r\n  return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, \"\\\\$&\");\r\n}\r\n\r\nvar tagKeywords = keySet(tagKeywords_),\r\n    tagVariablesRegexp = /^(a|b|i|s|col|em)$/i,\r\n    propertyKeywords = keySet(propertyKeywords_),\r\n    nonStandardPropertyKeywords = keySet(nonStandardPropertyKeywords_),\r\n    valueKeywords = keySet(valueKeywords_),\r\n    colorKeywords = keySet(colorKeywords_),\r\n    documentTypes = keySet(documentTypes_),\r\n    documentTypesRegexp = wordRegexp(documentTypes_),\r\n    mediaFeatures = keySet(mediaFeatures_),\r\n    mediaTypes = keySet(mediaTypes_),\r\n    fontProperties = keySet(fontProperties_),\r\n    operatorsRegexp = /^\\s*([.]{2,3}|&&|\\|\\||\\*\\*|[?!=:]?=|[-+*\\/%<>]=?|\\?:|\\~)/,\r\n    wordOperatorKeywordsRegexp = wordRegexp(wordOperatorKeywords_),\r\n    blockKeywords = keySet(blockKeywords_),\r\n    vendorPrefixesRegexp = new RegExp(/^\\-(moz|ms|o|webkit)-/i),\r\n    commonAtoms = keySet(commonAtoms_),\r\n    firstWordMatch = \"\",\r\n    states = {},\r\n    ch,\r\n    style,\r\n    type,\r\n    override;\r\n\r\n/**\r\n * Tokenizers\r\n */\r\nfunction tokenBase(stream, state) {\r\n  firstWordMatch = stream.string.match(/(^[\\w-]+\\s*=\\s*$)|(^\\s*[\\w-]+\\s*=\\s*[\\w-])|(^\\s*(\\.|#|@|\\$|\\&|\\[|\\d|\\+|::?|\\{|\\>|~|\\/)?\\s*[\\w-]*([a-z0-9-]|\\*|\\/\\*)(\\(|,)?)/);\r\n  state.context.line.firstWord = firstWordMatch ? firstWordMatch[0].replace(/^\\s*/, \"\") : \"\";\r\n  state.context.line.indent = stream.indentation();\r\n  ch = stream.peek();\r\n\r\n  // Line comment\r\n  if (stream.match(\"//\")) {\r\n    stream.skipToEnd();\r\n    return [\"comment\", \"comment\"];\r\n  }\r\n  // Block comment\r\n  if (stream.match(\"/*\")) {\r\n    state.tokenize = tokenCComment;\r\n    return tokenCComment(stream, state);\r\n  }\r\n  // String\r\n  if (ch == \"\\\"\" || ch == \"'\") {\r\n    stream.next();\r\n    state.tokenize = tokenString(ch);\r\n    return state.tokenize(stream, state);\r\n  }\r\n  // Def\r\n  if (ch == \"@\") {\r\n    stream.next();\r\n    stream.eatWhile(/[\\w\\\\-]/);\r\n    return [\"def\", stream.current()];\r\n  }\r\n  // ID selector or Hex color\r\n  if (ch == \"#\") {\r\n    stream.next();\r\n    // Hex color\r\n    if (stream.match(/^[0-9a-f]{3}([0-9a-f]([0-9a-f]{2}){0,2})?\\b(?!-)/i)) {\r\n      return [\"atom\", \"atom\"];\r\n    }\r\n    // ID selector\r\n    if (stream.match(/^[a-z][\\w-]*/i)) {\r\n      return [\"builtin\", \"hash\"];\r\n    }\r\n  }\r\n  // Vendor prefixes\r\n  if (stream.match(vendorPrefixesRegexp)) {\r\n    return [\"meta\", \"vendor-prefixes\"];\r\n  }\r\n  // Numbers\r\n  if (stream.match(/^-?[0-9]?\\.?[0-9]/)) {\r\n    stream.eatWhile(/[a-z%]/i);\r\n    return [\"number\", \"unit\"];\r\n  }\r\n  // !important|optional\r\n  if (ch == \"!\") {\r\n    stream.next();\r\n    return [stream.match(/^(important|optional)/i) ? \"keyword\": \"operator\", \"important\"];\r\n  }\r\n  // Class\r\n  if (ch == \".\" && stream.match(/^\\.[a-z][\\w-]*/i)) {\r\n    return [\"qualifier\", \"qualifier\"];\r\n  }\r\n  // url url-prefix domain regexp\r\n  if (stream.match(documentTypesRegexp)) {\r\n    if (stream.peek() == \"(\") state.tokenize = tokenParenthesized;\r\n    return [\"property\", \"word\"];\r\n  }\r\n  // Mixins / Functions\r\n  if (stream.match(/^[a-z][\\w-]*\\(/i)) {\r\n    stream.backUp(1);\r\n    return [\"keyword\", \"mixin\"];\r\n  }\r\n  // Block mixins\r\n  if (stream.match(/^(\\+|-)[a-z][\\w-]*\\(/i)) {\r\n    stream.backUp(1);\r\n    return [\"keyword\", \"block-mixin\"];\r\n  }\r\n  // Parent Reference BEM naming\r\n  if (stream.string.match(/^\\s*&/) && stream.match(/^[-_]+[a-z][\\w-]*/)) {\r\n    return [\"qualifier\", \"qualifier\"];\r\n  }\r\n  // / Root Reference & Parent Reference\r\n  if (stream.match(/^(\\/|&)(-|_|:|\\.|#|[a-z])/)) {\r\n    stream.backUp(1);\r\n    return [\"variableName.special\", \"reference\"];\r\n  }\r\n  if (stream.match(/^&{1}\\s*$/)) {\r\n    return [\"variableName.special\", \"reference\"];\r\n  }\r\n  // Word operator\r\n  if (stream.match(wordOperatorKeywordsRegexp)) {\r\n    return [\"operator\", \"operator\"];\r\n  }\r\n  // Word\r\n  if (stream.match(/^\\$?[-_]*[a-z0-9]+[\\w-]*/i)) {\r\n    // Variable\r\n    if (stream.match(/^(\\.|\\[)[\\w-\\'\\\"\\]]+/i, false)) {\r\n      if (!wordIsTag(stream.current())) {\r\n        stream.match('.');\r\n        return [\"variable\", \"variable-name\"];\r\n      }\r\n    }\r\n    return [\"variable\", \"word\"];\r\n  }\r\n  // Operators\r\n  if (stream.match(operatorsRegexp)) {\r\n    return [\"operator\", stream.current()];\r\n  }\r\n  // Delimiters\r\n  if (/[:;,{}\\[\\]\\(\\)]/.test(ch)) {\r\n    stream.next();\r\n    return [null, ch];\r\n  }\r\n  // Non-detected items\r\n  stream.next();\r\n  return [null, null];\r\n}\r\n\r\n/**\r\n * Token comment\r\n */\r\nfunction tokenCComment(stream, state) {\r\n  var maybeEnd = false, ch;\r\n  while ((ch = stream.next()) != null) {\r\n    if (maybeEnd && ch == \"/\") {\r\n      state.tokenize = null;\r\n      break;\r\n    }\r\n    maybeEnd = (ch == \"*\");\r\n  }\r\n  return [\"comment\", \"comment\"];\r\n}\r\n\r\n/**\r\n * Token string\r\n */\r\nfunction tokenString(quote) {\r\n  return function(stream, state) {\r\n    var escaped = false, ch;\r\n    while ((ch = stream.next()) != null) {\r\n      if (ch == quote && !escaped) {\r\n        if (quote == \")\") stream.backUp(1);\r\n        break;\r\n      }\r\n      escaped = !escaped && ch == \"\\\\\";\r\n    }\r\n    if (ch == quote || !escaped && quote != \")\") state.tokenize = null;\r\n    return [\"string\", \"string\"];\r\n  };\r\n}\r\n\r\n/**\r\n * Token parenthesized\r\n */\r\nfunction tokenParenthesized(stream, state) {\r\n  stream.next(); // Must be \"(\"\r\n  if (!stream.match(/\\s*[\\\"\\')]/, false))\r\n    state.tokenize = tokenString(\")\");\r\n  else\r\n    state.tokenize = null;\r\n  return [null, \"(\"];\r\n}\r\n\r\n/**\r\n * Context management\r\n */\r\nfunction Context(type, indent, prev, line) {\r\n  this.type = type;\r\n  this.indent = indent;\r\n  this.prev = prev;\r\n  this.line = line || {firstWord: \"\", indent: 0};\r\n}\r\n\r\nfunction pushContext(state, stream, type, indent) {\r\n  indent = indent >= 0 ? indent : stream.indentUnit;\r\n  state.context = new Context(type, stream.indentation() + indent, state.context);\r\n  return type;\r\n}\r\n\r\nfunction popContext(state, stream, currentIndent) {\r\n  var contextIndent = state.context.indent - stream.indentUnit;\r\n  currentIndent = currentIndent || false;\r\n  state.context = state.context.prev;\r\n  if (currentIndent) state.context.indent = contextIndent;\r\n  return state.context.type;\r\n}\r\n\r\nfunction pass(type, stream, state) {\r\n  return states[state.context.type](type, stream, state);\r\n}\r\n\r\nfunction popAndPass(type, stream, state, n) {\r\n  for (var i = n || 1; i > 0; i--)\r\n    state.context = state.context.prev;\r\n  return pass(type, stream, state);\r\n}\r\n\r\n\r\n/**\r\n * Parser\r\n */\r\nfunction wordIsTag(word) {\r\n  return word.toLowerCase() in tagKeywords;\r\n}\r\n\r\nfunction wordIsProperty(word) {\r\n  word = word.toLowerCase();\r\n  return word in propertyKeywords || word in fontProperties;\r\n}\r\n\r\nfunction wordIsBlock(word) {\r\n  return word.toLowerCase() in blockKeywords;\r\n}\r\n\r\nfunction wordIsVendorPrefix(word) {\r\n  return word.toLowerCase().match(vendorPrefixesRegexp);\r\n}\r\n\r\nfunction wordAsValue(word) {\r\n  var wordLC = word.toLowerCase();\r\n  var override = \"variable\";\r\n  if (wordIsTag(word)) override = \"tag\";\r\n  else if (wordIsBlock(word)) override = \"block-keyword\";\r\n  else if (wordIsProperty(word)) override = \"property\";\r\n  else if (wordLC in valueKeywords || wordLC in commonAtoms) override = \"atom\";\r\n  else if (wordLC == \"return\" || wordLC in colorKeywords) override = \"keyword\";\r\n\r\n  // Font family\r\n  else if (word.match(/^[A-Z]/)) override = \"string\";\r\n  return override;\r\n}\r\n\r\nfunction typeIsBlock(type, stream) {\r\n  return ((endOfLine(stream) && (type == \"{\" || type == \"]\" || type == \"hash\" || type == \"qualifier\")) || type == \"block-mixin\");\r\n}\r\n\r\nfunction typeIsInterpolation(type, stream) {\r\n  return type == \"{\" && stream.match(/^\\s*\\$?[\\w-]+/i, false);\r\n}\r\n\r\nfunction typeIsPseudo(type, stream) {\r\n  return type == \":\" && stream.match(/^[a-z-]+/, false);\r\n}\r\n\r\nfunction startOfLine(stream) {\r\n  return stream.sol() || stream.string.match(new RegExp(\"^\\\\s*\" + escapeRegExp(stream.current())));\r\n}\r\n\r\nfunction endOfLine(stream) {\r\n  return stream.eol() || stream.match(/^\\s*$/, false);\r\n}\r\n\r\nfunction firstWordOfLine(line) {\r\n  var re = /^\\s*[-_]*[a-z0-9]+[\\w-]*/i;\r\n  var result = typeof line == \"string\" ? line.match(re) : line.string.match(re);\r\n  return result ? result[0].replace(/^\\s*/, \"\") : \"\";\r\n}\r\n\r\n\r\n/**\r\n * Block\r\n */\r\nstates.block = function(type, stream, state) {\r\n  if ((type == \"comment\" && startOfLine(stream)) ||\r\n      (type == \",\" && endOfLine(stream)) ||\r\n      type == \"mixin\") {\r\n    return pushContext(state, stream, \"block\", 0);\r\n  }\r\n  if (typeIsInterpolation(type, stream)) {\r\n    return pushContext(state, stream, \"interpolation\");\r\n  }\r\n  if (endOfLine(stream) && type == \"]\") {\r\n    if (!/^\\s*(\\.|#|:|\\[|\\*|&)/.test(stream.string) && !wordIsTag(firstWordOfLine(stream))) {\r\n      return pushContext(state, stream, \"block\", 0);\r\n    }\r\n  }\r\n  if (typeIsBlock(type, stream)) {\r\n    return pushContext(state, stream, \"block\");\r\n  }\r\n  if (type == \"}\" && endOfLine(stream)) {\r\n    return pushContext(state, stream, \"block\", 0);\r\n  }\r\n  if (type == \"variable-name\") {\r\n    if (stream.string.match(/^\\s?\\$[\\w-\\.\\[\\]\\'\\\"]+$/) || wordIsBlock(firstWordOfLine(stream))) {\r\n      return pushContext(state, stream, \"variableName\");\r\n    }\r\n    else {\r\n      return pushContext(state, stream, \"variableName\", 0);\r\n    }\r\n  }\r\n  if (type == \"=\") {\r\n    if (!endOfLine(stream) && !wordIsBlock(firstWordOfLine(stream))) {\r\n      return pushContext(state, stream, \"block\", 0);\r\n    }\r\n    return pushContext(state, stream, \"block\");\r\n  }\r\n  if (type == \"*\") {\r\n    if (endOfLine(stream) || stream.match(/\\s*(,|\\.|#|\\[|:|{)/,false)) {\r\n      override = \"tag\";\r\n      return pushContext(state, stream, \"block\");\r\n    }\r\n  }\r\n  if (typeIsPseudo(type, stream)) {\r\n    return pushContext(state, stream, \"pseudo\");\r\n  }\r\n  if (/@(font-face|media|supports|(-moz-)?document)/.test(type)) {\r\n    return pushContext(state, stream, endOfLine(stream) ? \"block\" : \"atBlock\");\r\n  }\r\n  if (/@(-(moz|ms|o|webkit)-)?keyframes$/.test(type)) {\r\n    return pushContext(state, stream, \"keyframes\");\r\n  }\r\n  if (/@extends?/.test(type)) {\r\n    return pushContext(state, stream, \"extend\", 0);\r\n  }\r\n  if (type && type.charAt(0) == \"@\") {\r\n\r\n    // Property Lookup\r\n    if (stream.indentation() > 0 && wordIsProperty(stream.current().slice(1))) {\r\n      override = \"variable\";\r\n      return \"block\";\r\n    }\r\n    if (/(@import|@require|@charset)/.test(type)) {\r\n      return pushContext(state, stream, \"block\", 0);\r\n    }\r\n    return pushContext(state, stream, \"block\");\r\n  }\r\n  if (type == \"reference\" && endOfLine(stream)) {\r\n    return pushContext(state, stream, \"block\");\r\n  }\r\n  if (type == \"(\") {\r\n    return pushContext(state, stream, \"parens\");\r\n  }\r\n\r\n  if (type == \"vendor-prefixes\") {\r\n    return pushContext(state, stream, \"vendorPrefixes\");\r\n  }\r\n  if (type == \"word\") {\r\n    var word = stream.current();\r\n    override = wordAsValue(word);\r\n\r\n    if (override == \"property\") {\r\n      if (startOfLine(stream)) {\r\n        return pushContext(state, stream, \"block\", 0);\r\n      } else {\r\n        override = \"atom\";\r\n        return \"block\";\r\n      }\r\n    }\r\n\r\n    if (override == \"tag\") {\r\n\r\n      // tag is a css value\r\n      if (/embed|menu|pre|progress|sub|table/.test(word)) {\r\n        if (wordIsProperty(firstWordOfLine(stream))) {\r\n          override = \"atom\";\r\n          return \"block\";\r\n        }\r\n      }\r\n\r\n      // tag is an attribute\r\n      if (stream.string.match(new RegExp(\"\\\\[\\\\s*\" + word + \"|\" + word +\"\\\\s*\\\\]\"))) {\r\n        override = \"atom\";\r\n        return \"block\";\r\n      }\r\n\r\n      // tag is a variable\r\n      if (tagVariablesRegexp.test(word)) {\r\n        if ((startOfLine(stream) && stream.string.match(/=/)) ||\r\n            (!startOfLine(stream) &&\r\n             !stream.string.match(/^(\\s*\\.|#|\\&|\\[|\\/|>|\\*)/) &&\r\n             !wordIsTag(firstWordOfLine(stream)))) {\r\n          override = \"variable\";\r\n          if (wordIsBlock(firstWordOfLine(stream)))  return \"block\";\r\n          return pushContext(state, stream, \"block\", 0);\r\n        }\r\n      }\r\n\r\n      if (endOfLine(stream)) return pushContext(state, stream, \"block\");\r\n    }\r\n    if (override == \"block-keyword\") {\r\n      override = \"keyword\";\r\n\r\n      // Postfix conditionals\r\n      if (stream.current(/(if|unless)/) && !startOfLine(stream)) {\r\n        return \"block\";\r\n      }\r\n      return pushContext(state, stream, \"block\");\r\n    }\r\n    if (word == \"return\") return pushContext(state, stream, \"block\", 0);\r\n\r\n    // Placeholder selector\r\n    if (override == \"variable\" && stream.string.match(/^\\s?\\$[\\w-\\.\\[\\]\\'\\\"]+$/)) {\r\n      return pushContext(state, stream, \"block\");\r\n    }\r\n  }\r\n  return state.context.type;\r\n};\r\n\r\n\r\n/**\r\n * Parens\r\n */\r\nstates.parens = function(type, stream, state) {\r\n  if (type == \"(\") return pushContext(state, stream, \"parens\");\r\n  if (type == \")\") {\r\n    if (state.context.prev.type == \"parens\") {\r\n      return popContext(state, stream);\r\n    }\r\n    if ((stream.string.match(/^[a-z][\\w-]*\\(/i) && endOfLine(stream)) ||\r\n        wordIsBlock(firstWordOfLine(stream)) ||\r\n        /(\\.|#|:|\\[|\\*|&|>|~|\\+|\\/)/.test(firstWordOfLine(stream)) ||\r\n        (!stream.string.match(/^-?[a-z][\\w-\\.\\[\\]\\'\\\"]*\\s*=/) &&\r\n         wordIsTag(firstWordOfLine(stream)))) {\r\n      return pushContext(state, stream, \"block\");\r\n    }\r\n    if (stream.string.match(/^[\\$-]?[a-z][\\w-\\.\\[\\]\\'\\\"]*\\s*=/) ||\r\n        stream.string.match(/^\\s*(\\(|\\)|[0-9])/) ||\r\n        stream.string.match(/^\\s+[a-z][\\w-]*\\(/i) ||\r\n        stream.string.match(/^\\s+[\\$-]?[a-z]/i)) {\r\n      return pushContext(state, stream, \"block\", 0);\r\n    }\r\n    if (endOfLine(stream)) return pushContext(state, stream, \"block\");\r\n    else return pushContext(state, stream, \"block\", 0);\r\n  }\r\n  if (type && type.charAt(0) == \"@\" && wordIsProperty(stream.current().slice(1))) {\r\n    override = \"variable\";\r\n  }\r\n  if (type == \"word\") {\r\n    var word = stream.current();\r\n    override = wordAsValue(word);\r\n    if (override == \"tag\" && tagVariablesRegexp.test(word)) {\r\n      override = \"variable\";\r\n    }\r\n    if (override == \"property\" || word == \"to\") override = \"atom\";\r\n  }\r\n  if (type == \"variable-name\") {\r\n    return pushContext(state, stream, \"variableName\");\r\n  }\r\n  if (typeIsPseudo(type, stream)) {\r\n    return pushContext(state, stream, \"pseudo\");\r\n  }\r\n  return state.context.type;\r\n};\r\n\r\n\r\n/**\r\n * Vendor prefixes\r\n */\r\nstates.vendorPrefixes = function(type, stream, state) {\r\n  if (type == \"word\") {\r\n    override = \"property\";\r\n    return pushContext(state, stream, \"block\", 0);\r\n  }\r\n  return popContext(state, stream);\r\n};\r\n\r\n\r\n/**\r\n * Pseudo\r\n */\r\nstates.pseudo = function(type, stream, state) {\r\n  if (!wordIsProperty(firstWordOfLine(stream.string))) {\r\n    stream.match(/^[a-z-]+/);\r\n    override = \"variableName.special\";\r\n    if (endOfLine(stream)) return pushContext(state, stream, \"block\");\r\n    return popContext(state, stream);\r\n  }\r\n  return popAndPass(type, stream, state);\r\n};\r\n\r\n\r\n/**\r\n * atBlock\r\n */\r\nstates.atBlock = function(type, stream, state) {\r\n  if (type == \"(\") return pushContext(state, stream, \"atBlock_parens\");\r\n  if (typeIsBlock(type, stream)) {\r\n    return pushContext(state, stream, \"block\");\r\n  }\r\n  if (typeIsInterpolation(type, stream)) {\r\n    return pushContext(state, stream, \"interpolation\");\r\n  }\r\n  if (type == \"word\") {\r\n    var word = stream.current().toLowerCase();\r\n    if (/^(only|not|and|or)$/.test(word))\r\n      override = \"keyword\";\r\n    else if (documentTypes.hasOwnProperty(word))\r\n      override = \"tag\";\r\n    else if (mediaTypes.hasOwnProperty(word))\r\n      override = \"attribute\";\r\n    else if (mediaFeatures.hasOwnProperty(word))\r\n      override = \"property\";\r\n    else if (nonStandardPropertyKeywords.hasOwnProperty(word))\r\n      override = \"string.special\";\r\n    else override = wordAsValue(stream.current());\r\n    if (override == \"tag\" && endOfLine(stream)) {\r\n      return pushContext(state, stream, \"block\");\r\n    }\r\n  }\r\n  if (type == \"operator\" && /^(not|and|or)$/.test(stream.current())) {\r\n    override = \"keyword\";\r\n  }\r\n  return state.context.type;\r\n};\r\n\r\nstates.atBlock_parens = function(type, stream, state) {\r\n  if (type == \"{\" || type == \"}\") return state.context.type;\r\n  if (type == \")\") {\r\n    if (endOfLine(stream)) return pushContext(state, stream, \"block\");\r\n    else return pushContext(state, stream, \"atBlock\");\r\n  }\r\n  if (type == \"word\") {\r\n    var word = stream.current().toLowerCase();\r\n    override = wordAsValue(word);\r\n    if (/^(max|min)/.test(word)) override = \"property\";\r\n    if (override == \"tag\") {\r\n      tagVariablesRegexp.test(word) ? override = \"variable\" : override = \"atom\";\r\n    }\r\n    return state.context.type;\r\n  }\r\n  return states.atBlock(type, stream, state);\r\n};\r\n\r\n\r\n/**\r\n * Keyframes\r\n */\r\nstates.keyframes = function(type, stream, state) {\r\n  if (stream.indentation() == \"0\" && ((type == \"}\" && startOfLine(stream)) || type == \"]\" || type == \"hash\"\r\n                                      || type == \"qualifier\" || wordIsTag(stream.current()))) {\r\n    return popAndPass(type, stream, state);\r\n  }\r\n  if (type == \"{\") return pushContext(state, stream, \"keyframes\");\r\n  if (type == \"}\") {\r\n    if (startOfLine(stream)) return popContext(state, stream, true);\r\n    else return pushContext(state, stream, \"keyframes\");\r\n  }\r\n  if (type == \"unit\" && /^[0-9]+\\%$/.test(stream.current())) {\r\n    return pushContext(state, stream, \"keyframes\");\r\n  }\r\n  if (type == \"word\") {\r\n    override = wordAsValue(stream.current());\r\n    if (override == \"block-keyword\") {\r\n      override = \"keyword\";\r\n      return pushContext(state, stream, \"keyframes\");\r\n    }\r\n  }\r\n  if (/@(font-face|media|supports|(-moz-)?document)/.test(type)) {\r\n    return pushContext(state, stream, endOfLine(stream) ? \"block\" : \"atBlock\");\r\n  }\r\n  if (type == \"mixin\") {\r\n    return pushContext(state, stream, \"block\", 0);\r\n  }\r\n  return state.context.type;\r\n};\r\n\r\n\r\n/**\r\n * Interpolation\r\n */\r\nstates.interpolation = function(type, stream, state) {\r\n  if (type == \"{\") popContext(state, stream) && pushContext(state, stream, \"block\");\r\n  if (type == \"}\") {\r\n    if (stream.string.match(/^\\s*(\\.|#|:|\\[|\\*|&|>|~|\\+|\\/)/i) ||\r\n        (stream.string.match(/^\\s*[a-z]/i) && wordIsTag(firstWordOfLine(stream)))) {\r\n      return pushContext(state, stream, \"block\");\r\n    }\r\n    if (!stream.string.match(/^(\\{|\\s*\\&)/) ||\r\n        stream.match(/\\s*[\\w-]/,false)) {\r\n      return pushContext(state, stream, \"block\", 0);\r\n    }\r\n    return pushContext(state, stream, \"block\");\r\n  }\r\n  if (type == \"variable-name\") {\r\n    return pushContext(state, stream, \"variableName\", 0);\r\n  }\r\n  if (type == \"word\") {\r\n    override = wordAsValue(stream.current());\r\n    if (override == \"tag\") override = \"atom\";\r\n  }\r\n  return state.context.type;\r\n};\r\n\r\n\r\n/**\r\n * Extend/s\r\n */\r\nstates.extend = function(type, stream, state) {\r\n  if (type == \"[\" || type == \"=\") return \"extend\";\r\n  if (type == \"]\") return popContext(state, stream);\r\n  if (type == \"word\") {\r\n    override = wordAsValue(stream.current());\r\n    return \"extend\";\r\n  }\r\n  return popContext(state, stream);\r\n};\r\n\r\n\r\n/**\r\n * Variable name\r\n */\r\nstates.variableName = function(type, stream, state) {\r\n  if (type == \"string\" || type == \"[\" || type == \"]\" || stream.current().match(/^(\\.|\\$)/)) {\r\n    if (stream.current().match(/^\\.[\\w-]+/i)) override = \"variable\";\r\n    return \"variableName\";\r\n  }\r\n  return popAndPass(type, stream, state);\r\n};\r\n\r\nexport const stylus = {\r\n  name: \"stylus\",\r\n  startState: function() {\r\n    return {\r\n      tokenize: null,\r\n      state: \"block\",\r\n      context: new Context(\"block\", 0, null)\r\n    };\r\n  },\r\n  token: function(stream, state) {\r\n    if (!state.tokenize && stream.eatSpace()) return null;\r\n    style = (state.tokenize || tokenBase)(stream, state);\r\n    if (style && typeof style == \"object\") {\r\n      type = style[1];\r\n      style = style[0];\r\n    }\r\n    override = style;\r\n    state.state = states[state.state](type, stream, state);\r\n    return override;\r\n  },\r\n  indent: function(state, textAfter, iCx) {\r\n    var cx = state.context,\r\n        ch = textAfter && textAfter.charAt(0),\r\n        indent = cx.indent,\r\n        lineFirstWord = firstWordOfLine(textAfter),\r\n        lineIndent = iCx.lineIndent(iCx.pos),\r\n        prevLineFirstWord = state.context.prev ? state.context.prev.line.firstWord : \"\",\r\n        prevLineIndent = state.context.prev ? state.context.prev.line.indent : lineIndent;\r\n\r\n    if (cx.prev &&\r\n        (ch == \"}\" && (cx.type == \"block\" || cx.type == \"atBlock\" || cx.type == \"keyframes\") ||\r\n         ch == \")\" && (cx.type == \"parens\" || cx.type == \"atBlock_parens\") ||\r\n         ch == \"{\" && (cx.type == \"at\"))) {\r\n      indent = cx.indent - iCx.unit;\r\n    } else if (!(/(\\})/.test(ch))) {\r\n      if (/@|\\$|\\d/.test(ch) ||\r\n          /^\\{/.test(textAfter) ||\r\n/^\\s*\\/(\\/|\\*)/.test(textAfter) ||\r\n          /^\\s*\\/\\*/.test(prevLineFirstWord) ||\r\n          /^\\s*[\\w-\\.\\[\\]\\'\\\"]+\\s*(\\?|:|\\+)?=/i.test(textAfter) ||\r\n/^(\\+|-)?[a-z][\\w-]*\\(/i.test(textAfter) ||\r\n/^return/.test(textAfter) ||\r\n              wordIsBlock(lineFirstWord)) {\r\n            indent = lineIndent;\r\n          } else if (/(\\.|#|:|\\[|\\*|&|>|~|\\+|\\/)/.test(ch) || wordIsTag(lineFirstWord)) {\r\n        if (/\\,\\s*$/.test(prevLineFirstWord)) {\r\n          indent = prevLineIndent;\r\n        } else if (!state.sol() && (/(\\.|#|:|\\[|\\*|&|>|~|\\+|\\/)/.test(prevLineFirstWord) || wordIsTag(prevLineFirstWord))) {\r\n          indent = lineIndent <= prevLineIndent ? prevLineIndent : prevLineIndent + iCx.unit;\r\n        } else {\r\n          indent = lineIndent;\r\n        }\r\n      } else if (!/,\\s*$/.test(textAfter) && (wordIsVendorPrefix(lineFirstWord) || wordIsProperty(lineFirstWord))) {\r\n        if (wordIsBlock(prevLineFirstWord)) {\r\n          indent = lineIndent <= prevLineIndent ? prevLineIndent : prevLineIndent + iCx.unit;\r\n        } else if (/^\\{/.test(prevLineFirstWord)) {\r\n          indent = lineIndent <= prevLineIndent ? lineIndent : prevLineIndent + iCx.unit;\r\n        } else if (wordIsVendorPrefix(prevLineFirstWord) || wordIsProperty(prevLineFirstWord)) {\r\n          indent = lineIndent >= prevLineIndent ? prevLineIndent : lineIndent;\r\n        } else if (/^(\\.|#|:|\\[|\\*|&|@|\\+|\\-|>|~|\\/)/.test(prevLineFirstWord) ||\r\n                   /=\\s*$/.test(prevLineFirstWord) ||\r\n                   wordIsTag(prevLineFirstWord) ||\r\n                   /^\\$[\\w-\\.\\[\\]\\'\\\"]/.test(prevLineFirstWord)) {\r\n          indent = prevLineIndent + iCx.unit;\r\n        } else {\r\n          indent = lineIndent;\r\n        }\r\n      }\r\n    }\r\n    return indent;\r\n  },\r\n  languageData: {\r\n    indentOnInput: /^\\s*\\}$/,\r\n    commentTokens: {line: \"//\", block: {open: \"/*\", close: \"*/\"}},\r\n    autocomplete: hintWords\r\n  }\r\n};\r\n"],
  "mappings": ";AACA,IAAI,eAAe,CAAC,KAAI,QAAO,WAAU,QAAO,WAAU,SAAQ,SAAS,KAAK,QAAO,OAAO,OAAM,WAAU,cAAa,QAAO,MAAK,UAAS,UAAS,WAAU,QAAQ,QAAO,OAAM,YAAW,QAAO,YAAW,MAAK,OAAM,WAAU,OAAM,OAAO,MAAK,MAAK,MAAK,SAAQ,YAAW,cAAa,UAAS,UAAS,QAAO,MAAM,MAAK,MAAK,MAAK,MAAK,MAAK,QAAO,UAAS,UAAS,MAAK,QAAO,KAAI,UAAU,OAAM,SAAQ,OAAM,OAAM,UAAS,SAAQ,UAAS,MAAK,QAAO,QAAO,OAAO,QAAO,WAAU,QAAO,YAAW,QAAO,SAAQ,OAAM,QAAO,YAAY,YAAW,UAAS,MAAK,YAAW,UAAS,UAAS,KAAI,SAAQ,OAAO,YAAW,KAAI,MAAK,MAAK,QAAO,KAAI,QAAO,UAAS,WAAU,UAAU,SAAQ,UAAS,QAAO,UAAS,SAAQ,OAAM,WAAU,OAAM,SAAQ,SAAQ,MAAK,YAAW,SAAQ,MAAK,SAAQ,QAAO,MAAK,SAAS,KAAI,MAAK,OAAM,OAAO;AAI11B,IAAI,iBAAiB,CAAC,UAAU,UAAU,cAAc,KAAK;AAC7D,IAAI,cAAc,CAAC,OAAM,SAAQ,WAAU,YAAW,SAAQ,cAAa,UAAS,OAAM,MAAK,UAAU;AACzG,IAAI,iBAAiB,CAAC,SAAQ,aAAY,aAAY,UAAS,cAAa,cAAa,gBAAe,oBAAmB,oBAAmB,iBAAgB,qBAAoB,qBAAoB,gBAAe,oBAAmB,oBAAmB,uBAAsB,2BAA0B,2BAA0B,SAAQ,aAAY,aAAY,eAAc,mBAAkB,mBAAkB,cAAa,kBAAiB,kBAAiB,cAAa,kBAAiB,kBAAiB,QAAO,QAAO,iBAAgB,qBAAqB;AACxiB,IAAI,oBAAoB,CAAC,iBAAgB,eAAc,cAAa,oBAAmB,sBAAqB,gBAAe,aAAY,mBAAkB,uBAAsB,sBAAqB,uBAAsB,6BAA4B,kBAAiB,wBAAuB,6BAA4B,cAAa,WAAU,uBAAsB,cAAa,yBAAwB,mBAAkB,oBAAmB,oBAAmB,qBAAoB,uBAAsB,qBAAoB,mBAAkB,kBAAiB,WAAU,SAAQ,kBAAiB,kBAAiB,kBAAiB,mBAAkB,UAAS,iBAAgB,uBAAsB,6BAA4B,8BAA6B,uBAAsB,uBAAsB,mBAAkB,gBAAe,gBAAe,uBAAsB,uBAAsB,sBAAqB,uBAAsB,sBAAqB,eAAc,qBAAoB,qBAAoB,qBAAoB,iBAAgB,gBAAe,sBAAqB,sBAAqB,sBAAqB,kBAAiB,gBAAe,cAAa,oBAAmB,0BAAyB,2BAA0B,oBAAmB,oBAAmB,gBAAe,UAAS,wBAAuB,cAAa,cAAa,eAAc,gBAAe,gBAAe,gBAAe,SAAQ,QAAO,SAAQ,iBAAgB,gBAAe,eAAc,cAAa,eAAc,qBAAoB,qBAAoB,qBAAoB,eAAc,gBAAe,WAAU,WAAU,qBAAoB,iBAAgB,QAAO,OAAM,aAAY,cAAa,UAAS,aAAY,WAAU,qBAAoB,6BAA4B,4BAA2B,8BAA6B,6BAA4B,qBAAoB,sBAAqB,aAAY,eAAc,OAAM,gBAAe,QAAO,cAAa,kBAAiB,aAAY,aAAY,eAAc,aAAY,SAAQ,gBAAe,aAAY,aAAY,QAAO,yBAAwB,eAAc,gBAAe,0BAAyB,aAAY,oBAAmB,gBAAe,cAAa,kBAAiB,gBAAe,2BAA0B,qBAAoB,2BAA0B,0BAAyB,wBAAuB,yBAAwB,eAAc,QAAO,aAAY,qBAAoB,kBAAiB,sBAAqB,kBAAiB,eAAc,mBAAkB,qBAAoB,YAAW,gBAAe,kBAAiB,iBAAgB,uBAAsB,yBAAwB,sBAAqB,uBAAsB,UAAS,WAAU,QAAO,qBAAoB,mBAAkB,oBAAmB,oBAAmB,mBAAkB,QAAO,kBAAiB,cAAa,eAAc,iBAAgB,sBAAqB,uBAAsB,0BAAyB,cAAa,oBAAmB,uBAAsB,mBAAkB,UAAS,iBAAgB,eAAc,gBAAe,cAAa,iBAAgB,SAAQ,qBAAoB,gBAAe,sBAAqB,iBAAgB,iBAAgB,cAAa,aAAY,cAAa,aAAY,WAAU,YAAW,aAAY,YAAW,aAAY,UAAS,cAAa,mBAAkB,WAAU,SAAQ,WAAU,WAAU,iBAAgB,kBAAiB,iBAAgB,iBAAgB,YAAW,kBAAiB,iBAAgB,cAAa,cAAa,WAAU,kBAAiB,gBAAe,iBAAgB,eAAc,QAAO,oBAAmB,qBAAoB,qBAAoB,eAAc,SAAQ,eAAc,gBAAe,eAAc,sBAAqB,SAAQ,eAAc,eAAc,YAAW,sBAAqB,oBAAmB,UAAS,sBAAqB,uBAAsB,uBAAsB,mBAAkB,oBAAmB,UAAS,QAAO,cAAa,eAAc,YAAW,SAAQ,YAAW,kBAAiB,cAAa,iBAAgB,iBAAgB,aAAY,yBAAwB,gBAAe,gBAAe,iBAAgB,QAAO,SAAQ,YAAW,gBAAe,iBAAgB,qBAAoB,eAAc,UAAS,cAAa,YAAW,gBAAe,UAAS,eAAc,cAAa,mBAAkB,cAAa,mBAAkB,mBAAkB,yBAAwB,wBAAuB,wBAAuB,yBAAwB,iBAAgB,uBAAsB,0BAAyB,uBAAsB,eAAc,eAAc,gBAAe,gBAAe,iBAAgB,eAAc,oBAAmB,uBAAsB,kBAAiB,2BAA0B,aAAY,OAAM,aAAY,oBAAmB,mBAAkB,cAAa,oBAAmB,uBAAsB,uBAAsB,8BAA6B,gBAAe,kBAAiB,cAAa,iBAAgB,kBAAiB,gBAAe,eAAc,eAAc,cAAa,gBAAe,gBAAe,UAAS,eAAc,UAAS,SAAQ,eAAc,cAAa,gBAAe,aAAY,WAAU,aAAY,aAAY,QAAO,qBAAoB,UAAS,eAAc,iBAAgB,kBAAiB,cAAa,gBAAe,kBAAiB,uBAAsB,+BAA8B,mBAAkB,QAAO,gBAAe,aAAY,mBAAkB,UAAS,cAAa,cAAa,gBAAe,mBAAkB,UAAS,oBAAmB,qBAAoB,kBAAiB,mBAAkB,qBAAoB,kBAAiB,gBAAe,kBAAiB,kBAAiB,qBAAoB,gCAA+B,8BAA6B,eAAc,gBAAe,kBAAiB,oBAAoB;AAC9sL,IAAI,+BAA+B,CAAC,yBAAwB,wBAAuB,+BAA8B,wBAAuB,6BAA4B,0BAAyB,4BAA2B,yBAAwB,gBAAe,6BAA4B,0BAAyB,8BAA6B,kCAAiC,MAAM;AACxX,IAAI,kBAAkB,CAAC,eAAc,OAAM,iBAAgB,gBAAe,yBAAwB,gBAAe,eAAc,YAAY;AAC3I,IAAI,iBAAiB,CAAC,aAAY,gBAAe,QAAO,cAAa,SAAQ,SAAQ,UAAS,SAAQ,kBAAiB,QAAO,cAAa,SAAQ,aAAY,aAAY,cAAa,aAAY,SAAQ,kBAAiB,YAAW,WAAU,QAAO,YAAW,YAAW,iBAAgB,YAAW,aAAY,aAAY,eAAc,kBAAiB,cAAa,cAAa,WAAU,cAAa,gBAAe,iBAAgB,iBAAgB,iBAAgB,cAAa,YAAW,eAAc,WAAU,cAAa,aAAY,eAAc,eAAc,WAAU,aAAY,cAAa,QAAO,aAAY,QAAO,QAAO,SAAQ,eAAc,YAAW,WAAU,aAAY,UAAS,SAAQ,SAAQ,YAAW,iBAAgB,aAAY,gBAAe,aAAY,cAAa,aAAY,wBAAuB,aAAY,cAAa,aAAY,eAAc,iBAAgB,gBAAe,kBAAiB,kBAAiB,eAAc,QAAO,aAAY,SAAQ,WAAU,UAAS,oBAAmB,cAAa,gBAAe,gBAAe,kBAAiB,mBAAkB,qBAAoB,mBAAkB,mBAAkB,gBAAe,aAAY,aAAY,YAAW,eAAc,QAAO,WAAU,SAAQ,aAAY,UAAS,aAAY,UAAS,iBAAgB,aAAY,iBAAgB,iBAAgB,cAAa,aAAY,QAAO,QAAO,QAAO,cAAa,UAAS,iBAAgB,OAAM,aAAY,aAAY,eAAc,UAAS,cAAa,YAAW,YAAW,UAAS,UAAS,WAAU,aAAY,aAAY,QAAO,eAAc,aAAY,OAAM,QAAO,WAAU,UAAS,aAAY,UAAS,SAAQ,SAAQ,cAAa,UAAS,aAAa;AAC7qD,IAAI,iBAAiB,CAAC,SAAQ,YAAW,gBAAe,YAAW,iBAAgB,QAAO,qBAAoB,SAAQ,SAAQ,OAAM,cAAa,cAAa,aAAY,UAAS,WAAU,mBAAkB,eAAc,gBAAe,gBAAe,YAAW,aAAY,QAAO,QAAO,SAAQ,gBAAe,cAAa,gBAAe,cAAa,aAAY,YAAW,SAAQ,iBAAgB,UAAS,WAAU,SAAQ,SAAQ,cAAa,QAAO,UAAS,UAAS,cAAa,QAAO,UAAS,SAAQ,aAAY,cAAa,WAAU,UAAS,cAAa,mBAAkB,gBAAe,cAAa,QAAO,aAAY,cAAa,uBAAsB,WAAU,eAAc,SAAQ,QAAO,UAAS,YAAW,UAAS,eAAc,sBAAqB,qBAAoB,mBAAkB,SAAQ,QAAO,eAAc,cAAa,YAAW,UAAS,WAAU,aAAY,kBAAiB,WAAU,WAAU,YAAW,eAAc,gBAAe,cAAa,QAAO,WAAU,YAAW,SAAQ,QAAO,SAAQ,aAAY,gBAAe,WAAU,UAAS,UAAS,WAAU,wBAAuB,WAAU,kBAAiB,oBAAmB,kBAAiB,mBAAkB,oBAAmB,cAAa,QAAO,WAAU,qBAAoB,mBAAkB,YAAW,YAAW,gBAAe,UAAS,UAAS,QAAO,YAAW,QAAO,WAAU,eAAc,YAAW,WAAU,WAAU,YAAW,SAAQ,OAAM,YAAW,oBAAmB,0BAAyB,wBAAuB,0BAAyB,0BAAyB,2BAA0B,2BAA0B,2BAA0B,yBAAwB,2BAA0B,4BAA2B,2BAA0B,2BAA0B,2BAA0B,yBAAwB,oBAAmB,aAAY,YAAW,WAAU,mBAAkB,kBAAiB,WAAU,QAAO,QAAO,SAAQ,QAAO,QAAO,aAAY,YAAW,QAAO,sBAAqB,YAAW,YAAW,UAAS,YAAW,YAAW,QAAO,UAAS,oBAAmB,UAAS,QAAO,UAAS,QAAO,QAAO,UAAS,aAAY,iBAAgB,YAAW,kBAAiB,cAAa,OAAM,QAAO,QAAO,UAAS,kBAAiB,mBAAkB,uBAAsB,YAAW,kBAAiB,YAAW,WAAU,WAAU,UAAS,eAAc,gBAAe,eAAc,gBAAe,SAAQ,UAAS,aAAY,UAAS,UAAS,mBAAkB,qBAAoB,WAAU,WAAU,YAAW,kBAAiB,YAAW,SAAQ,wBAAuB,uBAAsB,yBAAwB,aAAY,OAAM,SAAQ,UAAS,QAAO,SAAQ,WAAU,gBAAe,UAAS,mBAAkB,SAAQ,aAAY,WAAU,YAAW,SAAQ,WAAU,QAAO,SAAQ,eAAc,kBAAiB,eAAc,qBAAoB,eAAc,mBAAkB,eAAc,aAAY,OAAM,aAAY,SAAQ,UAAS,YAAW,qBAAoB,gBAAe,qBAAoB,uBAAsB,4BAA2B,UAAS,QAAO,YAAW,mBAAkB,YAAW,eAAc,UAAS,iBAAgB,OAAM,aAAY,aAAY,QAAO,YAAW,WAAU,YAAW,YAAW,aAAY,eAAc,kBAAiB,WAAU,iBAAgB,aAAY,QAAO,UAAS,eAAc,UAAS,aAAY,WAAU,WAAU,aAAY,eAAc,WAAU,SAAQ,cAAa,sBAAqB,iBAAgB,SAAQ,SAAQ,UAAS,WAAU,iBAAgB,WAAU,YAAW,WAAU,eAAc,WAAU,QAAO,UAAS,WAAU,eAAc,eAAc,gBAAe,WAAU,WAAU,YAAW,OAAM,YAAW,YAAW,eAAc,YAAW,eAAc,mBAAkB,SAAQ,aAAY,cAAa,6BAA4B,aAAY,UAAS,YAAW,UAAS,6BAA4B,6BAA4B,4BAA2B,YAAW,YAAW,SAAQ,WAAU,OAAM,QAAO,SAAQ,SAAQ,UAAS,YAAW,WAAU,WAAU,WAAU,SAAQ,cAAa,OAAM,UAAS,WAAU,YAAW,cAAa,SAAQ,WAAU,UAAS,UAAS,UAAS,UAAS,aAAY,mBAAkB,aAAY,eAAc,6BAA4B,0BAAyB,8BAA6B,kCAAiC,kBAAiB,iBAAgB,YAAW,SAAQ,QAAO,UAAS,uBAAsB,yBAAwB,UAAS,QAAO,SAAQ,SAAQ,oBAAmB,SAAQ,qBAAoB,mBAAkB,0BAAyB,wBAAuB,QAAO,SAAQ,cAAa,iBAAgB,WAAU,SAAQ,UAAS,eAAc,aAAY,cAAa,eAAc,SAAQ,aAAY,UAAS,iBAAgB,YAAW,SAAQ,UAAS,cAAa,WAAU,UAAS,OAAM,wBAAuB,SAAQ,aAAY,YAAW,WAAU,SAAQ,iBAAgB,cAAa,gBAAe,sBAAqB,sBAAqB,sBAAqB,aAAY,mBAAkB,SAAQ,UAAS,QAAO,eAAc,YAAW,YAAW,aAAY,QAAO,SAAQ,QAAO,oBAAmB,cAAa,mBAAkB,qBAAoB,gBAAe,WAAU,SAAQ,eAAc,uBAAsB,eAAc,uBAAsB,MAAK,OAAM,uBAAsB,yBAAwB,aAAY,eAAc,cAAa,cAAa,cAAa,eAAc,mBAAkB,kBAAiB,aAAY,MAAK,eAAc,kBAAiB,eAAc,qBAAoB,eAAc,mBAAkB,eAAc,aAAY,QAAO,OAAM,OAAM,YAAW,iBAAgB,WAAU,eAAc,kBAAiB,iBAAgB,UAAS,YAAW,QAAO,QAAO,SAAQ,UAAS,eAAc,cAAa,SAAQ,WAAU,WAAU,OAAM,YAAW,YAAW,WAAU,iBAAgB,aAAY,OAAM,eAAc,QAAO,gBAAe,kBAAiB,cAAa,YAAW,iBAAgB,gBAAgB,OAAO;AAE/8L,IAAI,wBAAwB,CAAC,MAAK,OAAM,MAAK,OAAM,UAAS,QAAO,MAAK,QAAO,WAAU,WAAW;AAApG,IACI,iBAAiB,CAAC,OAAM,MAAK,QAAO,UAAU,QAAQ,IAAI;AAD9D,IAEI,eAAe,CAAC,QAAO,QAAO,SAAQ,QAAO,SAAQ,QAAO,eAAc,YAAW,UAAU;AAFnG,IAGI,aAAa,CAAC,cAAc,cAAc,UAAU,aAAa,SAAS,SAAS,aAAa,UAAU,MAAM;AAEpH,IAAI,YAAY,aAAa;AAAA,EAAO;AAAA,EAAe;AAAA,EAAY;AAAA,EAC3B;AAAA,EAAkB;AAAA,EAClB;AAAA,EAAe;AAAA,EAAe;AAAA,EAC9B;AAAA,EAAsB;AAAA,EACtB;AAAA,EAAa;AAAU;AAE3D,SAAS,WAAW,OAAO;AACzB,UAAQ,MAAM,KAAK,SAAS,GAAE,GAAE;AAAC,WAAO,IAAI;AAAA,EAAE,CAAC;AAC/C,SAAO,IAAI,OAAO,QAAQ,MAAM,KAAK,KAAK,IAAI,OAAO;AACvD;AAEA,SAAS,OAAO,OAAO;AACrB,MAAI,OAAO,CAAC;AACZ,WAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,EAAE,EAAG,MAAK,MAAM,CAAC,CAAC,IAAI;AACxD,SAAO;AACT;AAEA,SAAS,aAAa,MAAM;AAC1B,SAAO,KAAK,QAAQ,4BAA4B,MAAM;AACxD;AAEA,IAAI,cAAc,OAAO,YAAY;AAArC,IACI,qBAAqB;AADzB,IAEI,mBAAmB,OAAO,iBAAiB;AAF/C,IAGI,8BAA8B,OAAO,4BAA4B;AAHrE,IAII,gBAAgB,OAAO,cAAc;AAJzC,IAKI,gBAAgB,OAAO,cAAc;AALzC,IAMI,gBAAgB,OAAO,cAAc;AANzC,IAOI,sBAAsB,WAAW,cAAc;AAPnD,IAQI,gBAAgB,OAAO,cAAc;AARzC,IASI,aAAa,OAAO,WAAW;AATnC,IAUI,iBAAiB,OAAO,eAAe;AAV3C,IAWI,kBAAkB;AAXtB,IAYI,6BAA6B,WAAW,qBAAqB;AAZjE,IAaI,gBAAgB,OAAO,cAAc;AAbzC,IAcI,uBAAuB,IAAI,OAAO,wBAAwB;AAd9D,IAeI,cAAc,OAAO,YAAY;AAfrC,IAgBI,iBAAiB;AAhBrB,IAiBI,SAAS,CAAC;AAjBd,IAkBI;AAlBJ,IAmBI;AAnBJ,IAoBI;AApBJ,IAqBI;AAKJ,SAAS,UAAU,QAAQ,OAAO;AAChC,mBAAiB,OAAO,OAAO,MAAM,6HAA6H;AAClK,QAAM,QAAQ,KAAK,YAAY,iBAAiB,eAAe,CAAC,EAAE,QAAQ,QAAQ,EAAE,IAAI;AACxF,QAAM,QAAQ,KAAK,SAAS,OAAO,YAAY;AAC/C,OAAK,OAAO,KAAK;AAGjB,MAAI,OAAO,MAAM,IAAI,GAAG;AACtB,WAAO,UAAU;AACjB,WAAO,CAAC,WAAW,SAAS;AAAA,EAC9B;AAEA,MAAI,OAAO,MAAM,IAAI,GAAG;AACtB,UAAM,WAAW;AACjB,WAAO,cAAc,QAAQ,KAAK;AAAA,EACpC;AAEA,MAAI,MAAM,OAAQ,MAAM,KAAK;AAC3B,WAAO,KAAK;AACZ,UAAM,WAAW,YAAY,EAAE;AAC/B,WAAO,MAAM,SAAS,QAAQ,KAAK;AAAA,EACrC;AAEA,MAAI,MAAM,KAAK;AACb,WAAO,KAAK;AACZ,WAAO,SAAS,SAAS;AACzB,WAAO,CAAC,OAAO,OAAO,QAAQ,CAAC;AAAA,EACjC;AAEA,MAAI,MAAM,KAAK;AACb,WAAO,KAAK;AAEZ,QAAI,OAAO,MAAM,mDAAmD,GAAG;AACrE,aAAO,CAAC,QAAQ,MAAM;AAAA,IACxB;AAEA,QAAI,OAAO,MAAM,eAAe,GAAG;AACjC,aAAO,CAAC,WAAW,MAAM;AAAA,IAC3B;AAAA,EACF;AAEA,MAAI,OAAO,MAAM,oBAAoB,GAAG;AACtC,WAAO,CAAC,QAAQ,iBAAiB;AAAA,EACnC;AAEA,MAAI,OAAO,MAAM,mBAAmB,GAAG;AACrC,WAAO,SAAS,SAAS;AACzB,WAAO,CAAC,UAAU,MAAM;AAAA,EAC1B;AAEA,MAAI,MAAM,KAAK;AACb,WAAO,KAAK;AACZ,WAAO,CAAC,OAAO,MAAM,wBAAwB,IAAI,YAAW,YAAY,WAAW;AAAA,EACrF;AAEA,MAAI,MAAM,OAAO,OAAO,MAAM,iBAAiB,GAAG;AAChD,WAAO,CAAC,aAAa,WAAW;AAAA,EAClC;AAEA,MAAI,OAAO,MAAM,mBAAmB,GAAG;AACrC,QAAI,OAAO,KAAK,KAAK,IAAK,OAAM,WAAW;AAC3C,WAAO,CAAC,YAAY,MAAM;AAAA,EAC5B;AAEA,MAAI,OAAO,MAAM,iBAAiB,GAAG;AACnC,WAAO,OAAO,CAAC;AACf,WAAO,CAAC,WAAW,OAAO;AAAA,EAC5B;AAEA,MAAI,OAAO,MAAM,uBAAuB,GAAG;AACzC,WAAO,OAAO,CAAC;AACf,WAAO,CAAC,WAAW,aAAa;AAAA,EAClC;AAEA,MAAI,OAAO,OAAO,MAAM,OAAO,KAAK,OAAO,MAAM,mBAAmB,GAAG;AACrE,WAAO,CAAC,aAAa,WAAW;AAAA,EAClC;AAEA,MAAI,OAAO,MAAM,2BAA2B,GAAG;AAC7C,WAAO,OAAO,CAAC;AACf,WAAO,CAAC,wBAAwB,WAAW;AAAA,EAC7C;AACA,MAAI,OAAO,MAAM,WAAW,GAAG;AAC7B,WAAO,CAAC,wBAAwB,WAAW;AAAA,EAC7C;AAEA,MAAI,OAAO,MAAM,0BAA0B,GAAG;AAC5C,WAAO,CAAC,YAAY,UAAU;AAAA,EAChC;AAEA,MAAI,OAAO,MAAM,2BAA2B,GAAG;AAE7C,QAAI,OAAO,MAAM,yBAAyB,KAAK,GAAG;AAChD,UAAI,CAAC,UAAU,OAAO,QAAQ,CAAC,GAAG;AAChC,eAAO,MAAM,GAAG;AAChB,eAAO,CAAC,YAAY,eAAe;AAAA,MACrC;AAAA,IACF;AACA,WAAO,CAAC,YAAY,MAAM;AAAA,EAC5B;AAEA,MAAI,OAAO,MAAM,eAAe,GAAG;AACjC,WAAO,CAAC,YAAY,OAAO,QAAQ,CAAC;AAAA,EACtC;AAEA,MAAI,kBAAkB,KAAK,EAAE,GAAG;AAC9B,WAAO,KAAK;AACZ,WAAO,CAAC,MAAM,EAAE;AAAA,EAClB;AAEA,SAAO,KAAK;AACZ,SAAO,CAAC,MAAM,IAAI;AACpB;AAKA,SAAS,cAAc,QAAQ,OAAO;AACpC,MAAI,WAAW,OAAOA;AACtB,UAAQA,MAAK,OAAO,KAAK,MAAM,MAAM;AACnC,QAAI,YAAYA,OAAM,KAAK;AACzB,YAAM,WAAW;AACjB;AAAA,IACF;AACA,eAAYA,OAAM;AAAA,EACpB;AACA,SAAO,CAAC,WAAW,SAAS;AAC9B;AAKA,SAAS,YAAY,OAAO;AAC1B,SAAO,SAAS,QAAQ,OAAO;AAC7B,QAAI,UAAU,OAAOA;AACrB,YAAQA,MAAK,OAAO,KAAK,MAAM,MAAM;AACnC,UAAIA,OAAM,SAAS,CAAC,SAAS;AAC3B,YAAI,SAAS,IAAK,QAAO,OAAO,CAAC;AACjC;AAAA,MACF;AACA,gBAAU,CAAC,WAAWA,OAAM;AAAA,IAC9B;AACA,QAAIA,OAAM,SAAS,CAAC,WAAW,SAAS,IAAK,OAAM,WAAW;AAC9D,WAAO,CAAC,UAAU,QAAQ;AAAA,EAC5B;AACF;AAKA,SAAS,mBAAmB,QAAQ,OAAO;AACzC,SAAO,KAAK;AACZ,MAAI,CAAC,OAAO,MAAM,cAAc,KAAK;AACnC,UAAM,WAAW,YAAY,GAAG;AAAA;AAEhC,UAAM,WAAW;AACnB,SAAO,CAAC,MAAM,GAAG;AACnB;AAKA,SAAS,QAAQC,OAAM,QAAQ,MAAM,MAAM;AACzC,OAAK,OAAOA;AACZ,OAAK,SAAS;AACd,OAAK,OAAO;AACZ,OAAK,OAAO,QAAQ,EAAC,WAAW,IAAI,QAAQ,EAAC;AAC/C;AAEA,SAAS,YAAY,OAAO,QAAQA,OAAM,QAAQ;AAChD,WAAS,UAAU,IAAI,SAAS,OAAO;AACvC,QAAM,UAAU,IAAI,QAAQA,OAAM,OAAO,YAAY,IAAI,QAAQ,MAAM,OAAO;AAC9E,SAAOA;AACT;AAEA,SAAS,WAAW,OAAO,QAAQ,eAAe;AAChD,MAAI,gBAAgB,MAAM,QAAQ,SAAS,OAAO;AAClD,kBAAgB,iBAAiB;AACjC,QAAM,UAAU,MAAM,QAAQ;AAC9B,MAAI,cAAe,OAAM,QAAQ,SAAS;AAC1C,SAAO,MAAM,QAAQ;AACvB;AAEA,SAAS,KAAKA,OAAM,QAAQ,OAAO;AACjC,SAAO,OAAO,MAAM,QAAQ,IAAI,EAAEA,OAAM,QAAQ,KAAK;AACvD;AAEA,SAAS,WAAWA,OAAM,QAAQ,OAAO,GAAG;AAC1C,WAAS,IAAI,KAAK,GAAG,IAAI,GAAG;AAC1B,UAAM,UAAU,MAAM,QAAQ;AAChC,SAAO,KAAKA,OAAM,QAAQ,KAAK;AACjC;AAMA,SAAS,UAAU,MAAM;AACvB,SAAO,KAAK,YAAY,KAAK;AAC/B;AAEA,SAAS,eAAe,MAAM;AAC5B,SAAO,KAAK,YAAY;AACxB,SAAO,QAAQ,oBAAoB,QAAQ;AAC7C;AAEA,SAAS,YAAY,MAAM;AACzB,SAAO,KAAK,YAAY,KAAK;AAC/B;AAEA,SAAS,mBAAmB,MAAM;AAChC,SAAO,KAAK,YAAY,EAAE,MAAM,oBAAoB;AACtD;AAEA,SAAS,YAAY,MAAM;AACzB,MAAI,SAAS,KAAK,YAAY;AAC9B,MAAIC,YAAW;AACf,MAAI,UAAU,IAAI,EAAG,CAAAA,YAAW;AAAA,WACvB,YAAY,IAAI,EAAG,CAAAA,YAAW;AAAA,WAC9B,eAAe,IAAI,EAAG,CAAAA,YAAW;AAAA,WACjC,UAAU,iBAAiB,UAAU,YAAa,CAAAA,YAAW;AAAA,WAC7D,UAAU,YAAY,UAAU,cAAe,CAAAA,YAAW;AAAA,WAG1D,KAAK,MAAM,QAAQ,EAAG,CAAAA,YAAW;AAC1C,SAAOA;AACT;AAEA,SAAS,YAAYD,OAAM,QAAQ;AACjC,SAAS,UAAU,MAAM,MAAMA,SAAQ,OAAOA,SAAQ,OAAOA,SAAQ,UAAUA,SAAQ,gBAAiBA,SAAQ;AAClH;AAEA,SAAS,oBAAoBA,OAAM,QAAQ;AACzC,SAAOA,SAAQ,OAAO,OAAO,MAAM,kBAAkB,KAAK;AAC5D;AAEA,SAAS,aAAaA,OAAM,QAAQ;AAClC,SAAOA,SAAQ,OAAO,OAAO,MAAM,YAAY,KAAK;AACtD;AAEA,SAAS,YAAY,QAAQ;AAC3B,SAAO,OAAO,IAAI,KAAK,OAAO,OAAO,MAAM,IAAI,OAAO,UAAU,aAAa,OAAO,QAAQ,CAAC,CAAC,CAAC;AACjG;AAEA,SAAS,UAAU,QAAQ;AACzB,SAAO,OAAO,IAAI,KAAK,OAAO,MAAM,SAAS,KAAK;AACpD;AAEA,SAAS,gBAAgB,MAAM;AAC7B,MAAI,KAAK;AACT,MAAI,SAAS,OAAO,QAAQ,WAAW,KAAK,MAAM,EAAE,IAAI,KAAK,OAAO,MAAM,EAAE;AAC5E,SAAO,SAAS,OAAO,CAAC,EAAE,QAAQ,QAAQ,EAAE,IAAI;AAClD;AAMA,OAAO,QAAQ,SAASA,OAAM,QAAQ,OAAO;AAC3C,MAAKA,SAAQ,aAAa,YAAY,MAAM,KACvCA,SAAQ,OAAO,UAAU,MAAM,KAChCA,SAAQ,SAAS;AACnB,WAAO,YAAY,OAAO,QAAQ,SAAS,CAAC;AAAA,EAC9C;AACA,MAAI,oBAAoBA,OAAM,MAAM,GAAG;AACrC,WAAO,YAAY,OAAO,QAAQ,eAAe;AAAA,EACnD;AACA,MAAI,UAAU,MAAM,KAAKA,SAAQ,KAAK;AACpC,QAAI,CAAC,uBAAuB,KAAK,OAAO,MAAM,KAAK,CAAC,UAAU,gBAAgB,MAAM,CAAC,GAAG;AACtF,aAAO,YAAY,OAAO,QAAQ,SAAS,CAAC;AAAA,IAC9C;AAAA,EACF;AACA,MAAI,YAAYA,OAAM,MAAM,GAAG;AAC7B,WAAO,YAAY,OAAO,QAAQ,OAAO;AAAA,EAC3C;AACA,MAAIA,SAAQ,OAAO,UAAU,MAAM,GAAG;AACpC,WAAO,YAAY,OAAO,QAAQ,SAAS,CAAC;AAAA,EAC9C;AACA,MAAIA,SAAQ,iBAAiB;AAC3B,QAAI,OAAO,OAAO,MAAM,yBAAyB,KAAK,YAAY,gBAAgB,MAAM,CAAC,GAAG;AAC1F,aAAO,YAAY,OAAO,QAAQ,cAAc;AAAA,IAClD,OACK;AACH,aAAO,YAAY,OAAO,QAAQ,gBAAgB,CAAC;AAAA,IACrD;AAAA,EACF;AACA,MAAIA,SAAQ,KAAK;AACf,QAAI,CAAC,UAAU,MAAM,KAAK,CAAC,YAAY,gBAAgB,MAAM,CAAC,GAAG;AAC/D,aAAO,YAAY,OAAO,QAAQ,SAAS,CAAC;AAAA,IAC9C;AACA,WAAO,YAAY,OAAO,QAAQ,OAAO;AAAA,EAC3C;AACA,MAAIA,SAAQ,KAAK;AACf,QAAI,UAAU,MAAM,KAAK,OAAO,MAAM,sBAAqB,KAAK,GAAG;AACjE,iBAAW;AACX,aAAO,YAAY,OAAO,QAAQ,OAAO;AAAA,IAC3C;AAAA,EACF;AACA,MAAI,aAAaA,OAAM,MAAM,GAAG;AAC9B,WAAO,YAAY,OAAO,QAAQ,QAAQ;AAAA,EAC5C;AACA,MAAI,+CAA+C,KAAKA,KAAI,GAAG;AAC7D,WAAO,YAAY,OAAO,QAAQ,UAAU,MAAM,IAAI,UAAU,SAAS;AAAA,EAC3E;AACA,MAAI,oCAAoC,KAAKA,KAAI,GAAG;AAClD,WAAO,YAAY,OAAO,QAAQ,WAAW;AAAA,EAC/C;AACA,MAAI,YAAY,KAAKA,KAAI,GAAG;AAC1B,WAAO,YAAY,OAAO,QAAQ,UAAU,CAAC;AAAA,EAC/C;AACA,MAAIA,SAAQA,MAAK,OAAO,CAAC,KAAK,KAAK;AAGjC,QAAI,OAAO,YAAY,IAAI,KAAK,eAAe,OAAO,QAAQ,EAAE,MAAM,CAAC,CAAC,GAAG;AACzE,iBAAW;AACX,aAAO;AAAA,IACT;AACA,QAAI,8BAA8B,KAAKA,KAAI,GAAG;AAC5C,aAAO,YAAY,OAAO,QAAQ,SAAS,CAAC;AAAA,IAC9C;AACA,WAAO,YAAY,OAAO,QAAQ,OAAO;AAAA,EAC3C;AACA,MAAIA,SAAQ,eAAe,UAAU,MAAM,GAAG;AAC5C,WAAO,YAAY,OAAO,QAAQ,OAAO;AAAA,EAC3C;AACA,MAAIA,SAAQ,KAAK;AACf,WAAO,YAAY,OAAO,QAAQ,QAAQ;AAAA,EAC5C;AAEA,MAAIA,SAAQ,mBAAmB;AAC7B,WAAO,YAAY,OAAO,QAAQ,gBAAgB;AAAA,EACpD;AACA,MAAIA,SAAQ,QAAQ;AAClB,QAAI,OAAO,OAAO,QAAQ;AAC1B,eAAW,YAAY,IAAI;AAE3B,QAAI,YAAY,YAAY;AAC1B,UAAI,YAAY,MAAM,GAAG;AACvB,eAAO,YAAY,OAAO,QAAQ,SAAS,CAAC;AAAA,MAC9C,OAAO;AACL,mBAAW;AACX,eAAO;AAAA,MACT;AAAA,IACF;AAEA,QAAI,YAAY,OAAO;AAGrB,UAAI,oCAAoC,KAAK,IAAI,GAAG;AAClD,YAAI,eAAe,gBAAgB,MAAM,CAAC,GAAG;AAC3C,qBAAW;AACX,iBAAO;AAAA,QACT;AAAA,MACF;AAGA,UAAI,OAAO,OAAO,MAAM,IAAI,OAAO,YAAY,OAAO,MAAM,OAAM,SAAS,CAAC,GAAG;AAC7E,mBAAW;AACX,eAAO;AAAA,MACT;AAGA,UAAI,mBAAmB,KAAK,IAAI,GAAG;AACjC,YAAK,YAAY,MAAM,KAAK,OAAO,OAAO,MAAM,GAAG,KAC9C,CAAC,YAAY,MAAM,KACnB,CAAC,OAAO,OAAO,MAAM,0BAA0B,KAC/C,CAAC,UAAU,gBAAgB,MAAM,CAAC,GAAI;AACzC,qBAAW;AACX,cAAI,YAAY,gBAAgB,MAAM,CAAC,EAAI,QAAO;AAClD,iBAAO,YAAY,OAAO,QAAQ,SAAS,CAAC;AAAA,QAC9C;AAAA,MACF;AAEA,UAAI,UAAU,MAAM,EAAG,QAAO,YAAY,OAAO,QAAQ,OAAO;AAAA,IAClE;AACA,QAAI,YAAY,iBAAiB;AAC/B,iBAAW;AAGX,UAAI,OAAO,QAAQ,aAAa,KAAK,CAAC,YAAY,MAAM,GAAG;AACzD,eAAO;AAAA,MACT;AACA,aAAO,YAAY,OAAO,QAAQ,OAAO;AAAA,IAC3C;AACA,QAAI,QAAQ,SAAU,QAAO,YAAY,OAAO,QAAQ,SAAS,CAAC;AAGlE,QAAI,YAAY,cAAc,OAAO,OAAO,MAAM,yBAAyB,GAAG;AAC5E,aAAO,YAAY,OAAO,QAAQ,OAAO;AAAA,IAC3C;AAAA,EACF;AACA,SAAO,MAAM,QAAQ;AACvB;AAMA,OAAO,SAAS,SAASA,OAAM,QAAQ,OAAO;AAC5C,MAAIA,SAAQ,IAAK,QAAO,YAAY,OAAO,QAAQ,QAAQ;AAC3D,MAAIA,SAAQ,KAAK;AACf,QAAI,MAAM,QAAQ,KAAK,QAAQ,UAAU;AACvC,aAAO,WAAW,OAAO,MAAM;AAAA,IACjC;AACA,QAAK,OAAO,OAAO,MAAM,iBAAiB,KAAK,UAAU,MAAM,KAC3D,YAAY,gBAAgB,MAAM,CAAC,KACnC,6BAA6B,KAAK,gBAAgB,MAAM,CAAC,KACxD,CAAC,OAAO,OAAO,MAAM,8BAA8B,KACnD,UAAU,gBAAgB,MAAM,CAAC,GAAI;AACxC,aAAO,YAAY,OAAO,QAAQ,OAAO;AAAA,IAC3C;AACA,QAAI,OAAO,OAAO,MAAM,kCAAkC,KACtD,OAAO,OAAO,MAAM,mBAAmB,KACvC,OAAO,OAAO,MAAM,oBAAoB,KACxC,OAAO,OAAO,MAAM,kBAAkB,GAAG;AAC3C,aAAO,YAAY,OAAO,QAAQ,SAAS,CAAC;AAAA,IAC9C;AACA,QAAI,UAAU,MAAM,EAAG,QAAO,YAAY,OAAO,QAAQ,OAAO;AAAA,QAC3D,QAAO,YAAY,OAAO,QAAQ,SAAS,CAAC;AAAA,EACnD;AACA,MAAIA,SAAQA,MAAK,OAAO,CAAC,KAAK,OAAO,eAAe,OAAO,QAAQ,EAAE,MAAM,CAAC,CAAC,GAAG;AAC9E,eAAW;AAAA,EACb;AACA,MAAIA,SAAQ,QAAQ;AAClB,QAAI,OAAO,OAAO,QAAQ;AAC1B,eAAW,YAAY,IAAI;AAC3B,QAAI,YAAY,SAAS,mBAAmB,KAAK,IAAI,GAAG;AACtD,iBAAW;AAAA,IACb;AACA,QAAI,YAAY,cAAc,QAAQ,KAAM,YAAW;AAAA,EACzD;AACA,MAAIA,SAAQ,iBAAiB;AAC3B,WAAO,YAAY,OAAO,QAAQ,cAAc;AAAA,EAClD;AACA,MAAI,aAAaA,OAAM,MAAM,GAAG;AAC9B,WAAO,YAAY,OAAO,QAAQ,QAAQ;AAAA,EAC5C;AACA,SAAO,MAAM,QAAQ;AACvB;AAMA,OAAO,iBAAiB,SAASA,OAAM,QAAQ,OAAO;AACpD,MAAIA,SAAQ,QAAQ;AAClB,eAAW;AACX,WAAO,YAAY,OAAO,QAAQ,SAAS,CAAC;AAAA,EAC9C;AACA,SAAO,WAAW,OAAO,MAAM;AACjC;AAMA,OAAO,SAAS,SAASA,OAAM,QAAQ,OAAO;AAC5C,MAAI,CAAC,eAAe,gBAAgB,OAAO,MAAM,CAAC,GAAG;AACnD,WAAO,MAAM,UAAU;AACvB,eAAW;AACX,QAAI,UAAU,MAAM,EAAG,QAAO,YAAY,OAAO,QAAQ,OAAO;AAChE,WAAO,WAAW,OAAO,MAAM;AAAA,EACjC;AACA,SAAO,WAAWA,OAAM,QAAQ,KAAK;AACvC;AAMA,OAAO,UAAU,SAASA,OAAM,QAAQ,OAAO;AAC7C,MAAIA,SAAQ,IAAK,QAAO,YAAY,OAAO,QAAQ,gBAAgB;AACnE,MAAI,YAAYA,OAAM,MAAM,GAAG;AAC7B,WAAO,YAAY,OAAO,QAAQ,OAAO;AAAA,EAC3C;AACA,MAAI,oBAAoBA,OAAM,MAAM,GAAG;AACrC,WAAO,YAAY,OAAO,QAAQ,eAAe;AAAA,EACnD;AACA,MAAIA,SAAQ,QAAQ;AAClB,QAAI,OAAO,OAAO,QAAQ,EAAE,YAAY;AACxC,QAAI,sBAAsB,KAAK,IAAI;AACjC,iBAAW;AAAA,aACJ,cAAc,eAAe,IAAI;AACxC,iBAAW;AAAA,aACJ,WAAW,eAAe,IAAI;AACrC,iBAAW;AAAA,aACJ,cAAc,eAAe,IAAI;AACxC,iBAAW;AAAA,aACJ,4BAA4B,eAAe,IAAI;AACtD,iBAAW;AAAA,QACR,YAAW,YAAY,OAAO,QAAQ,CAAC;AAC5C,QAAI,YAAY,SAAS,UAAU,MAAM,GAAG;AAC1C,aAAO,YAAY,OAAO,QAAQ,OAAO;AAAA,IAC3C;AAAA,EACF;AACA,MAAIA,SAAQ,cAAc,iBAAiB,KAAK,OAAO,QAAQ,CAAC,GAAG;AACjE,eAAW;AAAA,EACb;AACA,SAAO,MAAM,QAAQ;AACvB;AAEA,OAAO,iBAAiB,SAASA,OAAM,QAAQ,OAAO;AACpD,MAAIA,SAAQ,OAAOA,SAAQ,IAAK,QAAO,MAAM,QAAQ;AACrD,MAAIA,SAAQ,KAAK;AACf,QAAI,UAAU,MAAM,EAAG,QAAO,YAAY,OAAO,QAAQ,OAAO;AAAA,QAC3D,QAAO,YAAY,OAAO,QAAQ,SAAS;AAAA,EAClD;AACA,MAAIA,SAAQ,QAAQ;AAClB,QAAI,OAAO,OAAO,QAAQ,EAAE,YAAY;AACxC,eAAW,YAAY,IAAI;AAC3B,QAAI,aAAa,KAAK,IAAI,EAAG,YAAW;AACxC,QAAI,YAAY,OAAO;AACrB,yBAAmB,KAAK,IAAI,IAAI,WAAW,aAAa,WAAW;AAAA,IACrE;AACA,WAAO,MAAM,QAAQ;AAAA,EACvB;AACA,SAAO,OAAO,QAAQA,OAAM,QAAQ,KAAK;AAC3C;AAMA,OAAO,YAAY,SAASA,OAAM,QAAQ,OAAO;AAC/C,MAAI,OAAO,YAAY,KAAK,QAASA,SAAQ,OAAO,YAAY,MAAM,KAAMA,SAAQ,OAAOA,SAAQ,UAC5DA,SAAQ,eAAe,UAAU,OAAO,QAAQ,CAAC,IAAI;AAC1F,WAAO,WAAWA,OAAM,QAAQ,KAAK;AAAA,EACvC;AACA,MAAIA,SAAQ,IAAK,QAAO,YAAY,OAAO,QAAQ,WAAW;AAC9D,MAAIA,SAAQ,KAAK;AACf,QAAI,YAAY,MAAM,EAAG,QAAO,WAAW,OAAO,QAAQ,IAAI;AAAA,QACzD,QAAO,YAAY,OAAO,QAAQ,WAAW;AAAA,EACpD;AACA,MAAIA,SAAQ,UAAU,aAAa,KAAK,OAAO,QAAQ,CAAC,GAAG;AACzD,WAAO,YAAY,OAAO,QAAQ,WAAW;AAAA,EAC/C;AACA,MAAIA,SAAQ,QAAQ;AAClB,eAAW,YAAY,OAAO,QAAQ,CAAC;AACvC,QAAI,YAAY,iBAAiB;AAC/B,iBAAW;AACX,aAAO,YAAY,OAAO,QAAQ,WAAW;AAAA,IAC/C;AAAA,EACF;AACA,MAAI,+CAA+C,KAAKA,KAAI,GAAG;AAC7D,WAAO,YAAY,OAAO,QAAQ,UAAU,MAAM,IAAI,UAAU,SAAS;AAAA,EAC3E;AACA,MAAIA,SAAQ,SAAS;AACnB,WAAO,YAAY,OAAO,QAAQ,SAAS,CAAC;AAAA,EAC9C;AACA,SAAO,MAAM,QAAQ;AACvB;AAMA,OAAO,gBAAgB,SAASA,OAAM,QAAQ,OAAO;AACnD,MAAIA,SAAQ,IAAK,YAAW,OAAO,MAAM,KAAK,YAAY,OAAO,QAAQ,OAAO;AAChF,MAAIA,SAAQ,KAAK;AACf,QAAI,OAAO,OAAO,MAAM,iCAAiC,KACpD,OAAO,OAAO,MAAM,YAAY,KAAK,UAAU,gBAAgB,MAAM,CAAC,GAAI;AAC7E,aAAO,YAAY,OAAO,QAAQ,OAAO;AAAA,IAC3C;AACA,QAAI,CAAC,OAAO,OAAO,MAAM,aAAa,KAClC,OAAO,MAAM,YAAW,KAAK,GAAG;AAClC,aAAO,YAAY,OAAO,QAAQ,SAAS,CAAC;AAAA,IAC9C;AACA,WAAO,YAAY,OAAO,QAAQ,OAAO;AAAA,EAC3C;AACA,MAAIA,SAAQ,iBAAiB;AAC3B,WAAO,YAAY,OAAO,QAAQ,gBAAgB,CAAC;AAAA,EACrD;AACA,MAAIA,SAAQ,QAAQ;AAClB,eAAW,YAAY,OAAO,QAAQ,CAAC;AACvC,QAAI,YAAY,MAAO,YAAW;AAAA,EACpC;AACA,SAAO,MAAM,QAAQ;AACvB;AAMA,OAAO,SAAS,SAASA,OAAM,QAAQ,OAAO;AAC5C,MAAIA,SAAQ,OAAOA,SAAQ,IAAK,QAAO;AACvC,MAAIA,SAAQ,IAAK,QAAO,WAAW,OAAO,MAAM;AAChD,MAAIA,SAAQ,QAAQ;AAClB,eAAW,YAAY,OAAO,QAAQ,CAAC;AACvC,WAAO;AAAA,EACT;AACA,SAAO,WAAW,OAAO,MAAM;AACjC;AAMA,OAAO,eAAe,SAASA,OAAM,QAAQ,OAAO;AAClD,MAAIA,SAAQ,YAAYA,SAAQ,OAAOA,SAAQ,OAAO,OAAO,QAAQ,EAAE,MAAM,UAAU,GAAG;AACxF,QAAI,OAAO,QAAQ,EAAE,MAAM,YAAY,EAAG,YAAW;AACrD,WAAO;AAAA,EACT;AACA,SAAO,WAAWA,OAAM,QAAQ,KAAK;AACvC;AAEO,IAAM,SAAS;AAAA,EACpB,MAAM;AAAA,EACN,YAAY,WAAW;AACrB,WAAO;AAAA,MACL,UAAU;AAAA,MACV,OAAO;AAAA,MACP,SAAS,IAAI,QAAQ,SAAS,GAAG,IAAI;AAAA,IACvC;AAAA,EACF;AAAA,EACA,OAAO,SAAS,QAAQ,OAAO;AAC7B,QAAI,CAAC,MAAM,YAAY,OAAO,SAAS,EAAG,QAAO;AACjD,aAAS,MAAM,YAAY,WAAW,QAAQ,KAAK;AACnD,QAAI,SAAS,OAAO,SAAS,UAAU;AACrC,aAAO,MAAM,CAAC;AACd,cAAQ,MAAM,CAAC;AAAA,IACjB;AACA,eAAW;AACX,UAAM,QAAQ,OAAO,MAAM,KAAK,EAAE,MAAM,QAAQ,KAAK;AACrD,WAAO;AAAA,EACT;AAAA,EACA,QAAQ,SAAS,OAAO,WAAW,KAAK;AACtC,QAAI,KAAK,MAAM,SACXD,MAAK,aAAa,UAAU,OAAO,CAAC,GACpC,SAAS,GAAG,QACZ,gBAAgB,gBAAgB,SAAS,GACzC,aAAa,IAAI,WAAW,IAAI,GAAG,GACnC,oBAAoB,MAAM,QAAQ,OAAO,MAAM,QAAQ,KAAK,KAAK,YAAY,IAC7E,iBAAiB,MAAM,QAAQ,OAAO,MAAM,QAAQ,KAAK,KAAK,SAAS;AAE3E,QAAI,GAAG,SACFA,OAAM,QAAQ,GAAG,QAAQ,WAAW,GAAG,QAAQ,aAAa,GAAG,QAAQ,gBACvEA,OAAM,QAAQ,GAAG,QAAQ,YAAY,GAAG,QAAQ,qBAChDA,OAAM,OAAQ,GAAG,QAAQ,OAAQ;AACpC,eAAS,GAAG,SAAS,IAAI;AAAA,IAC3B,WAAW,CAAE,OAAO,KAAKA,GAAE,GAAI;AAC7B,UAAI,UAAU,KAAKA,GAAE,KACjB,MAAM,KAAK,SAAS,KAC9B,gBAAgB,KAAK,SAAS,KACpB,WAAW,KAAK,iBAAiB,KACjC,sCAAsC,KAAK,SAAS,KAC9D,yBAAyB,KAAK,SAAS,KACvC,UAAU,KAAK,SAAS,KACV,YAAY,aAAa,GAAG;AAC9B,iBAAS;AAAA,MACX,WAAW,6BAA6B,KAAKA,GAAE,KAAK,UAAU,aAAa,GAAG;AAChF,YAAI,SAAS,KAAK,iBAAiB,GAAG;AACpC,mBAAS;AAAA,QACX,WAAW,CAAC,MAAM,IAAI,MAAM,6BAA6B,KAAK,iBAAiB,KAAK,UAAU,iBAAiB,IAAI;AACjH,mBAAS,cAAc,iBAAiB,iBAAiB,iBAAiB,IAAI;AAAA,QAChF,OAAO;AACL,mBAAS;AAAA,QACX;AAAA,MACF,WAAW,CAAC,QAAQ,KAAK,SAAS,MAAM,mBAAmB,aAAa,KAAK,eAAe,aAAa,IAAI;AAC3G,YAAI,YAAY,iBAAiB,GAAG;AAClC,mBAAS,cAAc,iBAAiB,iBAAiB,iBAAiB,IAAI;AAAA,QAChF,WAAW,MAAM,KAAK,iBAAiB,GAAG;AACxC,mBAAS,cAAc,iBAAiB,aAAa,iBAAiB,IAAI;AAAA,QAC5E,WAAW,mBAAmB,iBAAiB,KAAK,eAAe,iBAAiB,GAAG;AACrF,mBAAS,cAAc,iBAAiB,iBAAiB;AAAA,QAC3D,WAAW,mCAAmC,KAAK,iBAAiB,KACzD,QAAQ,KAAK,iBAAiB,KAC9B,UAAU,iBAAiB,KAC3B,qBAAqB,KAAK,iBAAiB,GAAG;AACvD,mBAAS,iBAAiB,IAAI;AAAA,QAChC,OAAO;AACL,mBAAS;AAAA,QACX;AAAA,MACF;AAAA,IACF;AACA,WAAO;AAAA,EACT;AAAA,EACA,cAAc;AAAA,IACZ,eAAe;AAAA,IACf,eAAe,EAAC,MAAM,MAAM,OAAO,EAAC,MAAM,MAAM,OAAO,KAAI,EAAC;AAAA,IAC5D,cAAc;AAAA,EAChB;AACF;",
  "names": ["ch", "type", "override"]
}
