{
  "version": 3,
  "sources": ["../../@codemirror/legacy-modes/mode/ruby.js"],
  "sourcesContent": ["function wordObj(words) {\r\n  var o = {};\r\n  for (var i = 0, e = words.length; i < e; ++i) o[words[i]] = true;\r\n  return o;\r\n}\r\n\r\nvar keywordList = [\r\n  \"alias\", \"and\", \"BEGIN\", \"begin\", \"break\", \"case\", \"class\", \"def\", \"defined?\", \"do\", \"else\",\r\n  \"elsif\", \"END\", \"end\", \"ensure\", \"false\", \"for\", \"if\", \"in\", \"module\", \"next\", \"not\", \"or\",\r\n  \"redo\", \"rescue\", \"retry\", \"return\", \"self\", \"super\", \"then\", \"true\", \"undef\", \"unless\",\r\n  \"until\", \"when\", \"while\", \"yield\", \"nil\", \"raise\", \"throw\", \"catch\", \"fail\", \"loop\", \"callcc\",\r\n  \"caller\", \"lambda\", \"proc\", \"public\", \"protected\", \"private\", \"require\", \"load\",\r\n  \"require_relative\", \"extend\", \"autoload\", \"__END__\", \"__FILE__\", \"__LINE__\", \"__dir__\"\r\n], keywords = wordObj(keywordList);\r\n\r\nvar indentWords = wordObj([\"def\", \"class\", \"case\", \"for\", \"while\", \"until\", \"module\",\r\n                           \"catch\", \"loop\", \"proc\", \"begin\"]);\r\nvar dedentWords = wordObj([\"end\", \"until\"]);\r\nvar opening = {\"[\": \"]\", \"{\": \"}\", \"(\": \")\"};\r\nvar closing = {\"]\": \"[\", \"}\": \"{\", \")\": \"(\"};\r\n\r\nvar curPunc;\r\n\r\nfunction chain(newtok, stream, state) {\r\n  state.tokenize.push(newtok);\r\n  return newtok(stream, state);\r\n}\r\n\r\nfunction tokenBase(stream, state) {\r\n  if (stream.sol() && stream.match(\"=begin\") && stream.eol()) {\r\n    state.tokenize.push(readBlockComment);\r\n    return \"comment\";\r\n  }\r\n  if (stream.eatSpace()) return null;\r\n  var ch = stream.next(), m;\r\n  if (ch == \"`\" || ch == \"'\" || ch == '\"') {\r\n    return chain(readQuoted(ch, \"string\", ch == '\"' || ch == \"`\"), stream, state);\r\n  } else if (ch == \"/\") {\r\n    if (regexpAhead(stream))\r\n      return chain(readQuoted(ch, \"string.special\", true), stream, state);\r\n    else\r\n      return \"operator\";\r\n  } else if (ch == \"%\") {\r\n    var style = \"string\", embed = true;\r\n    if (stream.eat(\"s\")) style = \"atom\";\r\n    else if (stream.eat(/[WQ]/)) style = \"string\";\r\n    else if (stream.eat(/[r]/)) style = \"string.special\";\r\n    else if (stream.eat(/[wxq]/)) { style = \"string\"; embed = false; }\r\n    var delim = stream.eat(/[^\\w\\s=]/);\r\n    if (!delim) return \"operator\";\r\n    if (opening.propertyIsEnumerable(delim)) delim = opening[delim];\r\n    return chain(readQuoted(delim, style, embed, true), stream, state);\r\n  } else if (ch == \"#\") {\r\n    stream.skipToEnd();\r\n    return \"comment\";\r\n  } else if (ch == \"<\" && (m = stream.match(/^<([-~])[\\`\\\"\\']?([a-zA-Z_?]\\w*)[\\`\\\"\\']?(?:;|$)/))) {\r\n    return chain(readHereDoc(m[2], m[1]), stream, state);\r\n  } else if (ch == \"0\") {\r\n    if (stream.eat(\"x\")) stream.eatWhile(/[\\da-fA-F]/);\r\n    else if (stream.eat(\"b\")) stream.eatWhile(/[01]/);\r\n    else stream.eatWhile(/[0-7]/);\r\n    return \"number\";\r\n  } else if (/\\d/.test(ch)) {\r\n    stream.match(/^[\\d_]*(?:\\.[\\d_]+)?(?:[eE][+\\-]?[\\d_]+)?/);\r\n    return \"number\";\r\n  } else if (ch == \"?\") {\r\n    while (stream.match(/^\\\\[CM]-/)) {}\r\n    if (stream.eat(\"\\\\\")) stream.eatWhile(/\\w/);\r\n    else stream.next();\r\n    return \"string\";\r\n  } else if (ch == \":\") {\r\n    if (stream.eat(\"'\")) return chain(readQuoted(\"'\", \"atom\", false), stream, state);\r\n    if (stream.eat('\"')) return chain(readQuoted('\"', \"atom\", true), stream, state);\r\n\r\n    // :> :>> :< :<< are valid symbols\r\n    if (stream.eat(/[\\<\\>]/)) {\r\n      stream.eat(/[\\<\\>]/);\r\n      return \"atom\";\r\n    }\r\n\r\n    // :+ :- :/ :* :| :& :! are valid symbols\r\n    if (stream.eat(/[\\+\\-\\*\\/\\&\\|\\:\\!]/)) {\r\n      return \"atom\";\r\n    }\r\n\r\n    // Symbols can't start by a digit\r\n    if (stream.eat(/[a-zA-Z$@_\\xa1-\\uffff]/)) {\r\n      stream.eatWhile(/[\\w$\\xa1-\\uffff]/);\r\n      // Only one ? ! = is allowed and only as the last character\r\n      stream.eat(/[\\?\\!\\=]/);\r\n      return \"atom\";\r\n    }\r\n    return \"operator\";\r\n  } else if (ch == \"@\" && stream.match(/^@?[a-zA-Z_\\xa1-\\uffff]/)) {\r\n    stream.eat(\"@\");\r\n    stream.eatWhile(/[\\w\\xa1-\\uffff]/);\r\n    return \"propertyName\";\r\n  } else if (ch == \"$\") {\r\n    if (stream.eat(/[a-zA-Z_]/)) {\r\n      stream.eatWhile(/[\\w]/);\r\n    } else if (stream.eat(/\\d/)) {\r\n      stream.eat(/\\d/);\r\n    } else {\r\n      stream.next(); // Must be a special global like $: or $!\r\n    }\r\n    return \"variableName.special\";\r\n  } else if (/[a-zA-Z_\\xa1-\\uffff]/.test(ch)) {\r\n    stream.eatWhile(/[\\w\\xa1-\\uffff]/);\r\n    stream.eat(/[\\?\\!]/);\r\n    if (stream.eat(\":\")) return \"atom\";\r\n    return \"variable\";\r\n  } else if (ch == \"|\" && (state.varList || state.lastTok == \"{\" || state.lastTok == \"do\")) {\r\n    curPunc = \"|\";\r\n    return null;\r\n  } else if (/[\\(\\)\\[\\]{}\\\\;]/.test(ch)) {\r\n    curPunc = ch;\r\n    return null;\r\n  } else if (ch == \"-\" && stream.eat(\">\")) {\r\n    return \"operator\";\r\n  } else if (/[=+\\-\\/*:\\.^%<>~|]/.test(ch)) {\r\n    var more = stream.eatWhile(/[=+\\-\\/*:\\.^%<>~|]/);\r\n    if (ch == \".\" && !more) curPunc = \".\";\r\n    return \"operator\";\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\nfunction regexpAhead(stream) {\r\n  var start = stream.pos, depth = 0, next, found = false, escaped = false\r\n  while ((next = stream.next()) != null) {\r\n    if (!escaped) {\r\n      if (\"[{(\".indexOf(next) > -1) {\r\n        depth++\r\n      } else if (\"]})\".indexOf(next) > -1) {\r\n        depth--\r\n        if (depth < 0) break\r\n      } else if (next == \"/\" && depth == 0) {\r\n        found = true\r\n        break\r\n      }\r\n      escaped = next == \"\\\\\"\r\n    } else {\r\n      escaped = false\r\n    }\r\n  }\r\n  stream.backUp(stream.pos - start)\r\n  return found\r\n}\r\n\r\nfunction tokenBaseUntilBrace(depth) {\r\n  if (!depth) depth = 1;\r\n  return function(stream, state) {\r\n    if (stream.peek() == \"}\") {\r\n      if (depth == 1) {\r\n        state.tokenize.pop();\r\n        return state.tokenize[state.tokenize.length-1](stream, state);\r\n      } else {\r\n        state.tokenize[state.tokenize.length - 1] = tokenBaseUntilBrace(depth - 1);\r\n      }\r\n    } else if (stream.peek() == \"{\") {\r\n      state.tokenize[state.tokenize.length - 1] = tokenBaseUntilBrace(depth + 1);\r\n    }\r\n    return tokenBase(stream, state);\r\n  };\r\n}\r\nfunction tokenBaseOnce() {\r\n  var alreadyCalled = false;\r\n  return function(stream, state) {\r\n    if (alreadyCalled) {\r\n      state.tokenize.pop();\r\n      return state.tokenize[state.tokenize.length-1](stream, state);\r\n    }\r\n    alreadyCalled = true;\r\n    return tokenBase(stream, state);\r\n  };\r\n}\r\nfunction readQuoted(quote, style, embed, unescaped) {\r\n  return function(stream, state) {\r\n    var escaped = false, ch;\r\n\r\n    if (state.context.type === 'read-quoted-paused') {\r\n      state.context = state.context.prev;\r\n      stream.eat(\"}\");\r\n    }\r\n\r\n    while ((ch = stream.next()) != null) {\r\n      if (ch == quote && (unescaped || !escaped)) {\r\n        state.tokenize.pop();\r\n        break;\r\n      }\r\n      if (embed && ch == \"#\" && !escaped) {\r\n        if (stream.eat(\"{\")) {\r\n          if (quote == \"}\") {\r\n            state.context = {prev: state.context, type: 'read-quoted-paused'};\r\n          }\r\n          state.tokenize.push(tokenBaseUntilBrace());\r\n          break;\r\n        } else if (/[@\\$]/.test(stream.peek())) {\r\n          state.tokenize.push(tokenBaseOnce());\r\n          break;\r\n        }\r\n      }\r\n      escaped = !escaped && ch == \"\\\\\";\r\n    }\r\n    return style;\r\n  };\r\n}\r\nfunction readHereDoc(phrase, mayIndent) {\r\n  return function(stream, state) {\r\n    if (mayIndent) stream.eatSpace()\r\n    if (stream.match(phrase)) state.tokenize.pop();\r\n    else stream.skipToEnd();\r\n    return \"string\";\r\n  };\r\n}\r\nfunction readBlockComment(stream, state) {\r\n  if (stream.sol() && stream.match(\"=end\") && stream.eol())\r\n    state.tokenize.pop();\r\n  stream.skipToEnd();\r\n  return \"comment\";\r\n}\r\n\r\nexport const ruby = {\r\n  name: \"ruby\",\r\n  startState: function(indentUnit) {\r\n    return {tokenize: [tokenBase],\r\n            indented: 0,\r\n            context: {type: \"top\", indented: -indentUnit},\r\n            continuedLine: false,\r\n            lastTok: null,\r\n            varList: false};\r\n  },\r\n\r\n  token: function(stream, state) {\r\n    curPunc = null;\r\n    if (stream.sol()) state.indented = stream.indentation();\r\n    var style = state.tokenize[state.tokenize.length-1](stream, state), kwtype;\r\n    var thisTok = curPunc;\r\n    if (style == \"variable\") {\r\n      var word = stream.current();\r\n      style = state.lastTok == \".\" ? \"property\"\r\n        : keywords.propertyIsEnumerable(stream.current()) ? \"keyword\"\r\n        : /^[A-Z]/.test(word) ? \"tag\"\r\n        : (state.lastTok == \"def\" || state.lastTok == \"class\" || state.varList) ? \"def\"\r\n        : \"variable\";\r\n      if (style == \"keyword\") {\r\n        thisTok = word;\r\n        if (indentWords.propertyIsEnumerable(word)) kwtype = \"indent\";\r\n        else if (dedentWords.propertyIsEnumerable(word)) kwtype = \"dedent\";\r\n        else if ((word == \"if\" || word == \"unless\") && stream.column() == stream.indentation())\r\n          kwtype = \"indent\";\r\n        else if (word == \"do\" && state.context.indented < state.indented)\r\n          kwtype = \"indent\";\r\n      }\r\n    }\r\n    if (curPunc || (style && style != \"comment\")) state.lastTok = thisTok;\r\n    if (curPunc == \"|\") state.varList = !state.varList;\r\n\r\n    if (kwtype == \"indent\" || /[\\(\\[\\{]/.test(curPunc))\r\n      state.context = {prev: state.context, type: curPunc || style, indented: state.indented};\r\n    else if ((kwtype == \"dedent\" || /[\\)\\]\\}]/.test(curPunc)) && state.context.prev)\r\n      state.context = state.context.prev;\r\n\r\n    if (stream.eol())\r\n      state.continuedLine = (curPunc == \"\\\\\" || style == \"operator\");\r\n    return style;\r\n  },\r\n\r\n  indent: function(state, textAfter, cx) {\r\n    if (state.tokenize[state.tokenize.length-1] != tokenBase) return null;\r\n    var firstChar = textAfter && textAfter.charAt(0);\r\n    var ct = state.context;\r\n    var closed = ct.type == closing[firstChar] ||\r\n        ct.type == \"keyword\" && /^(?:end|until|else|elsif|when|rescue)\\b/.test(textAfter);\r\n    return ct.indented + (closed ? 0 : cx.unit) +\r\n      (state.continuedLine ? cx.unit : 0);\r\n  },\r\n\r\n  languageData: {\r\n    indentOnInput: /^\\s*(?:end|rescue|elsif|else|\\})$/,\r\n    commentTokens: {line: \"#\"},\r\n    autocomplete: keywordList\r\n  }\r\n};\r\n\r\n"],
  "mappings": "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",
  "names": []
}
