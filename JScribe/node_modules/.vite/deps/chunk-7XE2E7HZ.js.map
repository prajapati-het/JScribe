{
  "version": 3,
  "sources": ["../../@codemirror/legacy-modes/mode/mirc.js"],
  "sourcesContent": ["function parseWords(str) {\r\n  var obj = {}, words = str.split(\" \");\r\n  for (var i = 0; i < words.length; ++i) obj[words[i]] = true;\r\n  return obj;\r\n}\r\nvar specials = parseWords(\"$! $$ $& $? $+ $abook $abs $active $activecid \" +\r\n                          \"$activewid $address $addtok $agent $agentname $agentstat $agentver \" +\r\n                          \"$alias $and $anick $ansi2mirc $aop $appactive $appstate $asc $asctime \" +\r\n                          \"$asin $atan $avoice $away $awaymsg $awaytime $banmask $base $bfind \" +\r\n                          \"$binoff $biton $bnick $bvar $bytes $calc $cb $cd $ceil $chan $chanmodes \" +\r\n                          \"$chantypes $chat $chr $cid $clevel $click $cmdbox $cmdline $cnick $color \" +\r\n                          \"$com $comcall $comchan $comerr $compact $compress $comval $cos $count \" +\r\n                          \"$cr $crc $creq $crlf $ctime $ctimer $ctrlenter $date $day $daylight \" +\r\n                          \"$dbuh $dbuw $dccignore $dccport $dde $ddename $debug $decode $decompress \" +\r\n                          \"$deltok $devent $dialog $did $didreg $didtok $didwm $disk $dlevel $dll \" +\r\n                          \"$dllcall $dname $dns $duration $ebeeps $editbox $emailaddr $encode $error \" +\r\n                          \"$eval $event $exist $feof $ferr $fgetc $file $filename $filtered $finddir \" +\r\n                          \"$finddirn $findfile $findfilen $findtok $fline $floor $fopen $fread $fserve \" +\r\n                          \"$fulladdress $fulldate $fullname $fullscreen $get $getdir $getdot $gettok $gmt \" +\r\n                          \"$group $halted $hash $height $hfind $hget $highlight $hnick $hotline \" +\r\n                          \"$hotlinepos $ial $ialchan $ibl $idle $iel $ifmatch $ignore $iif $iil \" +\r\n                          \"$inelipse $ini $inmidi $inpaste $inpoly $input $inrect $inroundrect \" +\r\n                          \"$insong $instok $int $inwave $ip $isalias $isbit $isdde $isdir $isfile \" +\r\n                          \"$isid $islower $istok $isupper $keychar $keyrpt $keyval $knick $lactive \" +\r\n                          \"$lactivecid $lactivewid $left $len $level $lf $line $lines $link $lock \" +\r\n                          \"$lock $locked $log $logstamp $logstampfmt $longfn $longip $lower $ltimer \" +\r\n                          \"$maddress $mask $matchkey $matchtok $md5 $me $menu $menubar $menucontext \" +\r\n                          \"$menutype $mid $middir $mircdir $mircexe $mircini $mklogfn $mnick $mode \" +\r\n                          \"$modefirst $modelast $modespl $mouse $msfile $network $newnick $nick $nofile \" +\r\n                          \"$nopath $noqt $not $notags $notify $null $numeric $numok $oline $onpoly \" +\r\n                          \"$opnick $or $ord $os $passivedcc $pic $play $pnick $port $portable $portfree \" +\r\n                          \"$pos $prefix $prop $protect $puttok $qt $query $rand $r $rawmsg $read $readomo \" +\r\n                          \"$readn $regex $regml $regsub $regsubex $remove $remtok $replace $replacex \" +\r\n                          \"$reptok $result $rgb $right $round $scid $scon $script $scriptdir $scriptline \" +\r\n                          \"$sdir $send $server $serverip $sfile $sha1 $shortfn $show $signal $sin \" +\r\n                          \"$site $sline $snick $snicks $snotify $sock $sockbr $sockerr $sockname \" +\r\n                          \"$sorttok $sound $sqrt $ssl $sreq $sslready $status $strip $str $stripped \" +\r\n                          \"$syle $submenu $switchbar $tan $target $ticks $time $timer $timestamp \" +\r\n                          \"$timestampfmt $timezone $tip $titlebar $toolbar $treebar $trust $ulevel \" +\r\n                          \"$ulist $upper $uptime $url $usermode $v1 $v2 $var $vcmd $vcmdstat $vcmdver \" +\r\n                          \"$version $vnick $vol $wid $width $wildsite $wildtok $window $wrap $xor\");\r\nvar keywords = parseWords(\"abook ajinvite alias aline ame amsg anick aop auser autojoin avoice \" +\r\n                          \"away background ban bcopy beep bread break breplace bset btrunc bunset bwrite \" +\r\n                          \"channel clear clearall cline clipboard close cnick color comclose comopen \" +\r\n                          \"comreg continue copy creq ctcpreply ctcps dcc dccserver dde ddeserver \" +\r\n                          \"debug dec describe dialog did didtok disable disconnect dlevel dline dll \" +\r\n                          \"dns dqwindow drawcopy drawdot drawfill drawline drawpic drawrect drawreplace \" +\r\n                          \"drawrot drawsave drawscroll drawtext ebeeps echo editbox emailaddr enable \" +\r\n                          \"events exit fclose filter findtext finger firewall flash flist flood flush \" +\r\n                          \"flushini font fopen fseek fsend fserve fullname fwrite ghide gload gmove \" +\r\n                          \"gopts goto gplay gpoint gqreq groups gshow gsize gstop gtalk gunload hadd \" +\r\n                          \"halt haltdef hdec hdel help hfree hinc hload hmake hop hsave ial ialclear \" +\r\n                          \"ialmark identd if ignore iline inc invite iuser join kick linesep links list \" +\r\n                          \"load loadbuf localinfo log mdi me menubar mkdir mnick mode msg nick noop notice \" +\r\n                          \"notify omsg onotice part partall pdcc perform play playctrl pop protect pvoice \" +\r\n                          \"qme qmsg query queryn quit raw reload remini remote remove rename renwin \" +\r\n                          \"reseterror resetidle return rlevel rline rmdir run ruser save savebuf saveini \" +\r\n                          \"say scid scon server set showmirc signam sline sockaccept sockclose socklist \" +\r\n                          \"socklisten sockmark sockopen sockpause sockread sockrename sockudp sockwrite \" +\r\n                          \"sound speak splay sreq strip switchbar timer timestamp titlebar tnick tokenize \" +\r\n                          \"toolbar topic tray treebar ulist unload unset unsetall updatenl url uwho \" +\r\n                          \"var vcadd vcmd vcrem vol while whois window winhelp write writeint if isalnum \" +\r\n                          \"isalpha isaop isavoice isban ischan ishop isignore isin isincs isletter islower \" +\r\n                          \"isnotify isnum ison isop isprotect isreg isupper isvoice iswm iswmcs \" +\r\n                          \"elseif else goto menu nicklist status title icon size option text edit \" +\r\n                          \"button check radio box scroll list combo link tab item\");\r\nvar functions = parseWords(\"if elseif else and not or eq ne in ni for foreach while switch\");\r\nvar isOperatorChar = /[+\\-*&%=<>!?^\\/\\|]/;\r\nfunction chain(stream, state, f) {\r\n  state.tokenize = f;\r\n  return f(stream, state);\r\n}\r\nfunction tokenBase(stream, state) {\r\n  var beforeParams = state.beforeParams;\r\n  state.beforeParams = false;\r\n  var ch = stream.next();\r\n  if (/[\\[\\]{}\\(\\),\\.]/.test(ch)) {\r\n    if (ch == \"(\" && beforeParams) state.inParams = true;\r\n    else if (ch == \")\") state.inParams = false;\r\n    return null;\r\n  }\r\n  else if (/\\d/.test(ch)) {\r\n    stream.eatWhile(/[\\w\\.]/);\r\n    return \"number\";\r\n  }\r\n  else if (ch == \"\\\\\") {\r\n    stream.eat(\"\\\\\");\r\n    stream.eat(/./);\r\n    return \"number\";\r\n  }\r\n  else if (ch == \"/\" && stream.eat(\"*\")) {\r\n    return chain(stream, state, tokenComment);\r\n  }\r\n  else if (ch == \";\" && stream.match(/ *\\( *\\(/)) {\r\n    return chain(stream, state, tokenUnparsed);\r\n  }\r\n  else if (ch == \";\" && !state.inParams) {\r\n    stream.skipToEnd();\r\n    return \"comment\";\r\n  }\r\n  else if (ch == '\"') {\r\n    stream.eat(/\"/);\r\n    return \"keyword\";\r\n  }\r\n  else if (ch == \"$\") {\r\n    stream.eatWhile(/[$_a-z0-9A-Z\\.:]/);\r\n    if (specials && specials.propertyIsEnumerable(stream.current().toLowerCase())) {\r\n      return \"keyword\";\r\n    }\r\n    else {\r\n      state.beforeParams = true;\r\n      return \"builtin\";\r\n    }\r\n  }\r\n  else if (ch == \"%\") {\r\n    stream.eatWhile(/[^,\\s()]/);\r\n    state.beforeParams = true;\r\n    return \"string\";\r\n  }\r\n  else if (isOperatorChar.test(ch)) {\r\n    stream.eatWhile(isOperatorChar);\r\n    return \"operator\";\r\n  }\r\n  else {\r\n    stream.eatWhile(/[\\w\\$_{}]/);\r\n    var word = stream.current().toLowerCase();\r\n    if (keywords && keywords.propertyIsEnumerable(word))\r\n      return \"keyword\";\r\n    if (functions && functions.propertyIsEnumerable(word)) {\r\n      state.beforeParams = true;\r\n      return \"keyword\";\r\n    }\r\n    return null;\r\n  }\r\n}\r\nfunction tokenComment(stream, state) {\r\n  var maybeEnd = false, ch;\r\n  while (ch = stream.next()) {\r\n    if (ch == \"/\" && maybeEnd) {\r\n      state.tokenize = tokenBase;\r\n      break;\r\n    }\r\n    maybeEnd = (ch == \"*\");\r\n  }\r\n  return \"comment\";\r\n}\r\nfunction tokenUnparsed(stream, state) {\r\n  var maybeEnd = 0, ch;\r\n  while (ch = stream.next()) {\r\n    if (ch == \";\" && maybeEnd == 2) {\r\n      state.tokenize = tokenBase;\r\n      break;\r\n    }\r\n    if (ch == \")\")\r\n      maybeEnd++;\r\n    else if (ch != \" \")\r\n      maybeEnd = 0;\r\n  }\r\n  return \"meta\";\r\n}\r\nexport const mirc = {\r\n  name: \"mirc\",\r\n  startState: function() {\r\n    return {\r\n      tokenize: tokenBase,\r\n      beforeParams: false,\r\n      inParams: false\r\n    };\r\n  },\r\n  token: function(stream, state) {\r\n    if (stream.eatSpace()) return null;\r\n    return state.tokenize(stream, state);\r\n  }\r\n};\r\n"],
  "mappings": "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",
  "names": []
}
