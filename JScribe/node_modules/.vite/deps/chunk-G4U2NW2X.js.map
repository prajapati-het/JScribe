{
  "version": 3,
  "sources": ["../../@codemirror/legacy-modes/mode/r.js"],
  "sourcesContent": ["function wordObj(words) {\r\n  var res = {};\r\n  for (var i = 0; i < words.length; ++i) res[words[i]] = true;\r\n  return res;\r\n}\r\nvar commonAtoms = [\"NULL\", \"NA\", \"Inf\", \"NaN\", \"NA_integer_\", \"NA_real_\", \"NA_complex_\", \"NA_character_\", \"TRUE\", \"FALSE\"];\r\nvar commonBuiltins = [\"list\", \"quote\", \"bquote\", \"eval\", \"return\", \"call\", \"parse\", \"deparse\"];\r\nvar commonKeywords = [\"if\", \"else\", \"repeat\", \"while\", \"function\", \"for\", \"in\", \"next\", \"break\"];\r\nvar commonBlockKeywords = [\"if\", \"else\", \"repeat\", \"while\", \"function\", \"for\"];\r\n\r\nvar atoms = wordObj(commonAtoms);\r\nvar builtins = wordObj(commonBuiltins);\r\nvar keywords = wordObj(commonKeywords);\r\nvar blockkeywords = wordObj(commonBlockKeywords);\r\nvar opChars = /[+\\-*\\/^<>=!&|~$:]/;\r\nvar curPunc;\r\n\r\nfunction tokenBase(stream, state) {\r\n  curPunc = null;\r\n  var ch = stream.next();\r\n  if (ch == \"#\") {\r\n    stream.skipToEnd();\r\n    return \"comment\";\r\n  } else if (ch == \"0\" && stream.eat(\"x\")) {\r\n    stream.eatWhile(/[\\da-f]/i);\r\n    return \"number\";\r\n  } else if (ch == \".\" && stream.eat(/\\d/)) {\r\n    stream.match(/\\d*(?:e[+\\-]?\\d+)?/);\r\n    return \"number\";\r\n  } else if (/\\d/.test(ch)) {\r\n    stream.match(/\\d*(?:\\.\\d+)?(?:e[+\\-]\\d+)?L?/);\r\n    return \"number\";\r\n  } else if (ch == \"'\" || ch == '\"') {\r\n    state.tokenize = tokenString(ch);\r\n    return \"string\";\r\n  } else if (ch == \"`\") {\r\n    stream.match(/[^`]+`/);\r\n    return \"string.special\";\r\n  } else if (ch == \".\" && stream.match(/.(?:[.]|\\d+)/)) {\r\n    return \"keyword\";\r\n  } else if (/[a-zA-Z\\.]/.test(ch)) {\r\n    stream.eatWhile(/[\\w\\.]/);\r\n    var word = stream.current();\r\n    if (atoms.propertyIsEnumerable(word)) return \"atom\";\r\n    if (keywords.propertyIsEnumerable(word)) {\r\n      // Block keywords start new blocks, except 'else if', which only starts\r\n      // one new block for the 'if', no block for the 'else'.\r\n      if (blockkeywords.propertyIsEnumerable(word) &&\r\n          !stream.match(/\\s*if(\\s+|$)/, false))\r\n        curPunc = \"block\";\r\n      return \"keyword\";\r\n    }\r\n    if (builtins.propertyIsEnumerable(word)) return \"builtin\";\r\n    return \"variable\";\r\n  } else if (ch == \"%\") {\r\n    if (stream.skipTo(\"%\")) stream.next();\r\n    return \"variableName.special\";\r\n  } else if (\r\n    (ch == \"<\" && stream.eat(\"-\")) ||\r\n      (ch == \"<\" && stream.match(\"<-\")) ||\r\n      (ch == \"-\" && stream.match(/>>?/))\r\n  ) {\r\n    return \"operator\";\r\n  } else if (ch == \"=\" && state.ctx.argList) {\r\n    return \"operator\";\r\n  } else if (opChars.test(ch)) {\r\n    if (ch == \"$\") return \"operator\";\r\n    stream.eatWhile(opChars);\r\n    return \"operator\";\r\n  } else if (/[\\(\\){}\\[\\];]/.test(ch)) {\r\n    curPunc = ch;\r\n    if (ch == \";\") return \"punctuation\";\r\n    return null;\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\nfunction tokenString(quote) {\r\n  return function(stream, state) {\r\n    if (stream.eat(\"\\\\\")) {\r\n      var ch = stream.next();\r\n      if (ch == \"x\") stream.match(/^[a-f0-9]{2}/i);\r\n      else if ((ch == \"u\" || ch == \"U\") && stream.eat(\"{\") && stream.skipTo(\"}\")) stream.next();\r\n      else if (ch == \"u\") stream.match(/^[a-f0-9]{4}/i);\r\n      else if (ch == \"U\") stream.match(/^[a-f0-9]{8}/i);\r\n      else if (/[0-7]/.test(ch)) stream.match(/^[0-7]{1,2}/);\r\n      return \"string.special\";\r\n    } else {\r\n      var next;\r\n      while ((next = stream.next()) != null) {\r\n        if (next == quote) { state.tokenize = tokenBase; break; }\r\n        if (next == \"\\\\\") { stream.backUp(1); break; }\r\n      }\r\n      return \"string\";\r\n    }\r\n  };\r\n}\r\n\r\nvar ALIGN_YES = 1, ALIGN_NO = 2, BRACELESS = 4\r\n\r\nfunction push(state, type, stream) {\r\n  state.ctx = {type: type,\r\n               indent: state.indent,\r\n               flags: 0,\r\n               column: stream.column(),\r\n               prev: state.ctx};\r\n}\r\nfunction setFlag(state, flag) {\r\n  var ctx = state.ctx\r\n  state.ctx = {type: ctx.type,\r\n               indent: ctx.indent,\r\n               flags: ctx.flags | flag,\r\n               column: ctx.column,\r\n               prev: ctx.prev}\r\n}\r\nfunction pop(state) {\r\n  state.indent = state.ctx.indent;\r\n  state.ctx = state.ctx.prev;\r\n}\r\n\r\nexport const r = {\r\n  name: \"r\",\r\n  startState: function(indentUnit) {\r\n    return {tokenize: tokenBase,\r\n            ctx: {type: \"top\",\r\n                  indent: -indentUnit,\r\n                  flags: ALIGN_NO},\r\n            indent: 0,\r\n            afterIdent: false};\r\n  },\r\n\r\n  token: function(stream, state) {\r\n    if (stream.sol()) {\r\n      if ((state.ctx.flags & 3) == 0) state.ctx.flags |= ALIGN_NO\r\n      if (state.ctx.flags & BRACELESS) pop(state)\r\n      state.indent = stream.indentation();\r\n    }\r\n    if (stream.eatSpace()) return null;\r\n    var style = state.tokenize(stream, state);\r\n    if (style != \"comment\" && (state.ctx.flags & ALIGN_NO) == 0) setFlag(state, ALIGN_YES)\r\n\r\n    if ((curPunc == \";\" || curPunc == \"{\" || curPunc == \"}\") && state.ctx.type == \"block\") pop(state);\r\n    if (curPunc == \"{\") push(state, \"}\", stream);\r\n    else if (curPunc == \"(\") {\r\n      push(state, \")\", stream);\r\n      if (state.afterIdent) state.ctx.argList = true;\r\n    }\r\n    else if (curPunc == \"[\") push(state, \"]\", stream);\r\n    else if (curPunc == \"block\") push(state, \"block\", stream);\r\n    else if (curPunc == state.ctx.type) pop(state);\r\n    else if (state.ctx.type == \"block\" && style != \"comment\") setFlag(state, BRACELESS)\r\n    state.afterIdent = style == \"variable\" || style == \"keyword\";\r\n    return style;\r\n  },\r\n\r\n  indent: function(state, textAfter, cx) {\r\n    if (state.tokenize != tokenBase) return 0;\r\n    var firstChar = textAfter && textAfter.charAt(0), ctx = state.ctx,\r\n        closing = firstChar == ctx.type;\r\n    if (ctx.flags & BRACELESS) ctx = ctx.prev\r\n    if (ctx.type == \"block\") return ctx.indent + (firstChar == \"{\" ? 0 : cx.unit);\r\n    else if (ctx.flags & ALIGN_YES) return ctx.column + (closing ? 0 : 1);\r\n    else return ctx.indent + (closing ? 0 : cx.unit);\r\n  },\r\n\r\n  languageData: {\r\n    wordChars: \".\",\r\n    commentTokens: {line: \"#\"},\r\n    autocomplete: commonAtoms.concat(commonBuiltins, commonKeywords)\r\n  }\r\n};\r\n"],
  "mappings": "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",
  "names": []
}
