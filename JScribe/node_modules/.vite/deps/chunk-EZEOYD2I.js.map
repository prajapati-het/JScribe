{
  "version": 3,
  "sources": ["../../@codemirror/legacy-modes/mode/dtd.js"],
  "sourcesContent": ["var type;\r\nfunction ret(style, tp) {type = tp; return style;}\r\n\r\nfunction tokenBase(stream, state) {\r\n  var ch = stream.next();\r\n\r\n  if (ch == \"<\" && stream.eat(\"!\") ) {\r\n    if (stream.eatWhile(/[\\-]/)) {\r\n      state.tokenize = tokenSGMLComment;\r\n      return tokenSGMLComment(stream, state);\r\n    } else if (stream.eatWhile(/[\\w]/)) return ret(\"keyword\", \"doindent\");\r\n  } else if (ch == \"<\" && stream.eat(\"?\")) { //xml declaration\r\n    state.tokenize = inBlock(\"meta\", \"?>\");\r\n    return ret(\"meta\", ch);\r\n  } else if (ch == \"#\" && stream.eatWhile(/[\\w]/)) return ret(\"atom\", \"tag\");\r\n  else if (ch == \"|\") return ret(\"keyword\", \"separator\");\r\n  else if (ch.match(/[\\(\\)\\[\\]\\-\\.,\\+\\?>]/)) return ret(null, ch);//if(ch === \">\") return ret(null, \"endtag\"); else\r\n  else if (ch.match(/[\\[\\]]/)) return ret(\"rule\", ch);\r\n  else if (ch == \"\\\"\" || ch == \"'\") {\r\n    state.tokenize = tokenString(ch);\r\n    return state.tokenize(stream, state);\r\n  } else if (stream.eatWhile(/[a-zA-Z\\?\\+\\d]/)) {\r\n    var sc = stream.current();\r\n    if( sc.substr(sc.length-1,sc.length).match(/\\?|\\+/) !== null )stream.backUp(1);\r\n    return ret(\"tag\", \"tag\");\r\n  } else if (ch == \"%\" || ch == \"*\" ) return ret(\"number\", \"number\");\r\n  else {\r\n    stream.eatWhile(/[\\w\\\\\\-_%.{,]/);\r\n    return ret(null, null);\r\n  }\r\n}\r\n\r\nfunction tokenSGMLComment(stream, state) {\r\n  var dashes = 0, ch;\r\n  while ((ch = stream.next()) != null) {\r\n    if (dashes >= 2 && ch == \">\") {\r\n      state.tokenize = tokenBase;\r\n      break;\r\n    }\r\n    dashes = (ch == \"-\") ? dashes + 1 : 0;\r\n  }\r\n  return ret(\"comment\", \"comment\");\r\n}\r\n\r\nfunction tokenString(quote) {\r\n  return function(stream, state) {\r\n    var escaped = false, ch;\r\n    while ((ch = stream.next()) != null) {\r\n      if (ch == quote && !escaped) {\r\n        state.tokenize = tokenBase;\r\n        break;\r\n      }\r\n      escaped = !escaped && ch == \"\\\\\";\r\n    }\r\n    return ret(\"string\", \"tag\");\r\n  };\r\n}\r\n\r\nfunction inBlock(style, terminator) {\r\n  return function(stream, state) {\r\n    while (!stream.eol()) {\r\n      if (stream.match(terminator)) {\r\n        state.tokenize = tokenBase;\r\n        break;\r\n      }\r\n      stream.next();\r\n    }\r\n    return style;\r\n  };\r\n}\r\n\r\nexport const dtd = {\r\n  name: \"dtd\",\r\n  startState: function() {\r\n    return {tokenize: tokenBase,\r\n            baseIndent: 0,\r\n            stack: []};\r\n  },\r\n\r\n  token: function(stream, state) {\r\n    if (stream.eatSpace()) return null;\r\n    var style = state.tokenize(stream, state);\r\n\r\n    var context = state.stack[state.stack.length-1];\r\n    if (stream.current() == \"[\" || type === \"doindent\" || type == \"[\") state.stack.push(\"rule\");\r\n    else if (type === \"endtag\") state.stack[state.stack.length-1] = \"endtag\";\r\n    else if (stream.current() == \"]\" || type == \"]\" || (type == \">\" && context == \"rule\")) state.stack.pop();\r\n    else if (type == \"[\") state.stack.push(\"[\");\r\n    return style;\r\n  },\r\n\r\n  indent: function(state, textAfter, cx) {\r\n    var n = state.stack.length;\r\n\r\n    if( textAfter.charAt(0) === ']' )n--;\r\n    else if(textAfter.substr(textAfter.length-1, textAfter.length) === \">\"){\r\n      if(textAfter.substr(0,1) === \"<\") {}\r\n      else if( type == \"doindent\" && textAfter.length > 1 ) {}\r\n      else if( type == \"doindent\")n--;\r\n      else if( type == \">\" && textAfter.length > 1) {}\r\n      else if( type == \"tag\" && textAfter !== \">\") {}\r\n      else if( type == \"tag\" && state.stack[state.stack.length-1] == \"rule\")n--;\r\n      else if( type == \"tag\")n++;\r\n      else if( textAfter === \">\" && state.stack[state.stack.length-1] == \"rule\" && type === \">\")n--;\r\n      else if( textAfter === \">\" && state.stack[state.stack.length-1] == \"rule\") {}\r\n      else if( textAfter.substr(0,1) !== \"<\" && textAfter.substr(0,1) === \">\" )n=n-1;\r\n      else if( textAfter === \">\") {}\r\n      else n=n-1;\r\n      //over rule them all\r\n      if(type == null || type == \"]\")n--;\r\n    }\r\n\r\n    return state.baseIndent + n * cx.unit;\r\n  },\r\n\r\n  languageData: {\r\n    indentOnInput: /^\\s*[\\]>]$/\r\n  }\r\n};\r\n\r\n"],
  "mappings": "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",
  "names": []
}
