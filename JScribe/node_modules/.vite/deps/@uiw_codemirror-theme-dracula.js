import {
  _extends
} from "./chunk-EQCCHGRT.js";
import {
  EditorView,
  HighlightStyle,
  syntaxHighlighting
} from "./chunk-FFBEV2VV.js";
import {
  tags
} from "./chunk-5H2ER2MB.js";
import "./chunk-DC5AMYBS.js";

// node_modules/@uiw/codemirror-themes/esm/index.js
var createTheme = (_ref) => {
  var {
    theme,
    settings = {},
    styles = []
  } = _ref;
  var themeOptions = {
    ".cm-gutters": {}
  };
  var baseStyle = {};
  if (settings.background) {
    baseStyle.backgroundColor = settings.background;
  }
  if (settings.backgroundImage) {
    baseStyle.backgroundImage = settings.backgroundImage;
  }
  if (settings.foreground) {
    baseStyle.color = settings.foreground;
  }
  if (settings.fontSize) {
    baseStyle.fontSize = settings.fontSize;
  }
  if (settings.background || settings.foreground) {
    themeOptions["&"] = baseStyle;
  }
  if (settings.fontFamily) {
    themeOptions["&.cm-editor .cm-scroller"] = {
      fontFamily: settings.fontFamily
    };
  }
  if (settings.gutterBackground) {
    themeOptions[".cm-gutters"].backgroundColor = settings.gutterBackground;
  }
  if (settings.gutterForeground) {
    themeOptions[".cm-gutters"].color = settings.gutterForeground;
  }
  if (settings.gutterBorder) {
    themeOptions[".cm-gutters"].borderRightColor = settings.gutterBorder;
  }
  if (settings.caret) {
    themeOptions[".cm-content"] = {
      caretColor: settings.caret
    };
    themeOptions[".cm-cursor, .cm-dropCursor"] = {
      borderLeftColor: settings.caret
    };
  }
  var activeLineGutterStyle = {};
  if (settings.gutterActiveForeground) {
    activeLineGutterStyle.color = settings.gutterActiveForeground;
  }
  if (settings.lineHighlight) {
    themeOptions[".cm-activeLine"] = {
      backgroundColor: settings.lineHighlight
    };
    activeLineGutterStyle.backgroundColor = settings.lineHighlight;
  }
  themeOptions[".cm-activeLineGutter"] = activeLineGutterStyle;
  if (settings.selection) {
    themeOptions["&.cm-focused .cm-selectionBackground, & .cm-line::selection, & .cm-selectionLayer .cm-selectionBackground, .cm-content ::selection"] = {
      background: settings.selection + " !important"
    };
  }
  if (settings.selectionMatch) {
    themeOptions["& .cm-selectionMatch"] = {
      backgroundColor: settings.selectionMatch
    };
  }
  var themeExtension = EditorView.theme(themeOptions, {
    dark: theme === "dark"
  });
  var highlightStyle = HighlightStyle.define(styles);
  var extension = [themeExtension, syntaxHighlighting(highlightStyle)];
  return extension;
};

// node_modules/@uiw/codemirror-theme-dracula/esm/index.js
var defaultSettingsDracula = {
  background: "#282a36",
  foreground: "#f8f8f2",
  caret: "#f8f8f0",
  selection: "rgba(255, 255, 255, 0.1)",
  selectionMatch: "rgba(255, 255, 255, 0.2)",
  gutterBackground: "#282a36",
  gutterForeground: "#6D8A88",
  gutterBorder: "transparent",
  lineHighlight: "rgba(255, 255, 255, 0.1)"
};
var draculaDarkStyle = [{
  tag: tags.comment,
  color: "#6272a4"
}, {
  tag: tags.string,
  color: "#f1fa8c"
}, {
  tag: tags.atom,
  color: "#bd93f9"
}, {
  tag: tags.meta,
  color: "#f8f8f2"
}, {
  tag: [tags.keyword, tags.operator, tags.tagName],
  color: "#ff79c6"
}, {
  tag: [tags.function(tags.propertyName), tags.propertyName],
  color: "#66d9ef"
}, {
  tag: [tags.definition(tags.variableName), tags.function(tags.variableName), tags.className, tags.attributeName],
  color: "#50fa7b"
}, {
  tag: tags.atom,
  color: "#bd93f9"
}];
var draculaInit = (options) => {
  var {
    theme = "dark",
    settings = {},
    styles = []
  } = options || {};
  return createTheme({
    theme,
    settings: _extends({}, defaultSettingsDracula, settings),
    styles: [...draculaDarkStyle, ...styles]
  });
};
var dracula = draculaInit();
export {
  defaultSettingsDracula,
  dracula,
  draculaDarkStyle,
  draculaInit
};
//# sourceMappingURL=@uiw_codemirror-theme-dracula.js.map
