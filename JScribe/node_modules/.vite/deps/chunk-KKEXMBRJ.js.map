{
  "version": 3,
  "sources": ["../../@lezer/xml/dist/index.js", "../../@codemirror/lang-xml/dist/index.js"],
  "sourcesContent": ["import { ContextTracker, ExternalTokenizer, LRParser } from '@lezer/lr';\r\nimport { styleTags, tags } from '@lezer/highlight';\r\n\r\n// This file was generated by lezer-generator. You probably shouldn't edit it.\r\nconst StartTag = 1,\r\n  StartCloseTag = 2,\r\n  MissingCloseTag = 3,\r\n  mismatchedStartCloseTag = 4,\r\n  incompleteStartCloseTag = 5,\r\n  commentContent$1 = 35,\r\n  piContent$1 = 36,\r\n  cdataContent$1 = 37,\r\n  Element = 11,\r\n  OpenTag = 13;\r\n\r\n/* Hand-written tokenizer for XML tag matching. */\r\n\r\nfunction nameChar(ch) {\r\n  return ch == 45 || ch == 46 || ch == 58 || ch >= 65 && ch <= 90 || ch == 95 || ch >= 97 && ch <= 122 || ch >= 161\r\n}\r\n\r\nfunction isSpace(ch) {\r\n  return ch == 9 || ch == 10 || ch == 13 || ch == 32\r\n}\r\n\r\nlet cachedName = null, cachedInput = null, cachedPos = 0;\r\nfunction tagNameAfter(input, offset) {\r\n  let pos = input.pos + offset;\r\n  if (cachedInput == input && cachedPos == pos) return cachedName\r\n  while (isSpace(input.peek(offset))) offset++;\r\n  let name = \"\";\r\n  for (;;) {\r\n    let next = input.peek(offset);\r\n    if (!nameChar(next)) break\r\n    name += String.fromCharCode(next);\r\n    offset++;\r\n  }\r\n  cachedInput = input; cachedPos = pos;\r\n  return cachedName = name || null\r\n}\r\n\r\nfunction ElementContext(name, parent) {\r\n  this.name = name;\r\n  this.parent = parent;\r\n  this.hash = parent ? parent.hash : 0;\r\n  for (let i = 0; i < name.length; i++) this.hash += (this.hash << 4) + name.charCodeAt(i) + (name.charCodeAt(i) << 8);\r\n}\r\n\r\nconst elementContext = new ContextTracker({\r\n  start: null,\r\n  shift(context, term, stack, input) {\r\n    return term == StartTag ? new ElementContext(tagNameAfter(input, 1) || \"\", context) : context\r\n  },\r\n  reduce(context, term) {\r\n    return term == Element && context ? context.parent : context\r\n  },\r\n  reuse(context, node, _stack, input) {\r\n    let type = node.type.id;\r\n    return type == StartTag || type == OpenTag\r\n      ? new ElementContext(tagNameAfter(input, 1) || \"\", context) : context\r\n  },\r\n  hash(context) { return context ? context.hash : 0 },\r\n  strict: false\r\n});\r\n\r\nconst startTag = new ExternalTokenizer((input, stack) => {\r\n  if (input.next != 60 /* '<' */) return\r\n  input.advance();\r\n  if (input.next == 47 /* '/' */) {\r\n    input.advance();\r\n    let name = tagNameAfter(input, 0);\r\n    if (!name) return input.acceptToken(incompleteStartCloseTag)\r\n    if (stack.context && name == stack.context.name) return input.acceptToken(StartCloseTag)\r\n    for (let cx = stack.context; cx; cx = cx.parent) if (cx.name == name) return input.acceptToken(MissingCloseTag, -2)\r\n    input.acceptToken(mismatchedStartCloseTag);\r\n  } else if (input.next != 33 /* '!' */ && input.next != 63 /* '?' */) {\r\n    return input.acceptToken(StartTag)\r\n  }\r\n}, {contextual: true});\r\n\r\nfunction scanTo(type, end) {\r\n  return new ExternalTokenizer(input => {\r\n    let len = 0, first = end.charCodeAt(0);\r\n    scan: for (;; input.advance(), len++) {\r\n      if (input.next < 0) break\r\n      if (input.next == first) {\r\n        for (let i = 1; i < end.length; i++)\r\n          if (input.peek(i) != end.charCodeAt(i)) continue scan\r\n        break\r\n      }\r\n    }\r\n    if (len) input.acceptToken(type);\r\n  })\r\n}\r\n\r\nconst commentContent = scanTo(commentContent$1, \"-->\");\r\nconst piContent = scanTo(piContent$1, \"?>\");\r\nconst cdataContent = scanTo(cdataContent$1, \"]]>\");\r\n\r\nconst xmlHighlighting = styleTags({\r\n  Text: tags.content,\r\n  \"StartTag StartCloseTag EndTag SelfCloseEndTag\": tags.angleBracket,\r\n  TagName: tags.tagName,\r\n  \"MismatchedCloseTag/TagName\": [tags.tagName, tags.invalid],\r\n  AttributeName: tags.attributeName,\r\n  AttributeValue: tags.attributeValue,\r\n  Is: tags.definitionOperator,\r\n  \"EntityReference CharacterReference\": tags.character,\r\n  Comment: tags.blockComment,\r\n  ProcessingInst: tags.processingInstruction,\r\n  DoctypeDecl: tags.documentMeta,\r\n  Cdata: tags.special(tags.string)\r\n});\r\n\r\n// This file was generated by lezer-generator. You probably shouldn't edit it.\r\nconst parser = LRParser.deserialize({\r\n  version: 14,\r\n  states: \",SOQOaOOOrOxO'#CfOzOpO'#CiO!tOaO'#CgOOOP'#Cg'#CgO!{OrO'#CrO#TOtO'#CsO#]OpO'#CtOOOP'#DS'#DSOOOP'#Cv'#CvQQOaOOOOOW'#Cw'#CwO#eOxO,59QOOOP,59Q,59QOOOO'#Cx'#CxO#mOpO,59TO#uO!bO,59TOOOP'#C{'#C{O$TOaO,59RO$[OpO'#CoOOOP,59R,59ROOOQ'#C|'#C|O$dOrO,59^OOOP,59^,59^OOOS'#C}'#C}O$lOtO,59_OOOP,59_,59_O$tOpO,59`O$|OpO,59`OOOP-E6t-E6tOOOW-E6u-E6uOOOP1G.l1G.lOOOO-E6v-E6vO%UO!bO1G.oO%UO!bO1G.oO%dOpO'#CkO%lO!bO'#CyO%zO!bO1G.oOOOP1G.o1G.oOOOP1G.w1G.wOOOP-E6y-E6yOOOP1G.m1G.mO&VOpO,59ZO&_OpO,59ZOOOQ-E6z-E6zOOOP1G.x1G.xOOOS-E6{-E6{OOOP1G.y1G.yO&gOpO1G.zO&gOpO1G.zOOOP1G.z1G.zO&oO!bO7+$ZO&}O!bO7+$ZOOOP7+$Z7+$ZOOOP7+$c7+$cO'YOpO,59VO'bOpO,59VO'jO!bO,59eOOOO-E6w-E6wO'xOpO1G.uO'xOpO1G.uOOOP1G.u1G.uO(QOpO7+$fOOOP7+$f7+$fO(YO!bO<<GuOOOP<<Gu<<GuOOOP<<G}<<G}O'bOpO1G.qO'bOpO1G.qO(eO#tO'#CnOOOO1G.q1G.qO(sOpO7+$aOOOP7+$a7+$aOOOP<<HQ<<HQOOOPAN=aAN=aOOOPAN=iAN=iO'bOpO7+$]OOOO7+$]7+$]OOOO'#Cz'#CzO({O#tO,59YOOOO,59Y,59YOOOP<<G{<<G{OOOO<<Gw<<GwOOOO-E6x-E6xOOOO1G.t1G.t\",\r\n  stateData: \")Z~OPQOSVOTWOVWOWWOXWOiXOxPO}TO!PUO~OuZOw]O~O^`Oy^O~OPQOQcOSVOTWOVWOWWOXWOxPO}TO!PUO~ORdO~P!SOseO|gO~OthO!OjO~O^lOy^O~OuZOwoO~O^qOy^O~O[vO`sOdwOy^O~ORyO~P!SO^{Oy^O~OseO|}O~OthO!O!PO~O^!QOy^O~O[!SOy^O~O[!VO`sOd!WOy^O~Oa!YOy^O~Oy^O[mX`mXdmX~O[!VO`sOd!WO~O^!]Oy^O~O[!_Oy^O~O[!aOy^O~O[!cO`sOd!dOy^O~O[!cO`sOd!dO~Oa!eOy^O~Oy^Oz!gO~Oy^O[ma`madma~O[!jOy^O~O[!kOy^O~O[!lO`sOd!mO~OW!pOX!pOz!rO{!pO~O[!sOy^O~OW!pOX!pOz!vO{!pO~O\",\r\n  goto: \"%[wPPPPPPPPPPxxP!OP!UPP!_!iP!oxxxP!u!{#R$Z$j$p$v$|PPPP%SXWORYbXRORYb_t`qru!T!U!bQ!h!YS!o!e!fR!t!nQdRRybXSORYbQYORmYQ[PRn[Q_QQkVjp_krz!R!T!X!Z!^!`!f!i!nQr`QzcQ!RlQ!TqQ!XsQ!ZtQ!^{Q!`!QQ!f!YQ!i!]R!n!eQu`S!UqrU![u!U!bR!b!TQ!q!gR!u!qQbRRxbQfTR|fQiUR!OiSXOYTaRb\",\r\n  nodeNames: \"âš  StartTag StartCloseTag MissingCloseTag StartCloseTag StartCloseTag Document Text EntityReference CharacterReference Cdata Element EndTag OpenTag TagName Attribute AttributeName Is AttributeValue CloseTag SelfCloseEndTag SelfClosingTag Comment ProcessingInst MismatchedCloseTag DoctypeDecl\",\r\n  maxTerm: 47,\r\n  context: elementContext,\r\n  nodeProps: [\r\n    [\"closedBy\", 1,\"SelfCloseEndTag EndTag\",13,\"CloseTag MissingCloseTag\"],\r\n    [\"openedBy\", 12,\"StartTag StartCloseTag\",19,\"OpenTag\",20,\"StartTag\"],\r\n    [\"isolate\", -6,13,18,19,21,22,24,\"\"]\r\n  ],\r\n  propSources: [xmlHighlighting],\r\n  skippedNodes: [0],\r\n  repeatNodeCount: 8,\r\n  tokenData: \"Jy~R!XOX$nXY&kYZ&kZ]$n]^&k^p$npq&kqr$nrs'ssv$nvw(Zw}$n}!O,^!O!P$n!P!Q.m!Q![$n![!]0V!]!^$n!^!_3h!_!`El!`!aF_!a!bGQ!b!c$n!c!}0V!}#P$n#P#QHj#Q#R$n#R#S0V#S#T$n#T#o0V#o%W$n%W%o0V%o%p$n%p&a0V&a&b$n&b1p0V1p4U$n4U4d0V4d4e$n4e$IS0V$IS$I`$n$I`$Ib0V$Ib$Kh$n$Kh%#t0V%#t&/x$n&/x&Et0V&Et&FV$n&FV;'S0V;'S;:j3b;:j;=`&e<%l?&r$n?&r?Ah0V?Ah?BY$n?BY?Mn0V?MnO$nX$uWVP{WOr$nrs%_sv$nw!^$n!^!_%y!_;'S$n;'S;=`&e<%lO$nP%dTVPOv%_w!^%_!_;'S%_;'S;=`%s<%lO%_P%vP;=`<%l%_W&OT{WOr%ysv%yw;'S%y;'S;=`&_<%lO%yW&bP;=`<%l%yX&hP;=`<%l$n_&t_VP{WyUOX$nXY&kYZ&kZ]$n]^&k^p$npq&kqr$nrs%_sv$nw!^$n!^!_%y!_;'S$n;'S;=`&e<%lO$nZ'zTzYVPOv%_w!^%_!_;'S%_;'S;=`%s<%lO%_~(^ast)c![!]*g!c!}*g#R#S*g#T#o*g%W%o*g%p&a*g&b1p*g4U4d*g4e$IS*g$I`$Ib*g$Kh%#t*g&/x&Et*g&FV;'S*g;'S;:j,W?&r?Ah*g?BY?Mn*g~)fQ!Q![)l#l#m)z~)oQ!Q![)l!]!^)u~)zOX~~)}R!Q![*W!c!i*W#T#Z*W~*ZS!Q![*W!]!^)u!c!i*W#T#Z*W~*jg}!O*g!O!P*g!Q![*g![!]*g!]!^,R!c!}*g#R#S*g#T#o*g$}%O*g%W%o*g%p&a*g&b1p*g1p4U*g4U4d*g4e$IS*g$I`$Ib*g$Je$Jg*g$Kh%#t*g&/x&Et*g&FV;'S*g;'S;:j,W?&r?Ah*g?BY?Mn*g~,WOW~~,ZP;=`<%l*gZ,eYVP{WOr$nrs%_sv$nw}$n}!O-T!O!^$n!^!_%y!_;'S$n;'S;=`&e<%lO$nZ-[YVP{WOr$nrs%_sv$nw!^$n!^!_%y!_!`$n!`!a-z!a;'S$n;'S;=`&e<%lO$nZ.TW|QVP{WOr$nrs%_sv$nw!^$n!^!_%y!_;'S$n;'S;=`&e<%lO$n].tYVP{WOr$nrs%_sv$nw!^$n!^!_%y!_!`$n!`!a/d!a;'S$n;'S;=`&e<%lO$n]/mWdSVP{WOr$nrs%_sv$nw!^$n!^!_%y!_;'S$n;'S;=`&e<%lO$n_0b!O`S^QVP{WOr$nrs%_sv$nw}$n}!O0V!O!P0V!P!Q$n!Q![0V![!]0V!]!^$n!^!_%y!_!c$n!c!}0V!}#R$n#R#S0V#S#T$n#T#o0V#o$}$n$}%O0V%O%W$n%W%o0V%o%p$n%p&a0V&a&b$n&b1p0V1p4U0V4U4d0V4d4e$n4e$IS0V$IS$I`$n$I`$Ib0V$Ib$Je$n$Je$Jg0V$Jg$Kh$n$Kh%#t0V%#t&/x$n&/x&Et0V&Et&FV$n&FV;'S0V;'S;:j3b;:j;=`&e<%l?&r$n?&r?Ah0V?Ah?BY$n?BY?Mn0V?MnO$n_3eP;=`<%l0VX3mW{WOq%yqr4Vsv%yw!a%y!a!bEU!b;'S%y;'S;=`&_<%lO%yX4[]{WOr%ysv%yw}%y}!O5T!O!f%y!f!g6V!g!}%y!}#O;f#O#W%y#W#XAr#X;'S%y;'S;=`&_<%lO%yX5YV{WOr%ysv%yw}%y}!O5o!O;'S%y;'S;=`&_<%lO%yX5vT}P{WOr%ysv%yw;'S%y;'S;=`&_<%lO%yX6[V{WOr%ysv%yw!q%y!q!r6q!r;'S%y;'S;=`&_<%lO%yX6vV{WOr%ysv%yw!e%y!e!f7]!f;'S%y;'S;=`&_<%lO%yX7bV{WOr%ysv%yw!v%y!v!w7w!w;'S%y;'S;=`&_<%lO%yX7|V{WOr%ysv%yw!{%y!{!|8c!|;'S%y;'S;=`&_<%lO%yX8hV{WOr%ysv%yw!r%y!r!s8}!s;'S%y;'S;=`&_<%lO%yX9SV{WOr%ysv%yw!g%y!g!h9i!h;'S%y;'S;=`&_<%lO%yX9nX{WOr9irs:Zsv9ivw:Zw!`9i!`!a:x!a;'S9i;'S;=`;`<%lO9iP:^TO!`:Z!`!a:m!a;'S:Z;'S;=`:r<%lO:ZP:rOiPP:uP;=`<%l:ZX;PTiP{WOr%ysv%yw;'S%y;'S;=`&_<%lO%yX;cP;=`<%l9iX;kX{WOr%ysv%yw!e%y!e!f<W!f#V%y#V#W?f#W;'S%y;'S;=`&_<%lO%yX<]V{WOr%ysv%yw!f%y!f!g<r!g;'S%y;'S;=`&_<%lO%yX<wV{WOr%ysv%yw!c%y!c!d=^!d;'S%y;'S;=`&_<%lO%yX=cV{WOr%ysv%yw!v%y!v!w=x!w;'S%y;'S;=`&_<%lO%yX=}V{WOr%ysv%yw!c%y!c!d>d!d;'S%y;'S;=`&_<%lO%yX>iV{WOr%ysv%yw!}%y!}#O?O#O;'S%y;'S;=`&_<%lO%yX?VT{WxPOr%ysv%yw;'S%y;'S;=`&_<%lO%yX?kV{WOr%ysv%yw#W%y#W#X@Q#X;'S%y;'S;=`&_<%lO%yX@VV{WOr%ysv%yw#T%y#T#U@l#U;'S%y;'S;=`&_<%lO%yX@qV{WOr%ysv%yw#h%y#h#iAW#i;'S%y;'S;=`&_<%lO%yXA]V{WOr%ysv%yw#T%y#T#U>d#U;'S%y;'S;=`&_<%lO%yXAwV{WOr%ysv%yw#c%y#c#dB^#d;'S%y;'S;=`&_<%lO%yXBcV{WOr%ysv%yw#V%y#V#WBx#W;'S%y;'S;=`&_<%lO%yXB}V{WOr%ysv%yw#h%y#h#iCd#i;'S%y;'S;=`&_<%lO%yXCiV{WOr%ysv%yw#m%y#m#nDO#n;'S%y;'S;=`&_<%lO%yXDTV{WOr%ysv%yw#d%y#d#eDj#e;'S%y;'S;=`&_<%lO%yXDoV{WOr%ysv%yw#X%y#X#Y9i#Y;'S%y;'S;=`&_<%lO%yXE]T!PP{WOr%ysv%yw;'S%y;'S;=`&_<%lO%yZEuWaQVP{WOr$nrs%_sv$nw!^$n!^!_%y!_;'S$n;'S;=`&e<%lO$n_FhW[UVP{WOr$nrs%_sv$nw!^$n!^!_%y!_;'S$n;'S;=`&e<%lO$nZGXYVP{WOr$nrs%_sv$nw!^$n!^!_%y!_!`$n!`!aGw!a;'S$n;'S;=`&e<%lO$nZHQW!OQVP{WOr$nrs%_sv$nw!^$n!^!_%y!_;'S$n;'S;=`&e<%lO$nZHqYVP{WOr$nrs%_sv$nw!^$n!^!_%y!_#P$n#P#QIa#Q;'S$n;'S;=`&e<%lO$nZIhYVP{WOr$nrs%_sv$nw!^$n!^!_%y!_!`$n!`!aJW!a;'S$n;'S;=`&e<%lO$nZJaWwQVP{WOr$nrs%_sv$nw!^$n!^!_%y!_;'S$n;'S;=`&e<%lO$n\",\r\n  tokenizers: [startTag, commentContent, piContent, cdataContent, 0, 1, 2, 3],\r\n  topRules: {\"Document\":[0,6]},\r\n  tokenPrec: 0\r\n});\r\n\r\nexport { parser };\r\n", "import { parser } from '@lezer/xml';\r\nimport { syntaxTree, LRLanguage, indentNodeProp, foldNodeProp, bracketMatchingHandle, LanguageSupport } from '@codemirror/language';\r\nimport { EditorSelection } from '@codemirror/state';\r\nimport { EditorView } from '@codemirror/view';\r\n\r\nfunction tagName(doc, tag) {\r\n    let name = tag && tag.getChild(\"TagName\");\r\n    return name ? doc.sliceString(name.from, name.to) : \"\";\r\n}\r\nfunction elementName$1(doc, tree) {\r\n    let tag = tree && tree.firstChild;\r\n    return !tag || tag.name != \"OpenTag\" ? \"\" : tagName(doc, tag);\r\n}\r\nfunction attrName(doc, tag, pos) {\r\n    let attr = tag && tag.getChildren(\"Attribute\").find(a => a.from <= pos && a.to >= pos);\r\n    let name = attr && attr.getChild(\"AttributeName\");\r\n    return name ? doc.sliceString(name.from, name.to) : \"\";\r\n}\r\nfunction findParentElement(tree) {\r\n    for (let cur = tree && tree.parent; cur; cur = cur.parent)\r\n        if (cur.name == \"Element\")\r\n            return cur;\r\n    return null;\r\n}\r\nfunction findLocation(state, pos) {\r\n    var _a;\r\n    let at = syntaxTree(state).resolveInner(pos, -1), inTag = null;\r\n    for (let cur = at; !inTag && cur.parent; cur = cur.parent)\r\n        if (cur.name == \"OpenTag\" || cur.name == \"CloseTag\" || cur.name == \"SelfClosingTag\" || cur.name == \"MismatchedCloseTag\")\r\n            inTag = cur;\r\n    if (inTag && (inTag.to > pos || inTag.lastChild.type.isError)) {\r\n        let elt = inTag.parent;\r\n        if (at.name == \"TagName\")\r\n            return inTag.name == \"CloseTag\" || inTag.name == \"MismatchedCloseTag\"\r\n                ? { type: \"closeTag\", from: at.from, context: elt }\r\n                : { type: \"openTag\", from: at.from, context: findParentElement(elt) };\r\n        if (at.name == \"AttributeName\")\r\n            return { type: \"attrName\", from: at.from, context: inTag };\r\n        if (at.name == \"AttributeValue\")\r\n            return { type: \"attrValue\", from: at.from, context: inTag };\r\n        let before = at == inTag || at.name == \"Attribute\" ? at.childBefore(pos) : at;\r\n        if ((before === null || before === void 0 ? void 0 : before.name) == \"StartTag\")\r\n            return { type: \"openTag\", from: pos, context: findParentElement(elt) };\r\n        if ((before === null || before === void 0 ? void 0 : before.name) == \"StartCloseTag\" && before.to <= pos)\r\n            return { type: \"closeTag\", from: pos, context: elt };\r\n        if ((before === null || before === void 0 ? void 0 : before.name) == \"Is\")\r\n            return { type: \"attrValue\", from: pos, context: inTag };\r\n        if (before)\r\n            return { type: \"attrName\", from: pos, context: inTag };\r\n        return null;\r\n    }\r\n    else if (at.name == \"StartCloseTag\") {\r\n        return { type: \"closeTag\", from: pos, context: at.parent };\r\n    }\r\n    while (at.parent && at.to == pos && !((_a = at.lastChild) === null || _a === void 0 ? void 0 : _a.type.isError))\r\n        at = at.parent;\r\n    if (at.name == \"Element\" || at.name == \"Text\" || at.name == \"Document\")\r\n        return { type: \"tag\", from: pos, context: at.name == \"Element\" ? at : findParentElement(at) };\r\n    return null;\r\n}\r\nclass Element {\r\n    constructor(spec, attrs, attrValues) {\r\n        this.attrs = attrs;\r\n        this.attrValues = attrValues;\r\n        this.children = [];\r\n        this.name = spec.name;\r\n        this.completion = Object.assign(Object.assign({ type: \"type\" }, spec.completion || {}), { label: this.name });\r\n        this.openCompletion = Object.assign(Object.assign({}, this.completion), { label: \"<\" + this.name });\r\n        this.closeCompletion = Object.assign(Object.assign({}, this.completion), { label: \"</\" + this.name + \">\", boost: 2 });\r\n        this.closeNameCompletion = Object.assign(Object.assign({}, this.completion), { label: this.name + \">\" });\r\n        this.text = spec.textContent ? spec.textContent.map(s => ({ label: s, type: \"text\" })) : [];\r\n    }\r\n}\r\nconst Identifier = /^[:\\-\\.\\w\\u00b7-\\uffff]*$/;\r\nfunction attrCompletion(spec) {\r\n    return Object.assign(Object.assign({ type: \"property\" }, spec.completion || {}), { label: spec.name });\r\n}\r\nfunction valueCompletion(spec) {\r\n    return typeof spec == \"string\" ? { label: `\"${spec}\"`, type: \"constant\" }\r\n        : /^\"/.test(spec.label) ? spec\r\n            : Object.assign(Object.assign({}, spec), { label: `\"${spec.label}\"` });\r\n}\r\n/**\r\nCreate a completion source for the given schema.\r\n*/\r\nfunction completeFromSchema(eltSpecs, attrSpecs) {\r\n    let allAttrs = [], globalAttrs = [];\r\n    let attrValues = Object.create(null);\r\n    for (let s of attrSpecs) {\r\n        let completion = attrCompletion(s);\r\n        allAttrs.push(completion);\r\n        if (s.global)\r\n            globalAttrs.push(completion);\r\n        if (s.values)\r\n            attrValues[s.name] = s.values.map(valueCompletion);\r\n    }\r\n    let allElements = [], topElements = [];\r\n    let byName = Object.create(null);\r\n    for (let s of eltSpecs) {\r\n        let attrs = globalAttrs, attrVals = attrValues;\r\n        if (s.attributes)\r\n            attrs = attrs.concat(s.attributes.map(s => {\r\n                if (typeof s == \"string\")\r\n                    return allAttrs.find(a => a.label == s) || { label: s, type: \"property\" };\r\n                if (s.values) {\r\n                    if (attrVals == attrValues)\r\n                        attrVals = Object.create(attrVals);\r\n                    attrVals[s.name] = s.values.map(valueCompletion);\r\n                }\r\n                return attrCompletion(s);\r\n            }));\r\n        let elt = new Element(s, attrs, attrVals);\r\n        byName[elt.name] = elt;\r\n        allElements.push(elt);\r\n        if (s.top)\r\n            topElements.push(elt);\r\n    }\r\n    if (!topElements.length)\r\n        topElements = allElements;\r\n    for (let i = 0; i < allElements.length; i++) {\r\n        let s = eltSpecs[i], elt = allElements[i];\r\n        if (s.children) {\r\n            for (let ch of s.children)\r\n                if (byName[ch])\r\n                    elt.children.push(byName[ch]);\r\n        }\r\n        else {\r\n            elt.children = allElements;\r\n        }\r\n    }\r\n    return cx => {\r\n        var _a;\r\n        let { doc } = cx.state, loc = findLocation(cx.state, cx.pos);\r\n        if (!loc || (loc.type == \"tag\" && !cx.explicit))\r\n            return null;\r\n        let { type, from, context } = loc;\r\n        if (type == \"openTag\") {\r\n            let children = topElements;\r\n            let parentName = elementName$1(doc, context);\r\n            if (parentName) {\r\n                let parent = byName[parentName];\r\n                children = (parent === null || parent === void 0 ? void 0 : parent.children) || allElements;\r\n            }\r\n            return {\r\n                from,\r\n                options: children.map(ch => ch.completion),\r\n                validFor: Identifier\r\n            };\r\n        }\r\n        else if (type == \"closeTag\") {\r\n            let parentName = elementName$1(doc, context);\r\n            return parentName ? {\r\n                from,\r\n                to: cx.pos + (doc.sliceString(cx.pos, cx.pos + 1) == \">\" ? 1 : 0),\r\n                options: [((_a = byName[parentName]) === null || _a === void 0 ? void 0 : _a.closeNameCompletion) || { label: parentName + \">\", type: \"type\" }],\r\n                validFor: Identifier\r\n            } : null;\r\n        }\r\n        else if (type == \"attrName\") {\r\n            let parent = byName[tagName(doc, context)];\r\n            return {\r\n                from,\r\n                options: (parent === null || parent === void 0 ? void 0 : parent.attrs) || globalAttrs,\r\n                validFor: Identifier\r\n            };\r\n        }\r\n        else if (type == \"attrValue\") {\r\n            let attr = attrName(doc, context, from);\r\n            if (!attr)\r\n                return null;\r\n            let parent = byName[tagName(doc, context)];\r\n            let values = ((parent === null || parent === void 0 ? void 0 : parent.attrValues) || attrValues)[attr];\r\n            if (!values || !values.length)\r\n                return null;\r\n            return {\r\n                from,\r\n                to: cx.pos + (doc.sliceString(cx.pos, cx.pos + 1) == '\"' ? 1 : 0),\r\n                options: values,\r\n                validFor: /^\"[^\"]*\"?$/\r\n            };\r\n        }\r\n        else if (type == \"tag\") {\r\n            let parentName = elementName$1(doc, context), parent = byName[parentName];\r\n            let closing = [], last = context && context.lastChild;\r\n            if (parentName && (!last || last.name != \"CloseTag\" || tagName(doc, last) != parentName))\r\n                closing.push(parent ? parent.closeCompletion : { label: \"</\" + parentName + \">\", type: \"type\", boost: 2 });\r\n            let options = closing.concat(((parent === null || parent === void 0 ? void 0 : parent.children) || (context ? allElements : topElements)).map(e => e.openCompletion));\r\n            if (context && (parent === null || parent === void 0 ? void 0 : parent.text.length)) {\r\n                let openTag = context.firstChild;\r\n                if (openTag.to > cx.pos - 20 && !/\\S/.test(cx.state.sliceDoc(openTag.to, cx.pos)))\r\n                    options = options.concat(parent.text);\r\n            }\r\n            return {\r\n                from,\r\n                options,\r\n                validFor: /^<\\/?[:\\-\\.\\w\\u00b7-\\uffff]*$/\r\n            };\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n}\r\n\r\n/**\r\nA language provider based on the [Lezer XML\r\nparser](https://github.com/lezer-parser/xml), extended with\r\nhighlighting and indentation information.\r\n*/\r\nconst xmlLanguage = /*@__PURE__*/LRLanguage.define({\r\n    name: \"xml\",\r\n    parser: /*@__PURE__*/parser.configure({\r\n        props: [\r\n            /*@__PURE__*/indentNodeProp.add({\r\n                Element(context) {\r\n                    let closed = /^\\s*<\\//.test(context.textAfter);\r\n                    return context.lineIndent(context.node.from) + (closed ? 0 : context.unit);\r\n                },\r\n                \"OpenTag CloseTag SelfClosingTag\"(context) {\r\n                    return context.column(context.node.from) + context.unit;\r\n                }\r\n            }),\r\n            /*@__PURE__*/foldNodeProp.add({\r\n                Element(subtree) {\r\n                    let first = subtree.firstChild, last = subtree.lastChild;\r\n                    if (!first || first.name != \"OpenTag\")\r\n                        return null;\r\n                    return { from: first.to, to: last.name == \"CloseTag\" ? last.from : subtree.to };\r\n                }\r\n            }),\r\n            /*@__PURE__*/bracketMatchingHandle.add({\r\n                \"OpenTag CloseTag\": node => node.getChild(\"TagName\")\r\n            })\r\n        ]\r\n    }),\r\n    languageData: {\r\n        commentTokens: { block: { open: \"<!--\", close: \"-->\" } },\r\n        indentOnInput: /^\\s*<\\/$/\r\n    }\r\n});\r\n/**\r\nXML language support. Includes schema-based autocompletion when\r\nconfigured.\r\n*/\r\nfunction xml(conf = {}) {\r\n    let support = [xmlLanguage.data.of({\r\n            autocomplete: completeFromSchema(conf.elements || [], conf.attributes || [])\r\n        })];\r\n    if (conf.autoCloseTags !== false)\r\n        support.push(autoCloseTags);\r\n    return new LanguageSupport(xmlLanguage, support);\r\n}\r\nfunction elementName(doc, tree, max = doc.length) {\r\n    if (!tree)\r\n        return \"\";\r\n    let tag = tree.firstChild;\r\n    let name = tag && tag.getChild(\"TagName\");\r\n    return name ? doc.sliceString(name.from, Math.min(name.to, max)) : \"\";\r\n}\r\n/**\r\nExtension that will automatically insert close tags when a `>` or\r\n`/` is typed.\r\n*/\r\nconst autoCloseTags = /*@__PURE__*/EditorView.inputHandler.of((view, from, to, text, insertTransaction) => {\r\n    if (view.composing || view.state.readOnly || from != to || (text != \">\" && text != \"/\") ||\r\n        !xmlLanguage.isActiveAt(view.state, from, -1))\r\n        return false;\r\n    let base = insertTransaction(), { state } = base;\r\n    let closeTags = state.changeByRange(range => {\r\n        var _a, _b, _c;\r\n        let { head } = range;\r\n        let didType = state.doc.sliceString(head - 1, head) == text;\r\n        let after = syntaxTree(state).resolveInner(head, -1), name;\r\n        if (didType && text == \">\" && after.name == \"EndTag\") {\r\n            let tag = after.parent;\r\n            if (((_b = (_a = tag.parent) === null || _a === void 0 ? void 0 : _a.lastChild) === null || _b === void 0 ? void 0 : _b.name) != \"CloseTag\" &&\r\n                (name = elementName(state.doc, tag.parent, head))) {\r\n                let to = head + (state.doc.sliceString(head, head + 1) === \">\" ? 1 : 0);\r\n                let insert = `</${name}>`;\r\n                return { range, changes: { from: head, to, insert } };\r\n            }\r\n        }\r\n        else if (didType && text == \"/\" && after.name == \"StartCloseTag\") {\r\n            let base = after.parent;\r\n            if (after.from == head - 2 && ((_c = base.lastChild) === null || _c === void 0 ? void 0 : _c.name) != \"CloseTag\" &&\r\n                (name = elementName(state.doc, base, head))) {\r\n                let to = head + (state.doc.sliceString(head, head + 1) === \">\" ? 1 : 0);\r\n                let insert = `${name}>`;\r\n                return {\r\n                    range: EditorSelection.cursor(head + insert.length, -1),\r\n                    changes: { from: head, to, insert }\r\n                };\r\n            }\r\n        }\r\n        return { range };\r\n    });\r\n    if (closeTags.changes.empty)\r\n        return false;\r\n    view.dispatch([\r\n        base,\r\n        state.update(closeTags, {\r\n            userEvent: \"input.complete\",\r\n            scrollIntoView: true\r\n        })\r\n    ]);\r\n    return true;\r\n});\r\n\r\nexport { autoCloseTags, completeFromSchema, xml, xmlLanguage };\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;AAIA,IAAM,WAAW;AAAjB,IACE,gBAAgB;AADlB,IAEE,kBAAkB;AAFpB,IAGE,0BAA0B;AAH5B,IAIE,0BAA0B;AAJ5B,IAKE,mBAAmB;AALrB,IAME,cAAc;AANhB,IAOE,iBAAiB;AAPnB,IAQE,UAAU;AARZ,IASE,UAAU;AAIZ,SAAS,SAAS,IAAI;AACpB,SAAO,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,MAAM;AAChH;AAEA,SAAS,QAAQ,IAAI;AACnB,SAAO,MAAM,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM;AAClD;AAEA,IAAI,aAAa;AAAjB,IAAuB,cAAc;AAArC,IAA2C,YAAY;AACvD,SAAS,aAAa,OAAO,QAAQ;AACnC,MAAI,MAAM,MAAM,MAAM;AACtB,MAAI,eAAe,SAAS,aAAa,IAAK,QAAO;AACrD,SAAO,QAAQ,MAAM,KAAK,MAAM,CAAC,EAAG;AACpC,MAAI,OAAO;AACX,aAAS;AACP,QAAI,OAAO,MAAM,KAAK,MAAM;AAC5B,QAAI,CAAC,SAAS,IAAI,EAAG;AACrB,YAAQ,OAAO,aAAa,IAAI;AAChC;AAAA,EACF;AACA,gBAAc;AAAO,cAAY;AACjC,SAAO,aAAa,QAAQ;AAC9B;AAEA,SAAS,eAAe,MAAM,QAAQ;AACpC,OAAK,OAAO;AACZ,OAAK,SAAS;AACd,OAAK,OAAO,SAAS,OAAO,OAAO;AACnC,WAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,IAAK,MAAK,SAAS,KAAK,QAAQ,KAAK,KAAK,WAAW,CAAC,KAAK,KAAK,WAAW,CAAC,KAAK;AACpH;AAEA,IAAM,iBAAiB,IAAI,eAAe;AAAA,EACxC,OAAO;AAAA,EACP,MAAM,SAAS,MAAM,OAAO,OAAO;AACjC,WAAO,QAAQ,WAAW,IAAI,eAAe,aAAa,OAAO,CAAC,KAAK,IAAI,OAAO,IAAI;AAAA,EACxF;AAAA,EACA,OAAO,SAAS,MAAM;AACpB,WAAO,QAAQ,WAAW,UAAU,QAAQ,SAAS;AAAA,EACvD;AAAA,EACA,MAAM,SAAS,MAAM,QAAQ,OAAO;AAClC,QAAI,OAAO,KAAK,KAAK;AACrB,WAAO,QAAQ,YAAY,QAAQ,UAC/B,IAAI,eAAe,aAAa,OAAO,CAAC,KAAK,IAAI,OAAO,IAAI;AAAA,EAClE;AAAA,EACA,KAAK,SAAS;AAAE,WAAO,UAAU,QAAQ,OAAO;AAAA,EAAE;AAAA,EAClD,QAAQ;AACV,CAAC;AAED,IAAM,WAAW,IAAI,kBAAkB,CAAC,OAAO,UAAU;AACvD,MAAI,MAAM,QAAQ,GAAc;AAChC,QAAM,QAAQ;AACd,MAAI,MAAM,QAAQ,IAAc;AAC9B,UAAM,QAAQ;AACd,QAAI,OAAO,aAAa,OAAO,CAAC;AAChC,QAAI,CAAC,KAAM,QAAO,MAAM,YAAY,uBAAuB;AAC3D,QAAI,MAAM,WAAW,QAAQ,MAAM,QAAQ,KAAM,QAAO,MAAM,YAAY,aAAa;AACvF,aAAS,KAAK,MAAM,SAAS,IAAI,KAAK,GAAG,OAAQ,KAAI,GAAG,QAAQ,KAAM,QAAO,MAAM,YAAY,iBAAiB,EAAE;AAClH,UAAM,YAAY,uBAAuB;AAAA,EAC3C,WAAW,MAAM,QAAQ,MAAgB,MAAM,QAAQ,IAAc;AACnE,WAAO,MAAM,YAAY,QAAQ;AAAA,EACnC;AACF,GAAG,EAAC,YAAY,KAAI,CAAC;AAErB,SAAS,OAAO,MAAM,KAAK;AACzB,SAAO,IAAI,kBAAkB,WAAS;AACpC,QAAI,MAAM,GAAG,QAAQ,IAAI,WAAW,CAAC;AACrC,SAAM,UAAQ,MAAM,QAAQ,GAAG,OAAO;AACpC,UAAI,MAAM,OAAO,EAAG;AACpB,UAAI,MAAM,QAAQ,OAAO;AACvB,iBAAS,IAAI,GAAG,IAAI,IAAI,QAAQ;AAC9B,cAAI,MAAM,KAAK,CAAC,KAAK,IAAI,WAAW,CAAC,EAAG,UAAS;AACnD;AAAA,MACF;AAAA,IACF;AACA,QAAI,IAAK,OAAM,YAAY,IAAI;AAAA,EACjC,CAAC;AACH;AAEA,IAAM,iBAAiB,OAAO,kBAAkB,KAAK;AACrD,IAAM,YAAY,OAAO,aAAa,IAAI;AAC1C,IAAM,eAAe,OAAO,gBAAgB,KAAK;AAEjD,IAAM,kBAAkB,UAAU;AAAA,EAChC,MAAM,KAAK;AAAA,EACX,iDAAiD,KAAK;AAAA,EACtD,SAAS,KAAK;AAAA,EACd,8BAA8B,CAAC,KAAK,SAAS,KAAK,OAAO;AAAA,EACzD,eAAe,KAAK;AAAA,EACpB,gBAAgB,KAAK;AAAA,EACrB,IAAI,KAAK;AAAA,EACT,sCAAsC,KAAK;AAAA,EAC3C,SAAS,KAAK;AAAA,EACd,gBAAgB,KAAK;AAAA,EACrB,aAAa,KAAK;AAAA,EAClB,OAAO,KAAK,QAAQ,KAAK,MAAM;AACjC,CAAC;AAGD,IAAM,SAAS,SAAS,YAAY;AAAA,EAClC,SAAS;AAAA,EACT,QAAQ;AAAA,EACR,WAAW;AAAA,EACX,MAAM;AAAA,EACN,WAAW;AAAA,EACX,SAAS;AAAA,EACT,SAAS;AAAA,EACT,WAAW;AAAA,IACT,CAAC,YAAY,GAAE,0BAAyB,IAAG,0BAA0B;AAAA,IACrE,CAAC,YAAY,IAAG,0BAAyB,IAAG,WAAU,IAAG,UAAU;AAAA,IACnE,CAAC,WAAW,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,IAAG,EAAE;AAAA,EACrC;AAAA,EACA,aAAa,CAAC,eAAe;AAAA,EAC7B,cAAc,CAAC,CAAC;AAAA,EAChB,iBAAiB;AAAA,EACjB,WAAW;AAAA,EACX,YAAY,CAAC,UAAU,gBAAgB,WAAW,cAAc,GAAG,GAAG,GAAG,CAAC;AAAA,EAC1E,UAAU,EAAC,YAAW,CAAC,GAAE,CAAC,EAAC;AAAA,EAC3B,WAAW;AACb,CAAC;;;AClID,SAAS,QAAQ,KAAK,KAAK;AACvB,MAAI,OAAO,OAAO,IAAI,SAAS,SAAS;AACxC,SAAO,OAAO,IAAI,YAAY,KAAK,MAAM,KAAK,EAAE,IAAI;AACxD;AACA,SAAS,cAAc,KAAK,MAAM;AAC9B,MAAI,MAAM,QAAQ,KAAK;AACvB,SAAO,CAAC,OAAO,IAAI,QAAQ,YAAY,KAAK,QAAQ,KAAK,GAAG;AAChE;AACA,SAAS,SAAS,KAAK,KAAK,KAAK;AAC7B,MAAI,OAAO,OAAO,IAAI,YAAY,WAAW,EAAE,KAAK,OAAK,EAAE,QAAQ,OAAO,EAAE,MAAM,GAAG;AACrF,MAAI,OAAO,QAAQ,KAAK,SAAS,eAAe;AAChD,SAAO,OAAO,IAAI,YAAY,KAAK,MAAM,KAAK,EAAE,IAAI;AACxD;AACA,SAAS,kBAAkB,MAAM;AAC7B,WAAS,MAAM,QAAQ,KAAK,QAAQ,KAAK,MAAM,IAAI;AAC/C,QAAI,IAAI,QAAQ;AACZ,aAAO;AACf,SAAO;AACX;AACA,SAAS,aAAa,OAAO,KAAK;AAC9B,MAAI;AACJ,MAAI,KAAK,WAAW,KAAK,EAAE,aAAa,KAAK,EAAE,GAAG,QAAQ;AAC1D,WAAS,MAAM,IAAI,CAAC,SAAS,IAAI,QAAQ,MAAM,IAAI;AAC/C,QAAI,IAAI,QAAQ,aAAa,IAAI,QAAQ,cAAc,IAAI,QAAQ,oBAAoB,IAAI,QAAQ;AAC/F,cAAQ;AAChB,MAAI,UAAU,MAAM,KAAK,OAAO,MAAM,UAAU,KAAK,UAAU;AAC3D,QAAI,MAAM,MAAM;AAChB,QAAI,GAAG,QAAQ;AACX,aAAO,MAAM,QAAQ,cAAc,MAAM,QAAQ,uBAC3C,EAAE,MAAM,YAAY,MAAM,GAAG,MAAM,SAAS,IAAI,IAChD,EAAE,MAAM,WAAW,MAAM,GAAG,MAAM,SAAS,kBAAkB,GAAG,EAAE;AAC5E,QAAI,GAAG,QAAQ;AACX,aAAO,EAAE,MAAM,YAAY,MAAM,GAAG,MAAM,SAAS,MAAM;AAC7D,QAAI,GAAG,QAAQ;AACX,aAAO,EAAE,MAAM,aAAa,MAAM,GAAG,MAAM,SAAS,MAAM;AAC9D,QAAI,SAAS,MAAM,SAAS,GAAG,QAAQ,cAAc,GAAG,YAAY,GAAG,IAAI;AAC3E,SAAK,WAAW,QAAQ,WAAW,SAAS,SAAS,OAAO,SAAS;AACjE,aAAO,EAAE,MAAM,WAAW,MAAM,KAAK,SAAS,kBAAkB,GAAG,EAAE;AACzE,SAAK,WAAW,QAAQ,WAAW,SAAS,SAAS,OAAO,SAAS,mBAAmB,OAAO,MAAM;AACjG,aAAO,EAAE,MAAM,YAAY,MAAM,KAAK,SAAS,IAAI;AACvD,SAAK,WAAW,QAAQ,WAAW,SAAS,SAAS,OAAO,SAAS;AACjE,aAAO,EAAE,MAAM,aAAa,MAAM,KAAK,SAAS,MAAM;AAC1D,QAAI;AACA,aAAO,EAAE,MAAM,YAAY,MAAM,KAAK,SAAS,MAAM;AACzD,WAAO;AAAA,EACX,WACS,GAAG,QAAQ,iBAAiB;AACjC,WAAO,EAAE,MAAM,YAAY,MAAM,KAAK,SAAS,GAAG,OAAO;AAAA,EAC7D;AACA,SAAO,GAAG,UAAU,GAAG,MAAM,OAAO,GAAG,KAAK,GAAG,eAAe,QAAQ,OAAO,SAAS,SAAS,GAAG,KAAK;AACnG,SAAK,GAAG;AACZ,MAAI,GAAG,QAAQ,aAAa,GAAG,QAAQ,UAAU,GAAG,QAAQ;AACxD,WAAO,EAAE,MAAM,OAAO,MAAM,KAAK,SAAS,GAAG,QAAQ,YAAY,KAAK,kBAAkB,EAAE,EAAE;AAChG,SAAO;AACX;AACA,IAAMA,WAAN,MAAc;AAAA,EACV,YAAY,MAAM,OAAO,YAAY;AACjC,SAAK,QAAQ;AACb,SAAK,aAAa;AAClB,SAAK,WAAW,CAAC;AACjB,SAAK,OAAO,KAAK;AACjB,SAAK,aAAa,OAAO,OAAO,OAAO,OAAO,EAAE,MAAM,OAAO,GAAG,KAAK,cAAc,CAAC,CAAC,GAAG,EAAE,OAAO,KAAK,KAAK,CAAC;AAC5G,SAAK,iBAAiB,OAAO,OAAO,OAAO,OAAO,CAAC,GAAG,KAAK,UAAU,GAAG,EAAE,OAAO,MAAM,KAAK,KAAK,CAAC;AAClG,SAAK,kBAAkB,OAAO,OAAO,OAAO,OAAO,CAAC,GAAG,KAAK,UAAU,GAAG,EAAE,OAAO,OAAO,KAAK,OAAO,KAAK,OAAO,EAAE,CAAC;AACpH,SAAK,sBAAsB,OAAO,OAAO,OAAO,OAAO,CAAC,GAAG,KAAK,UAAU,GAAG,EAAE,OAAO,KAAK,OAAO,IAAI,CAAC;AACvG,SAAK,OAAO,KAAK,cAAc,KAAK,YAAY,IAAI,QAAM,EAAE,OAAO,GAAG,MAAM,OAAO,EAAE,IAAI,CAAC;AAAA,EAC9F;AACJ;AACA,IAAM,aAAa;AACnB,SAAS,eAAe,MAAM;AAC1B,SAAO,OAAO,OAAO,OAAO,OAAO,EAAE,MAAM,WAAW,GAAG,KAAK,cAAc,CAAC,CAAC,GAAG,EAAE,OAAO,KAAK,KAAK,CAAC;AACzG;AACA,SAAS,gBAAgB,MAAM;AAC3B,SAAO,OAAO,QAAQ,WAAW,EAAE,OAAO,IAAI,IAAI,KAAK,MAAM,WAAW,IAClE,KAAK,KAAK,KAAK,KAAK,IAAI,OACpB,OAAO,OAAO,OAAO,OAAO,CAAC,GAAG,IAAI,GAAG,EAAE,OAAO,IAAI,KAAK,KAAK,IAAI,CAAC;AACjF;AAIA,SAAS,mBAAmB,UAAU,WAAW;AAC7C,MAAI,WAAW,CAAC,GAAG,cAAc,CAAC;AAClC,MAAI,aAAa,uBAAO,OAAO,IAAI;AACnC,WAAS,KAAK,WAAW;AACrB,QAAI,aAAa,eAAe,CAAC;AACjC,aAAS,KAAK,UAAU;AACxB,QAAI,EAAE;AACF,kBAAY,KAAK,UAAU;AAC/B,QAAI,EAAE;AACF,iBAAW,EAAE,IAAI,IAAI,EAAE,OAAO,IAAI,eAAe;AAAA,EACzD;AACA,MAAI,cAAc,CAAC,GAAG,cAAc,CAAC;AACrC,MAAI,SAAS,uBAAO,OAAO,IAAI;AAC/B,WAAS,KAAK,UAAU;AACpB,QAAI,QAAQ,aAAa,WAAW;AACpC,QAAI,EAAE;AACF,cAAQ,MAAM,OAAO,EAAE,WAAW,IAAI,CAAAC,OAAK;AACvC,YAAI,OAAOA,MAAK;AACZ,iBAAO,SAAS,KAAK,OAAK,EAAE,SAASA,EAAC,KAAK,EAAE,OAAOA,IAAG,MAAM,WAAW;AAC5E,YAAIA,GAAE,QAAQ;AACV,cAAI,YAAY;AACZ,uBAAW,OAAO,OAAO,QAAQ;AACrC,mBAASA,GAAE,IAAI,IAAIA,GAAE,OAAO,IAAI,eAAe;AAAA,QACnD;AACA,eAAO,eAAeA,EAAC;AAAA,MAC3B,CAAC,CAAC;AACN,QAAI,MAAM,IAAID,SAAQ,GAAG,OAAO,QAAQ;AACxC,WAAO,IAAI,IAAI,IAAI;AACnB,gBAAY,KAAK,GAAG;AACpB,QAAI,EAAE;AACF,kBAAY,KAAK,GAAG;AAAA,EAC5B;AACA,MAAI,CAAC,YAAY;AACb,kBAAc;AAClB,WAAS,IAAI,GAAG,IAAI,YAAY,QAAQ,KAAK;AACzC,QAAI,IAAI,SAAS,CAAC,GAAG,MAAM,YAAY,CAAC;AACxC,QAAI,EAAE,UAAU;AACZ,eAAS,MAAM,EAAE;AACb,YAAI,OAAO,EAAE;AACT,cAAI,SAAS,KAAK,OAAO,EAAE,CAAC;AAAA,IACxC,OACK;AACD,UAAI,WAAW;AAAA,IACnB;AAAA,EACJ;AACA,SAAO,QAAM;AACT,QAAI;AACJ,QAAI,EAAE,IAAI,IAAI,GAAG,OAAO,MAAM,aAAa,GAAG,OAAO,GAAG,GAAG;AAC3D,QAAI,CAAC,OAAQ,IAAI,QAAQ,SAAS,CAAC,GAAG;AAClC,aAAO;AACX,QAAI,EAAE,MAAM,MAAM,QAAQ,IAAI;AAC9B,QAAI,QAAQ,WAAW;AACnB,UAAI,WAAW;AACf,UAAI,aAAa,cAAc,KAAK,OAAO;AAC3C,UAAI,YAAY;AACZ,YAAI,SAAS,OAAO,UAAU;AAC9B,oBAAY,WAAW,QAAQ,WAAW,SAAS,SAAS,OAAO,aAAa;AAAA,MACpF;AACA,aAAO;AAAA,QACH;AAAA,QACA,SAAS,SAAS,IAAI,QAAM,GAAG,UAAU;AAAA,QACzC,UAAU;AAAA,MACd;AAAA,IACJ,WACS,QAAQ,YAAY;AACzB,UAAI,aAAa,cAAc,KAAK,OAAO;AAC3C,aAAO,aAAa;AAAA,QAChB;AAAA,QACA,IAAI,GAAG,OAAO,IAAI,YAAY,GAAG,KAAK,GAAG,MAAM,CAAC,KAAK,MAAM,IAAI;AAAA,QAC/D,SAAS,GAAG,KAAK,OAAO,UAAU,OAAO,QAAQ,OAAO,SAAS,SAAS,GAAG,wBAAwB,EAAE,OAAO,aAAa,KAAK,MAAM,OAAO,CAAC;AAAA,QAC9I,UAAU;AAAA,MACd,IAAI;AAAA,IACR,WACS,QAAQ,YAAY;AACzB,UAAI,SAAS,OAAO,QAAQ,KAAK,OAAO,CAAC;AACzC,aAAO;AAAA,QACH;AAAA,QACA,UAAU,WAAW,QAAQ,WAAW,SAAS,SAAS,OAAO,UAAU;AAAA,QAC3E,UAAU;AAAA,MACd;AAAA,IACJ,WACS,QAAQ,aAAa;AAC1B,UAAI,OAAO,SAAS,KAAK,SAAS,IAAI;AACtC,UAAI,CAAC;AACD,eAAO;AACX,UAAI,SAAS,OAAO,QAAQ,KAAK,OAAO,CAAC;AACzC,UAAI,WAAW,WAAW,QAAQ,WAAW,SAAS,SAAS,OAAO,eAAe,YAAY,IAAI;AACrG,UAAI,CAAC,UAAU,CAAC,OAAO;AACnB,eAAO;AACX,aAAO;AAAA,QACH;AAAA,QACA,IAAI,GAAG,OAAO,IAAI,YAAY,GAAG,KAAK,GAAG,MAAM,CAAC,KAAK,MAAM,IAAI;AAAA,QAC/D,SAAS;AAAA,QACT,UAAU;AAAA,MACd;AAAA,IACJ,WACS,QAAQ,OAAO;AACpB,UAAI,aAAa,cAAc,KAAK,OAAO,GAAG,SAAS,OAAO,UAAU;AACxE,UAAI,UAAU,CAAC,GAAG,OAAO,WAAW,QAAQ;AAC5C,UAAI,eAAe,CAAC,QAAQ,KAAK,QAAQ,cAAc,QAAQ,KAAK,IAAI,KAAK;AACzE,gBAAQ,KAAK,SAAS,OAAO,kBAAkB,EAAE,OAAO,OAAO,aAAa,KAAK,MAAM,QAAQ,OAAO,EAAE,CAAC;AAC7G,UAAI,UAAU,QAAQ,SAAS,WAAW,QAAQ,WAAW,SAAS,SAAS,OAAO,cAAc,UAAU,cAAc,cAAc,IAAI,OAAK,EAAE,cAAc,CAAC;AACpK,UAAI,YAAY,WAAW,QAAQ,WAAW,SAAS,SAAS,OAAO,KAAK,SAAS;AACjF,YAAI,UAAU,QAAQ;AACtB,YAAI,QAAQ,KAAK,GAAG,MAAM,MAAM,CAAC,KAAK,KAAK,GAAG,MAAM,SAAS,QAAQ,IAAI,GAAG,GAAG,CAAC;AAC5E,oBAAU,QAAQ,OAAO,OAAO,IAAI;AAAA,MAC5C;AACA,aAAO;AAAA,QACH;AAAA,QACA;AAAA,QACA,UAAU;AAAA,MACd;AAAA,IACJ,OACK;AACD,aAAO;AAAA,IACX;AAAA,EACJ;AACJ;AAOA,IAAM,cAA2B,WAAW,OAAO;AAAA,EAC/C,MAAM;AAAA,EACN,QAAqB,OAAO,UAAU;AAAA,IAClC,OAAO;AAAA,MACU,eAAe,IAAI;AAAA,QAC5B,QAAQ,SAAS;AACb,cAAI,SAAS,UAAU,KAAK,QAAQ,SAAS;AAC7C,iBAAO,QAAQ,WAAW,QAAQ,KAAK,IAAI,KAAK,SAAS,IAAI,QAAQ;AAAA,QACzE;AAAA,QACA,kCAAkC,SAAS;AACvC,iBAAO,QAAQ,OAAO,QAAQ,KAAK,IAAI,IAAI,QAAQ;AAAA,QACvD;AAAA,MACJ,CAAC;AAAA,MACY,aAAa,IAAI;AAAA,QAC1B,QAAQ,SAAS;AACb,cAAI,QAAQ,QAAQ,YAAY,OAAO,QAAQ;AAC/C,cAAI,CAAC,SAAS,MAAM,QAAQ;AACxB,mBAAO;AACX,iBAAO,EAAE,MAAM,MAAM,IAAI,IAAI,KAAK,QAAQ,aAAa,KAAK,OAAO,QAAQ,GAAG;AAAA,QAClF;AAAA,MACJ,CAAC;AAAA,MACY,sBAAsB,IAAI;AAAA,QACnC,oBAAoB,UAAQ,KAAK,SAAS,SAAS;AAAA,MACvD,CAAC;AAAA,IACL;AAAA,EACJ,CAAC;AAAA,EACD,cAAc;AAAA,IACV,eAAe,EAAE,OAAO,EAAE,MAAM,QAAQ,OAAO,MAAM,EAAE;AAAA,IACvD,eAAe;AAAA,EACnB;AACJ,CAAC;AAKD,SAAS,IAAI,OAAO,CAAC,GAAG;AACpB,MAAI,UAAU,CAAC,YAAY,KAAK,GAAG;AAAA,IAC3B,cAAc,mBAAmB,KAAK,YAAY,CAAC,GAAG,KAAK,cAAc,CAAC,CAAC;AAAA,EAC/E,CAAC,CAAC;AACN,MAAI,KAAK,kBAAkB;AACvB,YAAQ,KAAK,aAAa;AAC9B,SAAO,IAAI,gBAAgB,aAAa,OAAO;AACnD;AACA,SAAS,YAAY,KAAK,MAAM,MAAM,IAAI,QAAQ;AAC9C,MAAI,CAAC;AACD,WAAO;AACX,MAAI,MAAM,KAAK;AACf,MAAI,OAAO,OAAO,IAAI,SAAS,SAAS;AACxC,SAAO,OAAO,IAAI,YAAY,KAAK,MAAM,KAAK,IAAI,KAAK,IAAI,GAAG,CAAC,IAAI;AACvE;AAKA,IAAM,gBAA6B,WAAW,aAAa,GAAG,CAAC,MAAM,MAAM,IAAI,MAAM,sBAAsB;AACvG,MAAI,KAAK,aAAa,KAAK,MAAM,YAAY,QAAQ,MAAO,QAAQ,OAAO,QAAQ,OAC/E,CAAC,YAAY,WAAW,KAAK,OAAO,MAAM,EAAE;AAC5C,WAAO;AACX,MAAI,OAAO,kBAAkB,GAAG,EAAE,MAAM,IAAI;AAC5C,MAAI,YAAY,MAAM,cAAc,WAAS;AACzC,QAAI,IAAI,IAAI;AACZ,QAAI,EAAE,KAAK,IAAI;AACf,QAAI,UAAU,MAAM,IAAI,YAAY,OAAO,GAAG,IAAI,KAAK;AACvD,QAAI,QAAQ,WAAW,KAAK,EAAE,aAAa,MAAM,EAAE,GAAG;AACtD,QAAI,WAAW,QAAQ,OAAO,MAAM,QAAQ,UAAU;AAClD,UAAI,MAAM,MAAM;AAChB,YAAM,MAAM,KAAK,IAAI,YAAY,QAAQ,OAAO,SAAS,SAAS,GAAG,eAAe,QAAQ,OAAO,SAAS,SAAS,GAAG,SAAS,eAC5H,OAAO,YAAY,MAAM,KAAK,IAAI,QAAQ,IAAI,IAAI;AACnD,YAAIE,MAAK,QAAQ,MAAM,IAAI,YAAY,MAAM,OAAO,CAAC,MAAM,MAAM,IAAI;AACrE,YAAI,SAAS,KAAK,IAAI;AACtB,eAAO,EAAE,OAAO,SAAS,EAAE,MAAM,MAAM,IAAAA,KAAI,OAAO,EAAE;AAAA,MACxD;AAAA,IACJ,WACS,WAAW,QAAQ,OAAO,MAAM,QAAQ,iBAAiB;AAC9D,UAAIC,QAAO,MAAM;AACjB,UAAI,MAAM,QAAQ,OAAO,OAAO,KAAKA,MAAK,eAAe,QAAQ,OAAO,SAAS,SAAS,GAAG,SAAS,eACjG,OAAO,YAAY,MAAM,KAAKA,OAAM,IAAI,IAAI;AAC7C,YAAID,MAAK,QAAQ,MAAM,IAAI,YAAY,MAAM,OAAO,CAAC,MAAM,MAAM,IAAI;AACrE,YAAI,SAAS,GAAG,IAAI;AACpB,eAAO;AAAA,UACH,OAAO,gBAAgB,OAAO,OAAO,OAAO,QAAQ,EAAE;AAAA,UACtD,SAAS,EAAE,MAAM,MAAM,IAAAA,KAAI,OAAO;AAAA,QACtC;AAAA,MACJ;AAAA,IACJ;AACA,WAAO,EAAE,MAAM;AAAA,EACnB,CAAC;AACD,MAAI,UAAU,QAAQ;AAClB,WAAO;AACX,OAAK,SAAS;AAAA,IACV;AAAA,IACA,MAAM,OAAO,WAAW;AAAA,MACpB,WAAW;AAAA,MACX,gBAAgB;AAAA,IACpB,CAAC;AAAA,EACL,CAAC;AACD,SAAO;AACX,CAAC;",
  "names": ["Element", "s", "to", "base"]
}
