{
  "version": 3,
  "sources": ["../../@codemirror/legacy-modes/mode/nginx.js"],
  "sourcesContent": ["function words(str) {\r\n  var obj = {}, words = str.split(\" \");\r\n  for (var i = 0; i < words.length; ++i) obj[words[i]] = true;\r\n  return obj;\r\n}\r\n\r\nvar keywords = words(\r\n  /* ngxDirectiveControl */ \"break return rewrite set\" +\r\n    /* ngxDirective */ \" accept_mutex accept_mutex_delay access_log add_after_body add_before_body add_header addition_types aio alias allow ancient_browser ancient_browser_value auth_basic auth_basic_user_file auth_http auth_http_header auth_http_timeout autoindex autoindex_exact_size autoindex_localtime charset charset_types client_body_buffer_size client_body_in_file_only client_body_in_single_buffer client_body_temp_path client_body_timeout client_header_buffer_size client_header_timeout client_max_body_size connection_pool_size create_full_put_path daemon dav_access dav_methods debug_connection debug_points default_type degradation degrade deny devpoll_changes devpoll_events directio directio_alignment empty_gif env epoll_events error_log eventport_events expires fastcgi_bind fastcgi_buffer_size fastcgi_buffers fastcgi_busy_buffers_size fastcgi_cache fastcgi_cache_key fastcgi_cache_methods fastcgi_cache_min_uses fastcgi_cache_path fastcgi_cache_use_stale fastcgi_cache_valid fastcgi_catch_stderr fastcgi_connect_timeout fastcgi_hide_header fastcgi_ignore_client_abort fastcgi_ignore_headers fastcgi_index fastcgi_intercept_errors fastcgi_max_temp_file_size fastcgi_next_upstream fastcgi_param fastcgi_pass_header fastcgi_pass_request_body fastcgi_pass_request_headers fastcgi_read_timeout fastcgi_send_lowat fastcgi_send_timeout fastcgi_split_path_info fastcgi_store fastcgi_store_access fastcgi_temp_file_write_size fastcgi_temp_path fastcgi_upstream_fail_timeout fastcgi_upstream_max_fails flv geoip_city geoip_country google_perftools_profiles gzip gzip_buffers gzip_comp_level gzip_disable gzip_hash gzip_http_version gzip_min_length gzip_no_buffer gzip_proxied gzip_static gzip_types gzip_vary gzip_window if_modified_since ignore_invalid_headers image_filter image_filter_buffer image_filter_jpeg_quality image_filter_transparency imap_auth imap_capabilities imap_client_buffer index ip_hash keepalive_requests keepalive_timeout kqueue_changes kqueue_events large_client_header_buffers limit_conn limit_conn_log_level limit_rate limit_rate_after limit_req limit_req_log_level limit_req_zone limit_zone lingering_time lingering_timeout lock_file log_format log_not_found log_subrequest map_hash_bucket_size map_hash_max_size master_process memcached_bind memcached_buffer_size memcached_connect_timeout memcached_next_upstream memcached_read_timeout memcached_send_timeout memcached_upstream_fail_timeout memcached_upstream_max_fails merge_slashes min_delete_depth modern_browser modern_browser_value msie_padding msie_refresh multi_accept open_file_cache open_file_cache_errors open_file_cache_events open_file_cache_min_uses open_file_cache_valid open_log_file_cache output_buffers override_charset perl perl_modules perl_require perl_set pid pop3_auth pop3_capabilities port_in_redirect postpone_gzipping postpone_output protocol proxy proxy_bind proxy_buffer proxy_buffer_size proxy_buffering proxy_buffers proxy_busy_buffers_size proxy_cache proxy_cache_key proxy_cache_methods proxy_cache_min_uses proxy_cache_path proxy_cache_use_stale proxy_cache_valid proxy_connect_timeout proxy_headers_hash_bucket_size proxy_headers_hash_max_size proxy_hide_header proxy_ignore_client_abort proxy_ignore_headers proxy_intercept_errors proxy_max_temp_file_size proxy_method proxy_next_upstream proxy_pass_error_message proxy_pass_header proxy_pass_request_body proxy_pass_request_headers proxy_read_timeout proxy_redirect proxy_send_lowat proxy_send_timeout proxy_set_body proxy_set_header proxy_ssl_session_reuse proxy_store proxy_store_access proxy_temp_file_write_size proxy_temp_path proxy_timeout proxy_upstream_fail_timeout proxy_upstream_max_fails random_index read_ahead real_ip_header recursive_error_pages request_pool_size reset_timedout_connection resolver resolver_timeout rewrite_log rtsig_overflow_events rtsig_overflow_test rtsig_overflow_threshold rtsig_signo satisfy secure_link_secret send_lowat send_timeout sendfile sendfile_max_chunk server_name_in_redirect server_names_hash_bucket_size server_names_hash_max_size server_tokens set_real_ip_from smtp_auth smtp_capabilities smtp_client_buffer smtp_greeting_delay so_keepalive source_charset ssi ssi_ignore_recycled_buffers ssi_min_file_chunk ssi_silent_errors ssi_types ssi_value_length ssl ssl_certificate ssl_certificate_key ssl_ciphers ssl_client_certificate ssl_crl ssl_dhparam ssl_engine ssl_prefer_server_ciphers ssl_protocols ssl_session_cache ssl_session_timeout ssl_verify_client ssl_verify_depth starttls stub_status sub_filter sub_filter_once sub_filter_types tcp_nodelay tcp_nopush thread_stack_size timeout timer_resolution types_hash_bucket_size types_hash_max_size underscores_in_headers uninitialized_variable_warn use user userid userid_domain userid_expires userid_mark userid_name userid_p3p userid_path userid_service valid_referers variables_hash_bucket_size variables_hash_max_size worker_connections worker_cpu_affinity worker_priority worker_processes worker_rlimit_core worker_rlimit_nofile worker_rlimit_sigpending worker_threads working_directory xclient xml_entities xslt_stylesheet xslt_typesdrew@li229-23\"\r\n);\r\n\r\nvar keywords_block = words(\r\n  /* ngxDirectiveBlock */ \"http mail events server types location upstream charset_map limit_except if geo map\"\r\n);\r\n\r\nvar keywords_important = words(\r\n  /* ngxDirectiveImportant */ \"include root server server_name listen internal proxy_pass memcached_pass fastcgi_pass try_files\"\r\n);\r\n\r\nvar type;\r\nfunction ret(style, tp) {type = tp; return style;}\r\n\r\nfunction tokenBase(stream, state) {\r\n\r\n\r\n  stream.eatWhile(/[\\w\\$_]/);\r\n\r\n  var cur = stream.current();\r\n\r\n\r\n  if (keywords.propertyIsEnumerable(cur)) {\r\n    return \"keyword\";\r\n  }\r\n  else if (keywords_block.propertyIsEnumerable(cur)) {\r\n    return \"controlKeyword\";\r\n  }\r\n  else if (keywords_important.propertyIsEnumerable(cur)) {\r\n    return \"controlKeyword\";\r\n  }\r\n  /**/\r\n\r\n  var ch = stream.next();\r\n  if (ch == \"@\") {stream.eatWhile(/[\\w\\\\\\-]/); return ret(\"meta\", stream.current());}\r\n  else if (ch == \"/\" && stream.eat(\"*\")) {\r\n    state.tokenize = tokenCComment;\r\n    return tokenCComment(stream, state);\r\n  }\r\n  else if (ch == \"<\" && stream.eat(\"!\")) {\r\n    state.tokenize = tokenSGMLComment;\r\n    return tokenSGMLComment(stream, state);\r\n  }\r\n  else if (ch == \"=\") ret(null, \"compare\");\r\n  else if ((ch == \"~\" || ch == \"|\") && stream.eat(\"=\")) return ret(null, \"compare\");\r\n  else if (ch == \"\\\"\" || ch == \"'\") {\r\n    state.tokenize = tokenString(ch);\r\n    return state.tokenize(stream, state);\r\n  }\r\n  else if (ch == \"#\") {\r\n    stream.skipToEnd();\r\n    return ret(\"comment\", \"comment\");\r\n  }\r\n  else if (ch == \"!\") {\r\n    stream.match(/^\\s*\\w*/);\r\n    return ret(\"keyword\", \"important\");\r\n  }\r\n  else if (/\\d/.test(ch)) {\r\n    stream.eatWhile(/[\\w.%]/);\r\n    return ret(\"number\", \"unit\");\r\n  }\r\n  else if (/[,.+>*\\/]/.test(ch)) {\r\n    return ret(null, \"select-op\");\r\n  }\r\n  else if (/[;{}:\\[\\]]/.test(ch)) {\r\n    return ret(null, ch);\r\n  }\r\n  else {\r\n    stream.eatWhile(/[\\w\\\\\\-]/);\r\n    return ret(\"variable\", \"variable\");\r\n  }\r\n}\r\n\r\nfunction tokenCComment(stream, state) {\r\n  var maybeEnd = false, ch;\r\n  while ((ch = stream.next()) != null) {\r\n    if (maybeEnd && ch == \"/\") {\r\n      state.tokenize = tokenBase;\r\n      break;\r\n    }\r\n    maybeEnd = (ch == \"*\");\r\n  }\r\n  return ret(\"comment\", \"comment\");\r\n}\r\n\r\nfunction tokenSGMLComment(stream, state) {\r\n  var dashes = 0, ch;\r\n  while ((ch = stream.next()) != null) {\r\n    if (dashes >= 2 && ch == \">\") {\r\n      state.tokenize = tokenBase;\r\n      break;\r\n    }\r\n    dashes = (ch == \"-\") ? dashes + 1 : 0;\r\n  }\r\n  return ret(\"comment\", \"comment\");\r\n}\r\n\r\nfunction tokenString(quote) {\r\n  return function(stream, state) {\r\n    var escaped = false, ch;\r\n    while ((ch = stream.next()) != null) {\r\n      if (ch == quote && !escaped)\r\n        break;\r\n      escaped = !escaped && ch == \"\\\\\";\r\n    }\r\n    if (!escaped) state.tokenize = tokenBase;\r\n    return ret(\"string\", \"string\");\r\n  };\r\n}\r\n\r\nexport const nginx = {\r\n  name: \"nginx\",\r\n  startState: function() {\r\n    return {tokenize: tokenBase,\r\n            baseIndent: 0,\r\n            stack: []};\r\n  },\r\n\r\n  token: function(stream, state) {\r\n    if (stream.eatSpace()) return null;\r\n    type = null;\r\n    var style = state.tokenize(stream, state);\r\n\r\n    var context = state.stack[state.stack.length-1];\r\n    if (type == \"hash\" && context == \"rule\") style = \"atom\";\r\n    else if (style == \"variable\") {\r\n      if (context == \"rule\") style = \"number\";\r\n      else if (!context || context == \"@media{\") style = \"tag\";\r\n    }\r\n\r\n    if (context == \"rule\" && /^[\\{\\};]$/.test(type))\r\n      state.stack.pop();\r\n    if (type == \"{\") {\r\n      if (context == \"@media\") state.stack[state.stack.length-1] = \"@media{\";\r\n      else state.stack.push(\"{\");\r\n    }\r\n    else if (type == \"}\") state.stack.pop();\r\n    else if (type == \"@media\") state.stack.push(\"@media\");\r\n    else if (context == \"{\" && type != \"comment\") state.stack.push(\"rule\");\r\n    return style;\r\n  },\r\n\r\n  indent: function(state, textAfter, cx) {\r\n    var n = state.stack.length;\r\n    if (/^\\}/.test(textAfter))\r\n      n -= state.stack[state.stack.length-1] == \"rule\" ? 2 : 1;\r\n    return state.baseIndent + n * cx.unit;\r\n  },\r\n\r\n  languageData: {\r\n    indentOnInput: /^\\s*\\}$/\r\n  }\r\n};\r\n"],
  "mappings": "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",
  "names": ["words"]
}
