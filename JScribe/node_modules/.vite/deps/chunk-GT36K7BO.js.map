{
  "version": 3,
  "sources": ["../../@codemirror/legacy-modes/mode/vhdl.js"],
  "sourcesContent": ["function words(str) {\r\n  var obj = {}, words = str.split(\",\");\r\n  for (var i = 0; i < words.length; ++i) {\r\n    var allCaps = words[i].toUpperCase();\r\n    var firstCap = words[i].charAt(0).toUpperCase() + words[i].slice(1);\r\n    obj[words[i]] = true;\r\n    obj[allCaps] = true;\r\n    obj[firstCap] = true;\r\n  }\r\n  return obj;\r\n}\r\n\r\nfunction metaHook(stream) {\r\n  stream.eatWhile(/[\\w\\$_]/);\r\n  return \"meta\";\r\n}\r\n\r\nvar atoms = words(\"null\"),\r\n    hooks = {\"`\": metaHook, \"$\": metaHook},\r\n    multiLineStrings = false;\r\n\r\nvar keywords = words(\"abs,access,after,alias,all,and,architecture,array,assert,attribute,begin,block,\" +\r\n                     \"body,buffer,bus,case,component,configuration,constant,disconnect,downto,else,elsif,end,end block,end case,\" +\r\n                     \"end component,end for,end generate,end if,end loop,end process,end record,end units,entity,exit,file,for,\" +\r\n                     \"function,generate,generic,generic map,group,guarded,if,impure,in,inertial,inout,is,label,library,linkage,\" +\r\n                     \"literal,loop,map,mod,nand,new,next,nor,null,of,on,open,or,others,out,package,package body,port,port map,\" +\r\n                     \"postponed,procedure,process,pure,range,record,register,reject,rem,report,return,rol,ror,select,severity,signal,\" +\r\n                     \"sla,sll,sra,srl,subtype,then,to,transport,type,unaffected,units,until,use,variable,wait,when,while,with,xnor,xor\");\r\n\r\nvar blockKeywords = words(\"architecture,entity,begin,case,port,else,elsif,end,for,function,if\");\r\n\r\nvar isOperatorChar = /[&|~><!\\)\\(*#%@+\\/=?\\:;}{,\\.\\^\\-\\[\\]]/;\r\nvar curPunc;\r\n\r\nfunction tokenBase(stream, state) {\r\n  var ch = stream.next();\r\n  if (hooks[ch]) {\r\n    var result = hooks[ch](stream, state);\r\n    if (result !== false) return result;\r\n  }\r\n  if (ch == '\"') {\r\n    state.tokenize = tokenString2(ch);\r\n    return state.tokenize(stream, state);\r\n  }\r\n  if (ch == \"'\") {\r\n    state.tokenize = tokenString(ch);\r\n    return state.tokenize(stream, state);\r\n  }\r\n  if (/[\\[\\]{}\\(\\),;\\:\\.]/.test(ch)) {\r\n    curPunc = ch;\r\n    return null;\r\n  }\r\n  if (/[\\d']/.test(ch)) {\r\n    stream.eatWhile(/[\\w\\.']/);\r\n    return \"number\";\r\n  }\r\n  if (ch == \"-\") {\r\n    if (stream.eat(\"-\")) {\r\n      stream.skipToEnd();\r\n      return \"comment\";\r\n    }\r\n  }\r\n  if (isOperatorChar.test(ch)) {\r\n    stream.eatWhile(isOperatorChar);\r\n    return \"operator\";\r\n  }\r\n  stream.eatWhile(/[\\w\\$_]/);\r\n  var cur = stream.current();\r\n  if (keywords.propertyIsEnumerable(cur.toLowerCase())) {\r\n    if (blockKeywords.propertyIsEnumerable(cur)) curPunc = \"newstatement\";\r\n    return \"keyword\";\r\n  }\r\n  if (atoms.propertyIsEnumerable(cur)) return \"atom\";\r\n  return \"variable\";\r\n}\r\n\r\nfunction tokenString(quote) {\r\n  return function(stream, state) {\r\n    var escaped = false, next, end = false;\r\n    while ((next = stream.next()) != null) {\r\n      if (next == quote && !escaped) {end = true; break;}\r\n      escaped = !escaped && next == \"--\";\r\n    }\r\n    if (end || !(escaped || multiLineStrings))\r\n      state.tokenize = tokenBase;\r\n    return \"string\";\r\n  };\r\n}\r\nfunction tokenString2(quote) {\r\n  return function(stream, state) {\r\n    var escaped = false, next, end = false;\r\n    while ((next = stream.next()) != null) {\r\n      if (next == quote && !escaped) {end = true; break;}\r\n      escaped = !escaped && next == \"--\";\r\n    }\r\n    if (end || !(escaped || multiLineStrings))\r\n      state.tokenize = tokenBase;\r\n    return \"string.special\";\r\n  };\r\n}\r\n\r\nfunction Context(indented, column, type, align, prev) {\r\n  this.indented = indented;\r\n  this.column = column;\r\n  this.type = type;\r\n  this.align = align;\r\n  this.prev = prev;\r\n}\r\nfunction pushContext(state, col, type) {\r\n  return state.context = new Context(state.indented, col, type, null, state.context);\r\n}\r\nfunction popContext(state) {\r\n  var t = state.context.type;\r\n  if (t == \")\" || t == \"]\" || t == \"}\")\r\n    state.indented = state.context.indented;\r\n  return state.context = state.context.prev;\r\n}\r\n\r\n// Interface\r\nexport const vhdl = {\r\n  name: \"vhdl\",\r\n  startState: function(indentUnit) {\r\n    return {\r\n      tokenize: null,\r\n      context: new Context(-indentUnit, 0, \"top\", false),\r\n      indented: 0,\r\n      startOfLine: true\r\n    };\r\n  },\r\n\r\n  token: function(stream, state) {\r\n    var ctx = state.context;\r\n    if (stream.sol()) {\r\n      if (ctx.align == null) ctx.align = false;\r\n      state.indented = stream.indentation();\r\n      state.startOfLine = true;\r\n    }\r\n    if (stream.eatSpace()) return null;\r\n    curPunc = null;\r\n    var style = (state.tokenize || tokenBase)(stream, state);\r\n    if (style == \"comment\" || style == \"meta\") return style;\r\n    if (ctx.align == null) ctx.align = true;\r\n\r\n    if ((curPunc == \";\" || curPunc == \":\") && ctx.type == \"statement\") popContext(state);\r\n    else if (curPunc == \"{\") pushContext(state, stream.column(), \"}\");\r\n    else if (curPunc == \"[\") pushContext(state, stream.column(), \"]\");\r\n    else if (curPunc == \"(\") pushContext(state, stream.column(), \")\");\r\n    else if (curPunc == \"}\") {\r\n      while (ctx.type == \"statement\") ctx = popContext(state);\r\n      if (ctx.type == \"}\") ctx = popContext(state);\r\n      while (ctx.type == \"statement\") ctx = popContext(state);\r\n    }\r\n    else if (curPunc == ctx.type) popContext(state);\r\n    else if (ctx.type == \"}\" || ctx.type == \"top\" || (ctx.type == \"statement\" && curPunc == \"newstatement\"))\r\n      pushContext(state, stream.column(), \"statement\");\r\n    state.startOfLine = false;\r\n    return style;\r\n  },\r\n\r\n  indent: function(state, textAfter, cx) {\r\n    if (state.tokenize != tokenBase && state.tokenize != null) return 0;\r\n    var firstChar = textAfter && textAfter.charAt(0), ctx = state.context, closing = firstChar == ctx.type;\r\n    if (ctx.type == \"statement\") return ctx.indented + (firstChar == \"{\" ? 0 : cx.unit);\r\n    else if (ctx.align) return ctx.column + (closing ? 0 : 1);\r\n    else return ctx.indented + (closing ? 0 : cx.unit);\r\n  },\r\n\r\n  languageData: {\r\n    indentOnInput: /^\\s*[{}]$/,\r\n    commentTokens: {line: \"--\"}\r\n  }\r\n}\r\n"],
  "mappings": ";AAAA,SAAS,MAAM,KAAK;AAClB,MAAI,MAAM,CAAC,GAAGA,SAAQ,IAAI,MAAM,GAAG;AACnC,WAAS,IAAI,GAAG,IAAIA,OAAM,QAAQ,EAAE,GAAG;AACrC,QAAI,UAAUA,OAAM,CAAC,EAAE,YAAY;AACnC,QAAI,WAAWA,OAAM,CAAC,EAAE,OAAO,CAAC,EAAE,YAAY,IAAIA,OAAM,CAAC,EAAE,MAAM,CAAC;AAClE,QAAIA,OAAM,CAAC,CAAC,IAAI;AAChB,QAAI,OAAO,IAAI;AACf,QAAI,QAAQ,IAAI;AAAA,EAClB;AACA,SAAO;AACT;AAEA,SAAS,SAAS,QAAQ;AACxB,SAAO,SAAS,SAAS;AACzB,SAAO;AACT;AAEA,IAAI,QAAQ,MAAM,MAAM;AAAxB,IACI,QAAQ,EAAC,KAAK,UAAU,KAAK,SAAQ;AADzC,IAEI,mBAAmB;AAEvB,IAAI,WAAW,MAAM,otBAMkH;AAEvI,IAAI,gBAAgB,MAAM,oEAAoE;AAE9F,IAAI,iBAAiB;AACrB,IAAI;AAEJ,SAAS,UAAU,QAAQ,OAAO;AAChC,MAAI,KAAK,OAAO,KAAK;AACrB,MAAI,MAAM,EAAE,GAAG;AACb,QAAI,SAAS,MAAM,EAAE,EAAE,QAAQ,KAAK;AACpC,QAAI,WAAW,MAAO,QAAO;AAAA,EAC/B;AACA,MAAI,MAAM,KAAK;AACb,UAAM,WAAW,aAAa,EAAE;AAChC,WAAO,MAAM,SAAS,QAAQ,KAAK;AAAA,EACrC;AACA,MAAI,MAAM,KAAK;AACb,UAAM,WAAW,YAAY,EAAE;AAC/B,WAAO,MAAM,SAAS,QAAQ,KAAK;AAAA,EACrC;AACA,MAAI,qBAAqB,KAAK,EAAE,GAAG;AACjC,cAAU;AACV,WAAO;AAAA,EACT;AACA,MAAI,QAAQ,KAAK,EAAE,GAAG;AACpB,WAAO,SAAS,SAAS;AACzB,WAAO;AAAA,EACT;AACA,MAAI,MAAM,KAAK;AACb,QAAI,OAAO,IAAI,GAAG,GAAG;AACnB,aAAO,UAAU;AACjB,aAAO;AAAA,IACT;AAAA,EACF;AACA,MAAI,eAAe,KAAK,EAAE,GAAG;AAC3B,WAAO,SAAS,cAAc;AAC9B,WAAO;AAAA,EACT;AACA,SAAO,SAAS,SAAS;AACzB,MAAI,MAAM,OAAO,QAAQ;AACzB,MAAI,SAAS,qBAAqB,IAAI,YAAY,CAAC,GAAG;AACpD,QAAI,cAAc,qBAAqB,GAAG,EAAG,WAAU;AACvD,WAAO;AAAA,EACT;AACA,MAAI,MAAM,qBAAqB,GAAG,EAAG,QAAO;AAC5C,SAAO;AACT;AAEA,SAAS,YAAY,OAAO;AAC1B,SAAO,SAAS,QAAQ,OAAO;AAC7B,QAAI,UAAU,OAAO,MAAM,MAAM;AACjC,YAAQ,OAAO,OAAO,KAAK,MAAM,MAAM;AACrC,UAAI,QAAQ,SAAS,CAAC,SAAS;AAAC,cAAM;AAAM;AAAA,MAAM;AAClD,gBAAU,CAAC,WAAW,QAAQ;AAAA,IAChC;AACA,QAAI,OAAO,EAAE,WAAW;AACtB,YAAM,WAAW;AACnB,WAAO;AAAA,EACT;AACF;AACA,SAAS,aAAa,OAAO;AAC3B,SAAO,SAAS,QAAQ,OAAO;AAC7B,QAAI,UAAU,OAAO,MAAM,MAAM;AACjC,YAAQ,OAAO,OAAO,KAAK,MAAM,MAAM;AACrC,UAAI,QAAQ,SAAS,CAAC,SAAS;AAAC,cAAM;AAAM;AAAA,MAAM;AAClD,gBAAU,CAAC,WAAW,QAAQ;AAAA,IAChC;AACA,QAAI,OAAO,EAAE,WAAW;AACtB,YAAM,WAAW;AACnB,WAAO;AAAA,EACT;AACF;AAEA,SAAS,QAAQ,UAAU,QAAQ,MAAM,OAAO,MAAM;AACpD,OAAK,WAAW;AAChB,OAAK,SAAS;AACd,OAAK,OAAO;AACZ,OAAK,QAAQ;AACb,OAAK,OAAO;AACd;AACA,SAAS,YAAY,OAAO,KAAK,MAAM;AACrC,SAAO,MAAM,UAAU,IAAI,QAAQ,MAAM,UAAU,KAAK,MAAM,MAAM,MAAM,OAAO;AACnF;AACA,SAAS,WAAW,OAAO;AACzB,MAAI,IAAI,MAAM,QAAQ;AACtB,MAAI,KAAK,OAAO,KAAK,OAAO,KAAK;AAC/B,UAAM,WAAW,MAAM,QAAQ;AACjC,SAAO,MAAM,UAAU,MAAM,QAAQ;AACvC;AAGO,IAAM,OAAO;AAAA,EAClB,MAAM;AAAA,EACN,YAAY,SAAS,YAAY;AAC/B,WAAO;AAAA,MACL,UAAU;AAAA,MACV,SAAS,IAAI,QAAQ,CAAC,YAAY,GAAG,OAAO,KAAK;AAAA,MACjD,UAAU;AAAA,MACV,aAAa;AAAA,IACf;AAAA,EACF;AAAA,EAEA,OAAO,SAAS,QAAQ,OAAO;AAC7B,QAAI,MAAM,MAAM;AAChB,QAAI,OAAO,IAAI,GAAG;AAChB,UAAI,IAAI,SAAS,KAAM,KAAI,QAAQ;AACnC,YAAM,WAAW,OAAO,YAAY;AACpC,YAAM,cAAc;AAAA,IACtB;AACA,QAAI,OAAO,SAAS,EAAG,QAAO;AAC9B,cAAU;AACV,QAAI,SAAS,MAAM,YAAY,WAAW,QAAQ,KAAK;AACvD,QAAI,SAAS,aAAa,SAAS,OAAQ,QAAO;AAClD,QAAI,IAAI,SAAS,KAAM,KAAI,QAAQ;AAEnC,SAAK,WAAW,OAAO,WAAW,QAAQ,IAAI,QAAQ,YAAa,YAAW,KAAK;AAAA,aAC1E,WAAW,IAAK,aAAY,OAAO,OAAO,OAAO,GAAG,GAAG;AAAA,aACvD,WAAW,IAAK,aAAY,OAAO,OAAO,OAAO,GAAG,GAAG;AAAA,aACvD,WAAW,IAAK,aAAY,OAAO,OAAO,OAAO,GAAG,GAAG;AAAA,aACvD,WAAW,KAAK;AACvB,aAAO,IAAI,QAAQ,YAAa,OAAM,WAAW,KAAK;AACtD,UAAI,IAAI,QAAQ,IAAK,OAAM,WAAW,KAAK;AAC3C,aAAO,IAAI,QAAQ,YAAa,OAAM,WAAW,KAAK;AAAA,IACxD,WACS,WAAW,IAAI,KAAM,YAAW,KAAK;AAAA,aACrC,IAAI,QAAQ,OAAO,IAAI,QAAQ,SAAU,IAAI,QAAQ,eAAe,WAAW;AACtF,kBAAY,OAAO,OAAO,OAAO,GAAG,WAAW;AACjD,UAAM,cAAc;AACpB,WAAO;AAAA,EACT;AAAA,EAEA,QAAQ,SAAS,OAAO,WAAW,IAAI;AACrC,QAAI,MAAM,YAAY,aAAa,MAAM,YAAY,KAAM,QAAO;AAClE,QAAI,YAAY,aAAa,UAAU,OAAO,CAAC,GAAG,MAAM,MAAM,SAAS,UAAU,aAAa,IAAI;AAClG,QAAI,IAAI,QAAQ,YAAa,QAAO,IAAI,YAAY,aAAa,MAAM,IAAI,GAAG;AAAA,aACrE,IAAI,MAAO,QAAO,IAAI,UAAU,UAAU,IAAI;AAAA,QAClD,QAAO,IAAI,YAAY,UAAU,IAAI,GAAG;AAAA,EAC/C;AAAA,EAEA,cAAc;AAAA,IACZ,eAAe;AAAA,IACf,eAAe,EAAC,MAAM,KAAI;AAAA,EAC5B;AACF;",
  "names": ["words"]
}
