{
  "version": 3,
  "sources": ["../../@codemirror/legacy-modes/mode/fcl.js"],
  "sourcesContent": ["var keywords = {\r\n  \"term\": true,\r\n  \"method\": true, \"accu\": true,\r\n  \"rule\": true, \"then\": true, \"is\": true, \"and\": true, \"or\": true,\r\n  \"if\": true, \"default\": true\r\n};\r\n\r\nvar start_blocks = {\r\n  \"var_input\": true,\r\n  \"var_output\": true,\r\n  \"fuzzify\": true,\r\n  \"defuzzify\": true,\r\n  \"function_block\": true,\r\n  \"ruleblock\": true\r\n};\r\n\r\nvar end_blocks = {\r\n  \"end_ruleblock\": true,\r\n  \"end_defuzzify\": true,\r\n  \"end_function_block\": true,\r\n  \"end_fuzzify\": true,\r\n  \"end_var\": true\r\n};\r\n\r\nvar atoms = {\r\n  \"true\": true, \"false\": true, \"nan\": true,\r\n  \"real\": true, \"min\": true, \"max\": true, \"cog\": true, \"cogs\": true\r\n};\r\n\r\nvar isOperatorChar = /[+\\-*&^%:=<>!|\\/]/;\r\n\r\nfunction tokenBase(stream, state) {\r\n  var ch = stream.next();\r\n\r\n  if (/[\\d\\.]/.test(ch)) {\r\n    if (ch == \".\") {\r\n      stream.match(/^[0-9]+([eE][\\-+]?[0-9]+)?/);\r\n    } else if (ch == \"0\") {\r\n      stream.match(/^[xX][0-9a-fA-F]+/) || stream.match(/^0[0-7]+/);\r\n    } else {\r\n      stream.match(/^[0-9]*\\.?[0-9]*([eE][\\-+]?[0-9]+)?/);\r\n    }\r\n    return \"number\";\r\n  }\r\n\r\n  if (ch == \"/\" || ch == \"(\") {\r\n    if (stream.eat(\"*\")) {\r\n      state.tokenize = tokenComment;\r\n      return tokenComment(stream, state);\r\n    }\r\n    if (stream.eat(\"/\")) {\r\n      stream.skipToEnd();\r\n      return \"comment\";\r\n    }\r\n  }\r\n  if (isOperatorChar.test(ch)) {\r\n    stream.eatWhile(isOperatorChar);\r\n    return \"operator\";\r\n  }\r\n  stream.eatWhile(/[\\w\\$_\\xa1-\\uffff]/);\r\n\r\n  var cur = stream.current().toLowerCase();\r\n  if (keywords.propertyIsEnumerable(cur) ||\r\n      start_blocks.propertyIsEnumerable(cur) ||\r\n      end_blocks.propertyIsEnumerable(cur)) {\r\n    return \"keyword\";\r\n  }\r\n  if (atoms.propertyIsEnumerable(cur)) return \"atom\";\r\n  return \"variable\";\r\n}\r\n\r\n\r\nfunction tokenComment(stream, state) {\r\n  var maybeEnd = false, ch;\r\n  while (ch = stream.next()) {\r\n    if ((ch == \"/\" || ch == \")\") && maybeEnd) {\r\n      state.tokenize = tokenBase;\r\n      break;\r\n    }\r\n    maybeEnd = (ch == \"*\");\r\n  }\r\n  return \"comment\";\r\n}\r\n\r\nfunction Context(indented, column, type, align, prev) {\r\n  this.indented = indented;\r\n  this.column = column;\r\n  this.type = type;\r\n  this.align = align;\r\n  this.prev = prev;\r\n}\r\n\r\nfunction pushContext(state, col, type) {\r\n  return state.context = new Context(state.indented, col, type, null, state.context);\r\n}\r\n\r\nfunction popContext(state) {\r\n  if (!state.context.prev) return;\r\n  var t = state.context.type;\r\n  if (t == \"end_block\")\r\n    state.indented = state.context.indented;\r\n  return state.context = state.context.prev;\r\n}\r\n\r\n// Interface\r\n\r\nexport const fcl = {\r\n  name: \"fcl\",\r\n  startState: function(indentUnit) {\r\n    return {\r\n      tokenize: null,\r\n      context: new Context(-indentUnit, 0, \"top\", false),\r\n      indented: 0,\r\n      startOfLine: true\r\n    };\r\n  },\r\n\r\n  token: function(stream, state) {\r\n    var ctx = state.context;\r\n    if (stream.sol()) {\r\n      if (ctx.align == null) ctx.align = false;\r\n      state.indented = stream.indentation();\r\n      state.startOfLine = true;\r\n    }\r\n    if (stream.eatSpace()) return null;\r\n\r\n    var style = (state.tokenize || tokenBase)(stream, state);\r\n    if (style == \"comment\") return style;\r\n    if (ctx.align == null) ctx.align = true;\r\n\r\n    var cur = stream.current().toLowerCase();\r\n\r\n    if (start_blocks.propertyIsEnumerable(cur)) pushContext(state, stream.column(), \"end_block\");\r\n    else if (end_blocks.propertyIsEnumerable(cur))  popContext(state);\r\n\r\n    state.startOfLine = false;\r\n    return style;\r\n  },\r\n\r\n  indent: function(state, textAfter, cx) {\r\n    if (state.tokenize != tokenBase && state.tokenize != null) return 0;\r\n    var ctx = state.context;\r\n\r\n    var closing = end_blocks.propertyIsEnumerable(textAfter);\r\n    if (ctx.align) return ctx.column + (closing ? 0 : 1);\r\n    else return ctx.indented + (closing ? 0 : cx.unit);\r\n  },\r\n\r\n  languageData: {\r\n    commentTokens: {line: \"//\", block: {open: \"(*\", close: \"*)\"}}\r\n  }\r\n};\r\n\r\n"],
  "mappings": "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",
  "names": []
}
