{
  "version": 3,
  "sources": ["../../@codemirror/legacy-modes/mode/simple-mode.js"],
  "sourcesContent": ["export function simpleMode(states) {\r\n  ensureState(states, \"start\");\r\n  var states_ = {}, meta = states.languageData || {}, hasIndentation = false;\r\n  for (var state in states) if (state != meta && states.hasOwnProperty(state)) {\r\n    var list = states_[state] = [], orig = states[state];\r\n    for (var i = 0; i < orig.length; i++) {\r\n      var data = orig[i];\r\n      list.push(new Rule(data, states));\r\n      if (data.indent || data.dedent) hasIndentation = true;\r\n    }\r\n  }\r\n  return {\r\n    name: meta.name,\r\n    startState: function() {\r\n      return {state: \"start\", pending: null, indent: hasIndentation ? [] : null};\r\n    },\r\n    copyState: function(state) {\r\n      var s = {state: state.state, pending: state.pending, indent: state.indent && state.indent.slice(0)};\r\n      if (state.stack)\r\n        s.stack = state.stack.slice(0);\r\n      return s;\r\n    },\r\n    token: tokenFunction(states_),\r\n    indent: indentFunction(states_, meta),\r\n    languageData: meta\r\n  }\r\n};\r\n\r\nfunction ensureState(states, name) {\r\n  if (!states.hasOwnProperty(name))\r\n    throw new Error(\"Undefined state \" + name + \" in simple mode\");\r\n}\r\n\r\nfunction toRegex(val, caret) {\r\n  if (!val) return /(?:)/;\r\n  var flags = \"\";\r\n  if (val instanceof RegExp) {\r\n    if (val.ignoreCase) flags = \"i\";\r\n    val = val.source;\r\n  } else {\r\n    val = String(val);\r\n  }\r\n  return new RegExp((caret === false ? \"\" : \"^\") + \"(?:\" + val + \")\", flags);\r\n}\r\n\r\nfunction asToken(val) {\r\n  if (!val) return null;\r\n  if (val.apply) return val\r\n  if (typeof val == \"string\") return val.replace(/\\./g, \" \");\r\n  var result = [];\r\n  for (var i = 0; i < val.length; i++)\r\n    result.push(val[i] && val[i].replace(/\\./g, \" \"));\r\n  return result;\r\n}\r\n\r\nfunction Rule(data, states) {\r\n  if (data.next || data.push) ensureState(states, data.next || data.push);\r\n  this.regex = toRegex(data.regex);\r\n  this.token = asToken(data.token);\r\n  this.data = data;\r\n}\r\n\r\nfunction tokenFunction(states) {\r\n  return function(stream, state) {\r\n    if (state.pending) {\r\n      var pend = state.pending.shift();\r\n      if (state.pending.length == 0) state.pending = null;\r\n      stream.pos += pend.text.length;\r\n      return pend.token;\r\n    }\r\n\r\n    var curState = states[state.state];\r\n    for (var i = 0; i < curState.length; i++) {\r\n      var rule = curState[i];\r\n      var matches = (!rule.data.sol || stream.sol()) && stream.match(rule.regex);\r\n      if (matches) {\r\n        if (rule.data.next) {\r\n          state.state = rule.data.next;\r\n        } else if (rule.data.push) {\r\n          (state.stack || (state.stack = [])).push(state.state);\r\n          state.state = rule.data.push;\r\n        } else if (rule.data.pop && state.stack && state.stack.length) {\r\n          state.state = state.stack.pop();\r\n        }\r\n\r\n        if (rule.data.indent)\r\n          state.indent.push(stream.indentation() + stream.indentUnit);\r\n        if (rule.data.dedent)\r\n          state.indent.pop();\r\n        var token = rule.token\r\n        if (token && token.apply) token = token(matches)\r\n        if (matches.length > 2 && rule.token && typeof rule.token != \"string\") {\r\n          state.pending = [];\r\n          for (var j = 2; j < matches.length; j++)\r\n            if (matches[j])\r\n              state.pending.push({text: matches[j], token: rule.token[j - 1]});\r\n          stream.backUp(matches[0].length - (matches[1] ? matches[1].length : 0));\r\n          return token[0];\r\n        } else if (token && token.join) {\r\n          return token[0];\r\n        } else {\r\n          return token;\r\n        }\r\n      }\r\n    }\r\n    stream.next();\r\n    return null;\r\n  };\r\n}\r\n\r\nfunction indentFunction(states, meta) {\r\n  return function(state, textAfter) {\r\n    if (state.indent == null || meta.dontIndentStates && meta.doneIndentState.indexOf(state.state) > -1)\r\n      return null\r\n\r\n    var pos = state.indent.length - 1, rules = states[state.state];\r\n    scan: for (;;) {\r\n      for (var i = 0; i < rules.length; i++) {\r\n        var rule = rules[i];\r\n        if (rule.data.dedent && rule.data.dedentIfLineStart !== false) {\r\n          var m = rule.regex.exec(textAfter);\r\n          if (m && m[0]) {\r\n            pos--;\r\n            if (rule.next || rule.push) rules = states[rule.next || rule.push];\r\n            textAfter = textAfter.slice(m[0].length);\r\n            continue scan;\r\n          }\r\n        }\r\n      }\r\n      break;\r\n    }\r\n    return pos < 0 ? 0 : state.indent[pos];\r\n  };\r\n}\r\n"],
  "mappings": "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",
  "names": ["state"]
}
